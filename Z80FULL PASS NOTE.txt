Z80FULL by Patrik Rak note:

In order to pass Q a few things needed:

 Since Q is not a register, but merely a bit of ALU state,
 it is needed to set a variable,say DSA (defined alu state) 
 that indicates that ALU acted in DEFINED state.
 With microcode usage all uops like add,sub,cpl,scf,ccf etc set this variable to 1
 At each M1 first cycle copy DSA value to another variable,say Q, and reset DSA
 So, all SCF and CCF opcodes always use ALU in undefined state, and do OR of 5/3 flags
 And if Q arise, then do COPY of 5/3 flags
 Since SCF and CCF set DSA themselves, concatenation of SCF+CCF works too
 This Q affect only SCF/CCF opcodes  
 That is all.
 
In order to pass INIR / OUTI group :

A few sources state some hints about pv flag behavior,
like Pedro Gimeno method, yet the working one is this 

  INIR use Z of WZ, and OTIR use L of HL to load ALU with
  INIR read port to T, and OTIR write to port value of (HL) via T
  
  ((ALU+T) and &b00000111) xor B of BC, and parity of this number is P
  
  First is alu loading, then ADD operation of ALU with T, which set N/C/H flags
  and then XOR operation with B, which works only for first nibble, that is why "and 7" used 
  
  So INIR/OTIR do two ALU ops, after dec B, these run in undefined state of ALU, i.e. quirks
  Looks like Z80 incomplelety shun ALU operations
  Also raising Q or resetting Q after them do not affect CRC in test.	

 