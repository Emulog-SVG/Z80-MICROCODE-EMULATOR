'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' USE DAT, DO ALIGNED ALLOCATION
Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr Static 
OFFS-=1:Dim As ULongInt V1,V2,V3,USED=0:If USED=0 Then MEMCUR=@DAT(0)
Do:V1=MEMCUR:V1 And=OFFS:MEMCUR+=1:Loop While V1<>0:MEMCUR-=1:V2=MEMCUR:MEMCUR+=SIZE:USED=MEMCUR-(@DAT(0)):Return ByVal V2'Print "FOUND AS ";;Hex$(V2);", MARGIN: ";OFFS+1;", SIZE: ";SIZE;", END AT: ";USED:Sleep
End Function
' MAIN Z80 MNEMONICS, AUTOINIT, ORDER OF ADDITION MAIN=0,XDD=256,XFD=512,XCB=768,XED=1024,XDDCB=1280,XFDCB=1536
Function MNEM(XTEMP As ULong)As String
Static As Unsigned Long XMNEM(4096),XMLEN(4096),SCAN=0,T1,T2,T3=1,T4,T5,T6:Static As String F$,M$:Static As FILE Ptr filePtr
If SCAN Then GoTo MNEMOK Else SCAN=1:M$=STRING(32768,33):F$="EMU_OPCODES.EXT"
filePtr=fopen(F$,"rb"):T1=fread(StrPtr(M),FileLen(F$),1,FILEPTR):fclose (fileptr)
DUM:For T1=0 To 7:For T2=0 To 255:T4=0:T5=0:Do:If Mid$(M$,T3+T4,1)="_" Then T5=1 Else T4+=1
If Mid$(M$,T3+T4,1)="!" Then GoTo MNEMOK
DUM:Loop While T5=0:T6=(T1 Shl 8)+T2:XMNEM(T6)=T3:XMLEN(T6)=T4:T3=T3+T4+1+1+1:Next:Next' ASSUME OD OA NOT ONLY OD
MNEMOK:Return ByVal Mid$(M$,XMNEM(XTEMP),XMLEN(XTEMP)) 
End Function
' UOPS MNEMONICS AUTOINIT, CODED FROM 0...346 AWHILE
Function UOPS(XUOP As ULong)As String
Static As Unsigned Long UOPN(1024),UOPL(1024),SCAN=0,T1=1,T2,T3=1,T4,T5,T6:Static As String F$,U$:Static As FILE Ptr filePtr
If SCAN Then GoTo UOPSOK Else SCAN=1:U$=STRING(32768,33):F$="EMU_UOPS.EXT"
filePtr=fopen(F$,"rb"):T1=fread(StrPtr(U),FileLen(F$),1,FILEPTR):fclose (fileptr)
T3=1:Do:T2=0:T5=1:Do:If Mid$(U$,T3+T2,1)="_" Then T5=0:T4=Val$(Mid$(U$,T3,T2)) Else T2+=1 ' FIND NUMBER OF ENTRY
DUM:Loop While T5:T3+=T2+1:T2=0:T5=1:Do:If Mid$(U$,T2+T3,1)="_" Then T5=0 Else T2+=1' GET WORD POS ' SEEK OFFS ' FIND TEXT OF ENTRY
DUM:Loop While T5:UOPN(T4)=T3:UOPL(T4)=T2:T3+=T2+1+1+1 ' ASSUME OD OA NOT ONLY OD
If Mid$(U$,T3,1)="!" Then T1=0 Else EndIf:Loop While T1
UOPSOK:Return ByVal Mid$(U$,UOPN(XUOP),UOPL(XUOP))
End Function
' MAKE SCROLL, LOCATE AND ERASE FREED PIXELS
Sub SCROLL(STX As ULong,STY As ULong,WDX As ULong,WDY As ULong,LC As ULong,CL As ULong)Static
Static As UByte Ptr B1,B2:Static As ULongInt Ptr P1,P2
Static As ULong HG,HX,LX,ZC,SX:Static As ULongInt E
Locate 0+((WDY+STY)/TWY),0+(STX/TWX)+1 
SX=SCRX Shl 2:WDX And=&HFFF8:STX And=&HFFF8:B1=ScreenPtr()+STX*4+STY*SX' MEET U64 COPY ' START PIX
B2=B1+LC*SX:HG=WDY-LC:ZC=LC:E=CL+(CL Shl 32)' OFFSET PIX ' HOW MUCH ' ERASE FREED LINES ' U64 RGBA ERASER COLOR
ScreenLock():Do:LX=WDX Shr 3:P1=B1:P2=B2:Do ' PER LINE PER CHUNK COPY ' 16 RGBA A TIME
*P1=*P2:P1+=1:P2+=1:*P1=*P2:P1+=1:P2+=1:*P1=*P2:P1+=1:P2+=1:*P1=*P2:P1+=1:P2+=1:
LX-=1:Loop While LX:B1+=SX:B2+=SX:HG-=1:Loop While HG
HG=ZC:Do:LX=WDX Shr 3:P1=B1:Do:*P1=E:P1+=1:*P1=E:P1+=1:*P1=E:P1+=1:*P1=E:P1+=1:' ERASE LINE
LX-=1:Loop While LX:B1+=SX:HG-=1:Loop While HG:ScreenUnLock()' ALL DONE AND UPDATE BY UNLOCK
End Sub
#Define SCROLLOC SCROLL(0,192,SCRX,SCRY-192-TWY-TWY,TWY,&H0F0F0F)
' SHOW 6912 SCREEN SCRSHOW(SCMUL As ULong,POSX As ULong,POSY As ULong), AUTOINIT
#Include "EMU_SCRSHOW.EXT"
'TEMPORARY LOAD AND SAVE BASICS
Sub LOADREAL () Static 
Static As FILE Ptr filePtr:filePtr = fopen("ELITE_REAL.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
X.ADDER=&H7459:X.PC=X.ADDER:X.CUR=X.START:X.PREFIX=0:X.STFEED=0:X.INTMODE=2:X.IFF1=1:X.PININT=0
X.I=&HFD:X.R=&H08:X.S=&HFF:X.P=&HFB:X.A=&H00:X.FLG=&H54:X.F=X.FLG:X.EAF=(&HA1 Shl 32)+&HA0 
X.B=&H00:X.C=&H00:X.EBC=(&HFF SHL 32)+&HFF:X.D=&H5D:X.E=&HE0:X.EDE=(&H3A SHL 32)+&H1F 
X.H=&HF4:X.L=&HE4:X.EHL=(&H03 SHL 32)+&H04:X.XH=&HFF:X.XL=&H00:X.YH=&H61:X.YL=&HCC:End Sub
Sub LOADBIN () Static 
STATIC As FILE Ptr filePtr:filePtr = fopen("ELITE_PFULL.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
X.ADDER=&H8000:X.PC=X.ADDER:X.CUR=X.START:X.PREFIX=0:X.STFEED=0:X.INTMODE=1:X.IFF1=0:X.PININT=0:
X.A=&H41:X.FLG=&H14:X.F=X.FLG:X.EAF=(&HA9 SHL 32)+&HAC:X.B=&H10:X.C=&HCC:X.EBC=(&H20 SHL 32)+&HB3
X.D=&HDD:X.E=&HEE:X.EDE=(&HB3 SHL 32)+&H56:X.H=&H88:X.L=&H00:X.EHL=(&H87 SHL 32)+&H75 
X.XH=&H03:X.XL=&HD4:X.YH=&H5C:X.YL=&H3A:X.I=&HA9:X.R=&H00:X.S=&H7F:X.P=&HF0:End Sub
Sub SAVEBIN () Static 
STATIC As FILE Ptr filePtr:Static As UByte Ptr A1,A2,A3:filePtr = fopen("ELITE_TEST.BIN", "wb"):
T1=fwrite(PMEM,65536,1, fileptr)
A1=VarPtr(X.TFIRST):A2=VarPtr(X.TLAST):T1=fwrite(A1,A2-A1,1, fileptr)::fclose (fileptr):End Sub
Sub RELOADBIN () Static 
STATIC As FILE Ptr filePtr:Static As UByte Ptr A1,A2,A3:Static As String F$,U$:F$="ELITE_TEST.BIN"
filePtr=fopen(F$,"rb"):T1=fREAD(PMEM,65536,1, fileptr):
A1=VarPtr(X.TFIRST):T1=fREAD(A1,FileLen(F$)-65536,1, fileptr):fclose (fileptr):End Sub
