
' DO OPERATORS
Select Case As Const XUOP 
' ERROR TRACKING, ALL REAL OPERATORS NONZERO - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 0: XERR+=1:D$="ERROR ZERO":Print:Print D$:Sleep:GoTo ENDJT
' SET ADDRESS BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 1: XADDR=XC+(XB Shl 8):::' D$="UABC":GoTo ENDJT ' UABC
Case 2: XADDR=XE+(XD Shl 8):::' D$="UADE":GoTo ENDJT ' UADE
Case 3: XADDR=XL+(XH Shl 8):::' D$="UAHL":GoTo ENDJT ' UAHL
Case 4: XADDR=XZ+(XW Shl 8):::' D$="UAWZ":GoTo ENDJT ' UAWZ
Case 5: XADDR=XADDER::::::::::' D$="UAAD":GoTo ENDJT ' UAAD (ADDER)
Case 6: XADDR=XP+(XS Shl 8):::' D$="UASP":GoTo ENDJT ' UASP
Case 7: XADDR=XXL+(XXH Shl 8):' D$="UAIX":GoTo ENDJT ' UAIX
Case 8: XADDR=XYL+(XYH Shl 8):' D$="UAIY":GoTo ENDJT ' UAIY

'- - - UAPCI - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' USE XSUBST AS SOURCE TO CATCH WZ/RR
Case 9: XADDR=XSUBST:XADDER=((XSUBST+1)And &HFFFF):XPC=XADDER:XSUBST=XADDER:'D$="("+Hex$(XADDR,4)+")UAPCI":GoTo ENDJT ' UAPCI MASKED INC FIT 65536 BYTES WRAP

' - - - UFET - - - OPCODE FETCH - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 10: XCODE=*(PMEM+XADDR):PCUR=*(MAIN+XPREFIX+XCODE):PCUR+=XCUROFF:
'D$="("+Str(XPREFIX)+")"+"("+Str(PCUR-PMOS)+")"+"UFET="+Right(Str(XPREFIX Shr 8),1)+"#"+Hex$(XCODE,2):
If ISPFX=1 Then ISPFX=0:XCUROFF=XMAIN:XPREFIX=0 Else EndIf:
GoTo ENDJT 

' UAIRIUF DO UAIR, INC R, LD F,ALUF; R ONLY 7 BIT INCREASE, MSB UNCHANGED
Case 11: XADDR=XR+(XI Shl 8): XR=(XR And &B10000000)+((XR+1)And &B01111111):XF=XALUF:'D$="UAIRIUF":GoTo ENDJT' D$="UAIRIUF";XADDR;" ";XR

' URALF DO DUMMY REF AND LD ALUF,F
Case 12: XALUF=XF:D$="URALF":GoTo ENDJT

' ULTR LD T,REGISTER SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 13: XT=XB:' D$="ULTRB":GoTo ENDJT
Case 14: XT=XC:' D$="ULTRC":GoTo ENDJT
Case 15: XT=XD:' D$="ULTRD":GoTo ENDJT
Case 16: XT=XE:' D$="ULTRE":GoTo ENDJT
Case 17: XT=XH:' D$="ULTRH":GoTo ENDJT
Case 18: XT=XL: 'D$="ULTRL":GoTo ENDJT
Case 19: XALUF=XF:'D$="RESTORE UALF":GoTo ENDJT
Case 20: XT=XA: 'D$="ULTRA":GoTo ENDJT
' ULTR LD REGISTER,T SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 21: XB=XT: 'D$="ULRBT":GoTo ENDJT
Case 22: XC=XT: 'D$="ULRCT":GoTo ENDJT
Case 23: XD=XT: 'D$="ULRDT":GoTo ENDJT
Case 24: XE=XT: 'D$="ULRET":GoTo ENDJT
Case 25: XH=XT: 'D$="ULRHT":GoTo ENDJT
Case 26: XL=XT: 'D$="ULRLT":GoTo ENDJT
Case 27: ISHALT=1:'D$="WAIT INT UHALT":GoTo ENDJT
Case 28: XA=XT: 'D$="ULRAT":GoTo ENDJT
' URWR WRITE REGISTER TO MEMORY AWHILE SO, NEED CHANGE LAST UWCWs ALL TO ACTUAL WRITE 
Case 29: XBUS=XB: 'D$="UBWR":GoTo ENDJT
Case 30: XBUS=XC: 'D$="UCWR":GoTo ENDJT
Case 31: XBUS=XD: 'D$="UDWR":GoTo ENDJT
Case 32: XBUS=XE: 'D$="UEWR":GoTo ENDJT
Case 33: XBUS=XH: 'D$="UHWR":GoTo ENDJT
Case 34: XBUS=XL: 'D$="ULWR":GoTo ENDJT
Case 35: XBUS=XALU: 'D$="UOWR":GoTo ENDJT
Case 36: XBUS=XA: 'D$="UAWR":GoTo ENDJT
' MEM CYCLES AND ACT
Case 37: 'D$="URCW":GoTo ENDJT
Case 38: 'D$="UWCW":GoTo ENDJT
Case 39: *(PMEM+XADDR)=XBUS: 'D$="WRITE UDOW("+Hex$(XADDR,4)+")="+Hex$(XBUS,2):GoTo ENDJT
Case 40: 'D$="UNOP":GoTo ENDJT
Case 41: XT=*(PMEM+XADDR): 'D$="READ UTRD "+HEX$(XT,2)+"=("+Hex$(XADDR,4)+")":GoTo ENDJT
Case 42: XBUS=XT:' D$="UTWR":GoTo ENDJT
' SP BYTELY LOAD
Case 43: XP=XT: 'D$="ULSLT":GoTo ENDJT
Case 44: XS=XT: 'D$="ULSHT":GoTo ENDJT
' SOME W AND Z LOADS
'IULWE=45,IULWA=46,IULWT=47,IULZT=48,IULZN=49,IULW0=50
Case 45: XW=XA: 'D$="ULW ERRATIC":GoTo ENDJT
Case 46: XW=XA: 'D$="ULWA":GoTo ENDJT
Case 47: XW=XT: 'D$="ULWT":GoTo ENDJT
Case 48: XZ=XT: 'D$="ULZT":GoTo ENDJT
Case 49: XZ=XCODE And &B00111000:' D$="("+Hex$(XZ,2)+") ULZN":GoTo ENDJT
Case 50: XW=0: 'D$="NULL ULW0":GoTo ENDJT
' VIA ADDER INCREASES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' - - - - IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Case 51: XBYTE=XZ+(XW Shl 8):XBYTE+=1:XZ=XBYTE And &hFF:XBYTE Shr= 8:XW=XBYTE And &hFF:'D$="UWZI":GoTo ENDJT
Case 52: XBYTE=XC+(XB Shl 8):XBYTE+=1:XC=XBYTE And &hFF:XBYTE Shr= 8:XB=XBYTE And &hFF:'D$="UBCI":GoTo ENDJT
Case 53: XBYTE=XE+(XD Shl 8):XBYTE+=1:XE=XBYTE And &hFF:XBYTE Shr= 8:XD=XBYTE And &hFF:'D$="UDEI":GoTo ENDJT
Case 54: XBYTE=XL+(XH Shl 8):XBYTE+=1:XL=XBYTE And &hFF:XBYTE Shr= 8:XH=XBYTE And &hFF:'D$="UHLI":GoTo ENDJT
Case 55: XBYTE=XP+(XS Shl 8):XBYTE+=1:XP=XBYTE And &hFF:XBYTE Shr= 8:XS=XBYTE And &hFF:'D$="USPI":GoTo ENDJT
Case 56: XADDER+=1:XADDER And= &HFFFF:'D$="UADI":GoTo ENDJT
Case 57: XBYTE=XXL+(XXH Shl 8):XBYTE+=1:XXL=XBYTE And &hFF:XBYTE Shr= 8:XXH=XBYTE And &hFF:'D$="UIXI":GoTo ENDJT
Case 58: XBYTE=XYL+(XYH Shl 8):XBYTE+=1:XYL=XBYTE And &hFF:XBYTE Shr= 8:XYH=XBYTE And &hFF:'D$="UIYI":GoTo ENDJT
' VIA ADDER DECREASE CROSSLOADS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'- - - -  IUADIWZ=59,IUADIPC=60
Case 59: XADDER+=1:XBYTE=XADDER:XZ=XBYTE And &hFF:XBYTE Shr= 8:XW=XBYTE And &hFF:'D$="CROSS UADIWZ":GoTo ENDJT
Case 60: XPC=((XADDER+1)And &HFFFF):'D$="UADIPC INC TO PC":GoTo ENDJT
' VIA ADDER DECREASES AND UBCDPV  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68,IUIYD=69
Case 61: XADDER-=1:XADDER And= &HFFFF:D$="UADD":GoTo ENDJT
Case 62: XBYTE=XC+(XB Shl 8):XBYTE-=1:XC=XBYTE And &hFF:XBYTE Shr= 8:XB=XBYTE And &hFF:'D$="UBCD":GoTo ENDJT
Case 63: XBYTE=XC+(XB Shl 8):XBYTE-=1:XC=XBYTE And &hFF:XBYTE Shr= 8:XB=XBYTE And &hFF:XALUF And= &B11111011: If (XB+XC)=0 Then D$="(0)" Else D$="(1)":XALUF+=XFP: EndIf:'D$+="UBCDPV":GoTo ENDJT 'PV set if BC not 0 PE IS ZERO PO IS TRUE
Case 64: XBYTE=XE+(XD Shl 8):XBYTE-=1:XE=XBYTE And &hFF:XBYTE Shr= 8:XD=XBYTE And &hFF:'D$="UDED":GoTo ENDJT
Case 65: XBYTE=XL+(XH Shl 8):XBYTE-=1:XL=XBYTE And &hFF:XBYTE Shr= 8:XH=XBYTE And &hFF:'D$="UHLD":GoTo ENDJT
Case 66: XBYTE=XP+(XS Shl 8):XBYTE-=1:XP=XBYTE And &hFF:XBYTE Shr= 8:XS=XBYTE And &hFF:'D$="USPD":GoTo ENDJT
Case 67: XBYTE=XZ+(XW Shl 8):XBYTE-=1:XZ=XBYTE And &hFF:XBYTE Shr= 8:XW=XBYTE And &hFF:'D$="UWZD":GoTo ENDJT
Case 68: XBYTE=XXL+(XXH Shl 8):XBYTE-=1:XXL=XBYTE And &hFF:XBYTE Shr= 8:XXH=XBYTE And &hFF:'D$="UIXD":GoTo ENDJT
Case 69: XBYTE=XYL+(XYH Shl 8):XBYTE-=1:XYL=XBYTE And &hFF:XBYTE Shr= 8:XYH=XBYTE And &hFF:'D$="UIYD":GoTo ENDJT
' LOAD ADDER,RR - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77
Case 70: XADDER=XC+(XB Shl 8):'D$="ULDBC":GoTo ENDJT
Case 71: XADDER=XE+(XD Shl 8):'D$="ULDDE":GoTo ENDJT
Case 72: XADDER=XL+(XH Shl 8):'D$="ULDHL":GoTo ENDJT
Case 73: XADDER=XP+(XS Shl 8):'D$="ULDSP":GoTo ENDJT
Case 74: XADDER=XZ+(XW Shl 8):'D$="ULDWZ":GoTo ENDJT
Case 75: XADDER=XPC:'D$="ULDPC":GoTo ENDJT
Case 76: XADDER=XXL+(XXH Shl 8)':D$="ULDIX":GoTo ENDJT
Case 77: XADDER=XYL+(XYH Shl 8)':D$="ULDIY":GoTo ENDJT
' LOAD RR,ADDER - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULBCD=78,IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85
Case 78: XBYTE=XADDER:XC=XBYTE And &hFF:XBYTE Shr= 8:XB=XBYTE And &hFF:'D$="ULBCD":GoTo ENDJT
Case 79: XBYTE=XADDER:XE=XBYTE And &hFF:XBYTE Shr= 8:XD=XBYTE And &hFF:'D$="ULDED":GoTo ENDJT
Case 80: XBYTE=XADDER:XL=XBYTE And &hFF:XBYTE Shr= 8:XH=XBYTE And &hFF:'D$="ULHLD":GoTo ENDJT
Case 81: XBYTE=XADDER:XZ=XBYTE And &hFF:XBYTE Shr= 8:XW=XBYTE And &hFF:'D$="ULWZD":GoTo ENDJT
Case 82: XBYTE=XADDER:XP=XBYTE And &hFF:XBYTE Shr= 8:XS=XBYTE And &hFF:'D$="ULSPD":GoTo ENDJT
Case 83: XPC=XADDER:XSUBST=XADDER:'D$="ULPCD":GoTo ENDJT
Case 84: XBYTE=XADDER:XXL=XBYTE And &hFF:XBYTE Shr= 8:XXH=XBYTE And &hFF:'D$="ULIXD":GoTo ENDJT
Case 85: XBYTE=XADDER:XYL=XBYTE And &hFF:XBYTE Shr= 8:XYH=XBYTE And &hFF:'D$="ULIYD":GoTo ENDJT
' PREFIXES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'- -  IUPFDD=86,IUPFFD=87,IUPFCB=88,IUPFED=89,IUPFDC=90,IUPFFC=91 ' PREFIXES
Case 86: XPREFIX=XDD:ISPFX=1:XCUROFF=XMAIN:'D$="UPFDD #DD":GoTo ENDJT
Case 87: XPREFIX=XFD:ISPFX=1:XCUROFF=XMAIN:'D$="UPFFD #FD":GoTo ENDJT
Case 88: XPREFIX=XCB:ISPFX=1:XCUROFF=XMAIN:'D$="UPFCB #CB":GoTo ENDJT
Case 89: XPREFIX=XED:ISPFX=1:XCUROFF=XMAIN:'D$="UPFED #ED":GoTo ENDJT
Case 90: XPREFIX=XDDCB:ISPFX=1:XCUROFF=XXDCB:'D$="UPFDC #DDCB":GoTo ENDJT
Case 91: XPREFIX=XFDCB:ISPFX=1:XCUROFF=XXDCB:'D$="UPFFC #FDCB":GoTo ENDJT
' - - - EXTRA REGISTER SETUP DATA BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98,IUYLWR=99 ' EXTRA REGISTER WRITE TO MEM
Case 92: XBUS=XP: 'D$="USLWR":GoTo ENDJT
Case 93: XBUS=XS: 'D$="USHWR":GoTo ENDJT
Case 94: XBUS=(XPC And &HFF): 'D$="UPLWR":GoTo ENDJT
Case 95: XBUS=(XPC SHR 8): 'D$="UPHWR":GoTo ENDJT
Case 96: XBUS=XXH: 'D$="UXHWR":GoTo ENDJT
Case 97: XBUS=XXL: 'D$="UXLWR":GoTo ENDJT
Case 98: XBUS=XYH: 'D$="UYHWR":GoTo ENDJT
Case 99: XBUS=XYL: 'D$="UYLWR":GoTo ENDJT
' - - - LD ALU,R SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRA=106
' IULLRT=107,IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113
Case 100: XALU=XB: 'D$="ULLRB":GoTo ENDJT
Case 101: XALU=XC: 'D$="ULLRC":GoTo ENDJT
Case 102: XALU=XD: 'D$="ULLRD":GoTo ENDJT
Case 103: XALU=XE: 'D$="ULLRE":GoTo ENDJT
Case 104: XALU=XH: 'D$="ULLRH":GoTo ENDJT
Case 105: XALU=XL: 'D$="ULLRL":GoTo ENDJT
Case 106: XALU=XT: 'D$="ULLRT":GoTo ENDJT
Case 107: XALU=XA: 'D$="ULLRA":GoTo ENDJT
Case 108: XALU=XXL: 'D$="ULLXL":GoTo ENDJT
Case 109: XALU=XXH: 'D$="ULLXH":GoTo ENDJT
Case 110: XALU=XYL: 'D$="ULLYL":GoTo ENDJT
Case 111: XALU=XYH: 'D$="ULLYH":GoTo ENDJT
Case 112: XALU=XPC And &HFF: 'D$="ULLPL":GoTo ENDJT
Case 113: XALU=XPC Shr 8: 'D$="ULLPH":GoTo ENDJT
' - - - LD IR,A SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
' IULRIA=114,IULRRA=115
Case 114: XI=XA: 'D$="ULRIA":GoTo ENDJT
Case 115: XR=XA: 'D$="ULRRA":GoTo ENDJT
' - - - LD R,ALU SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULRBL=116,IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRAL=122
' IULRTL=123,IULRZL=124,IULRWL=125,IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129
Case 116: XB=XALU: 'D$="ULRBL":GoTo ENDJT
Case 117: XC=XALU: 'D$="ULRCL":GoTo ENDJT
Case 118: XD=XALU: 'D$="ULRDL":GoTo ENDJT
Case 119: XE=XALU: 'D$="ULREL":GoTo ENDJT
Case 120: XH=XALU: 'D$="ULRHL":GoTo ENDJT
Case 121: XL=XALU: 'D$="ULRLL":GoTo ENDJT
Case 122: XT=XALU: 'D$="ULRTL":GoTo ENDJT
Case 123: XA=XALU: 'D$="ULRAL":GoTo ENDJT
Case 124: XZ=XALU: 'D$="ULRZL":GoTo ENDJT
Case 125: XW=XALU: 'D$="ULRWL":GoTo ENDJT
Case 126: XXL=XALU:' D$="ULXLL":GoTo ENDJT
Case 127: XXH=XALU:' D$="ULXHL":GoTo ENDJT
Case 128: XYL=XALU:' D$="ULYLL":GoTo ENDJT
Case 129: XYH=XALU: 'D$="ULYHL":GoTo ENDJT
' - - TO FROM T TOSS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134,IULTXH=135,IULTXL=136,IULTYH=137,IULTYL=138
Case 130: XF=XT: 'D$="ULRFT":GoTo ENDJT
Case 131: XXL=XT:' D$="ULXLT":GoTo ENDJT
Case 132: XXH=XT:' D$="ULXHT":GoTo ENDJT
Case 133: XYL=XT:' D$="ULYHT":GoTo ENDJT
Case 134: XYH=XT:' D$="ULYLT":GoTo ENDJT
Case 135: XT=XXH:' D$="ULTXH":GoTo ENDJT
Case 136: XT=XXL:' D$="ULTXL":GoTo ENDJT
Case 137: XT=XYH:' D$="ULTYH":GoTo ENDJT
Case 138: XT=XYL:' D$="ULTYL":GoTo ENDJT
' - - ALU OP ADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBADD=139,IULTADD=145
Case 139: XALUF=*(PADD+(XALU SHL 1)+(XB Shl 9)):XALU=((XALU+XB) And &HFF):'D$="ULBADD":GoTo ENDJT
Case 140: XALUF=*(PADD+(XALU SHL 1)+(XC Shl 9)):XALU=((XALU+XC) And &HFF):'D$="ULCADD":GoTo ENDJT
Case 141: XALUF=*(PADD+(XALU SHL 1)+(XD Shl 9)):XALU=((XALU+XD) And &HFF):'D$="ULDADD":GoTo ENDJT
Case 142: XALUF=*(PADD+(XALU SHL 1)+(XE Shl 9)):XALU=((XALU+XE) And &HFF):'D$="ULEADD":GoTo ENDJT
Case 143: XALUF=*(PADD+(XALU SHL 1)+(XH Shl 9)):XALU=((XALU+XH) And &HFF):'D$="ULHADD":GoTo ENDJT
Case 144: XALUF=*(PADD+(XALU SHL 1)+(XL Shl 9)):XALU=((XALU+XL) And &HFF):'D$="ULLADD":GoTo ENDJT
Case 145: XALUF=*(PADD+(XALU SHL 1)+(XT Shl 9)):XALU=((XALU+XT) And &HFF):'D$="ULTADD":GoTo ENDJT
Case 146: XALUF=*(PADD+(XALU SHL 1)+(XA Shl 9)):XALU=((XALU+XA) And &HFF):'D$="ULAADD":GoTo ENDJT
' IULXADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULXSADD=147 ' X ORDER  SPH-SPL-IXH-IXL-IYH-IYL
Case 147: XALUF=*(PADD+(XALU SHL 1)+(XS Shl 9)):XALU=((XALU+XS) And &HFF):'D$="ULXSADD":GoTo ENDJT
Case 148: XALUF=*(PADD+(XALU SHL 1)+(XP Shl 9)):XALU=((XALU+XP) And &HFF):'D$="ULXPADD":GoTo ENDJT
Case 149: XALUF=*(PADD+(XALU SHL 1)+(XXH Shl 9)):XALU=((XALU+XXH) And &HFF):'D$="ULXHADD":GoTo ENDJT
Case 150: XALUF=*(PADD+(XALU SHL 1)+(XXL Shl 9)):XALU=((XALU+XXL) And &HFF):'D$="ULXLADD":GoTo ENDJT
Case 151: XALUF=*(PADD+(XALU SHL 1)+(XYH Shl 9)):XALU=((XALU+XYH) And &HFF):'D$="ULYHADD":GoTo ENDJT
Case 152: XALUF=*(PADD+(XALU SHL 1)+(XYL Shl 9)):XALU=((XALU+XYL) And &HFF):'D$="ULYLADD":GoTo ENDJT
' - - ALU OP ADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULBADC=153,IULTADC=159
Case 153: TEMP=(XB):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULBADC":GoTo ENDJT
Case 154: TEMP=(XC):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULCADC":GoTo ENDJT
Case 155: TEMP=(XD):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULDADC":GoTo ENDJT
Case 156: TEMP=(XE):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULEADC":GoTo ENDJT
Case 157: TEMP=(XH):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULHADC":GoTo ENDJT
Case 158: TEMP=(XL):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULLADC":GoTo ENDJT
Case 159: TEMP=(XT):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULTADC":GoTo ENDJT
Case 160: TEMP=(XA):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULAADC":GoTo ENDJT
' IULXADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSADC=161
Case 161: TEMP=(XS):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULXSADC":GoTo ENDJT
Case 162: TEMP=(XP):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF):'D$="ULXPADC":GoTo ENDJT
Case 163: TEMP=(XXH):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF)':D$="ULXHADC":GoTo ENDJT
Case 164: TEMP=(XXL):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF)':D$="ULXLADC":GoTo ENDJT
Case 165: TEMP=(XYH):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF)':D$="ULYHADC":GoTo ENDJT
Case 166: TEMP=(XYL):XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU+TEMP+ISFC) And &HFF)':D$="ULYLADC":GoTo ENDJT
' IULRSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBSUB=167,IULTSUB=173
Case 167: XALUF=*(PSUB+(XALU SHL 1)+(XB Shl 9)):XALU=((XALU-XB) And &HFF):'D$="ULBSUB":GoTo ENDJT
Case 168: XALUF=*(PSUB+(XALU SHL 1)+(XC Shl 9)):XALU=((XALU-XC) And &HFF):'D$="ULCSUB":GoTo ENDJT
Case 169: XALUF=*(PSUB+(XALU SHL 1)+(XD Shl 9)):XALU=((XALU-XD) And &HFF):'D$="ULDSUB":GoTo ENDJT
Case 170: XALUF=*(PSUB+(XALU SHL 1)+(XE Shl 9)):XALU=((XALU-XE) And &HFF):'D$="ULESUB":GoTo ENDJT
Case 171: XALUF=*(PSUB+(XALU SHL 1)+(XH Shl 9)):XALU=((XALU-XH) And &HFF):'D$="ULHSUB":GoTo ENDJT
Case 172: XALUF=*(PSUB+(XALU SHL 1)+(XL Shl 9)):XALU=((XALU-XL) And &HFF):'D$="ULLSUB":GoTo ENDJT
Case 173: XALUF=*(PSUB+(XALU SHL 1)+(XT Shl 9)):XALU=((XALU-XT) And &HFF):'D$="ULTSUB":GoTo ENDJT
Case 174: XALUF=*(PSUB+(XALU SHL 1)+(XA Shl 9)):XALU=((XALU-XA) And &HFF):'D$="ULASUB":GoTo ENDJT
' IULXSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSUB=175
Case 175: XALUF=*(PSUB+(XALU SHL 1)+(XS Shl 9)):XALU=((XALU-XS) And &HFF):'D$="ULXSSUB":GoTo ENDJT
Case 176: XALUF=*(PSUB+(XALU SHL 1)+(XP Shl 9)):XALU=((XALU-XP) And &HFF):'D$="ULXPSUB":GoTo ENDJT
Case 177: XALUF=*(PSUB+(XALU SHL 1)+(XXH Shl 9)):XALU=((XALU-XXH) And &HFF):'D$="ULXHSUB":GoTo ENDJT
Case 178: XALUF=*(PSUB+(XALU SHL 1)+(XXL Shl 9)):XALU=((XALU-XXL) And &HFF):'D$="ULXLSUB":GoTo ENDJT
Case 179: XALUF=*(PSUB+(XALU SHL 1)+(XYH Shl 9)):XALU=((XALU-XYH) And &HFF):'D$="ULYHSUB":GoTo ENDJT
Case 180: XALUF=*(PSUB+(XALU SHL 1)+(XYL Shl 9)):XALU=((XALU-XYL) And &HFF):'D$="ULYLSUB":GoTo ENDJT
' IULRSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRSBC=181,IULTSBC=187
Case 181: TEMP=(XB):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULBSBC":GoTo ENDJT
Case 182: TEMP=(XC):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULCSBC":GoTo ENDJT
Case 183: TEMP=(XD):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULDSBC":GoTo ENDJT
Case 184: TEMP=(XE):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULESBC":GoTo ENDJT
Case 185: TEMP=(XH):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULHSBC":GoTo ENDJT
Case 186: TEMP=(XL):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULLSBC":GoTo ENDJT
Case 187: TEMP=(XT):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULTSBC":GoTo ENDJT
Case 188: TEMP=(XA):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULASBC":GoTo ENDJT
' IULXSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSBC=189
Case 189: TEMP=(XS):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULXSSBC":GoTo ENDJT
Case 190: TEMP=(XP):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF):'D$="ULXPSBC":GoTo ENDJT
Case 191: TEMP=(XXH):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF)':D$="ULXHSBC":GoTo ENDJT
Case 192: TEMP=(XXL):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF)':D$="ULXLSBC":GoTo ENDJT
Case 193: TEMP=(XYH):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF)':D$="ULYHSBC":GoTo ENDJT
Case 194: TEMP=(XYL):XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)+ISFC):XALU=((XALU-TEMP-ISFC) And &HFF)':D$="ULYLSBC":GoTo ENDJT
' ADD HL,RR FLAGS --***-0C SO S/Z/PV KEEP INTACT 'IUFQADD=195
Case 195: XALUF=(XF And &B11000100)+(XALUF And &B00111011):'D$="UFQADD":GoTo ENDJT ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' INCDEC SIMPLE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUOINC=196,IUODEC=197,IUFQID=198
Case 196: XALUF=*(PADD+(XALU SHL 1)+(1 Shl 9)):XALU=((XALU+1) And &HFF):'D$="UOINC":GoTo ENDJT
Case 197: XALUF=*(PSUB+(XALU SHL 1)+(1 Shl 9)):XALU=((XALU-1) And &HFF):'D$="UODEC":GoTo ENDJT
Case 198: XALUF=(XF And &B00000001)+(XALUF And &B11111110):'D$="UFQID":GoTo ENDJT ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' IULRAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBAND=199,IULTAND=205
Case 199: XALUF=*(PAND+XALU+(XB Shl 8)):XALU=(XALU And XB):'D$="ULBAND":GoTo ENDJT
Case 200: XALUF=*(PAND+XALU+(XC Shl 8)):XALU=(XALU And XC):'D$="ULCAND":GoTo ENDJT
Case 201: XALUF=*(PAND+XALU+(XD Shl 8)):XALU=(XALU And XD):'D$="ULDAND":GoTo ENDJT
Case 202: XALUF=*(PAND+XALU+(XE Shl 8)):XALU=(XALU And XE):'D$="ULEAND":GoTo ENDJT
Case 203: XALUF=*(PAND+XALU+(XH Shl 8)):XALU=(XALU And XH):'D$="ULHAND":GoTo ENDJT
Case 204: XALUF=*(PAND+XALU+(XL Shl 8)):XALU=(XALU And XL):'D$="ULLAND":GoTo ENDJT
Case 205: XALUF=*(PAND+XALU+(XT Shl 8)):XALU=(XALU And XT):'D$="ULTAND":GoTo ENDJT
Case 206: XALUF=*(PAND+XALU+(XA Shl 8)):XALU=(XALU And XA):'D$="ULAAND":GoTo ENDJT
'IULXSAND=207 ' IULXAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 207: XALUF=*(PAND+XALU+(XS SHL 8)):XALU=((XALU And XS)):'D$="ULXSAND":GoTo ENDJT
Case 208: XALUF=*(PAND+XALU+(XP SHL 8)):XALU=((XALU And XP)):'D$="ULXPAND":GoTo ENDJT
Case 209: XALUF=*(PAND+XALU+(XXH SHL 8)):XALU=((XALU And XXH)):'D$="ULXHAND":GoTo ENDJT
Case 210: XALUF=*(PAND+XALU+(XXL SHL 8)):XALU=((XALU And XXL)):'D$="ULXLAND":GoTo ENDJT
Case 211: XALUF=*(PAND+XALU+(XYH SHL 8)):XALU=((XALU And XYH)):'D$="ULYHAND":GoTo ENDJT
Case 212: XALUF=*(PAND+XALU+(XYL SHL 8)):XALU=((XALU And XYL)):'D$="ULYLAND":GoTo ENDJT
' IULRXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBXOR=213,IULTXOR=219
Case 213: XALUF=*(PXOR+XALU+(XB Shl 8)):XALU=(XALU XOR XB):'D$="ULBXOR":GoTo ENDJT
Case 214: XALUF=*(PXOR+XALU+(XC Shl 8)):XALU=(XALU XOR XC):'D$="ULCXOR":GoTo ENDJT
Case 215: XALUF=*(PXOR+XALU+(XD Shl 8)):XALU=(XALU XOR XD):'D$="ULDXOR":GoTo ENDJT
Case 216: XALUF=*(PXOR+XALU+(XE Shl 8)):XALU=(XALU XOR XE):'D$="ULEXOR":GoTo ENDJT
Case 217: XALUF=*(PXOR+XALU+(XH Shl 8)):XALU=(XALU XOR XH):'D$="ULHXOR":GoTo ENDJT
Case 218: XALUF=*(PXOR+XALU+(XL Shl 8)):XALU=(XALU XOR XL):'D$="ULLXOR":GoTo ENDJT
Case 219: XALUF=*(PXOR+XALU+(XT Shl 8)):XALU=(XALU XOR XT):'D$="ULTXOR":GoTo ENDJT
Case 220: XALUF=*(PXOR+XALU+(XA Shl 8)):XALU=(XALU XOR XA):'D$="ULAXOR":GoTo ENDJT
'IULXSXOR=221 ' IULXXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 221: XALUF=*(PXOR+XALU+(XS SHL 8)):XALU=((XALU XOR XS)):'D$="ULXSXOR":GoTo ENDJT
Case 222: XALUF=*(PXOR+XALU+(XP SHL 8)):XALU=((XALU XOR XP)):'D$="ULXPXOR":GoTo ENDJT
Case 223: XALUF=*(PXOR+XALU+(XXH SHL 8)):XALU=((XALU XOR XXH)):'D$="ULXHXOR":GoTo ENDJT
Case 224: XALUF=*(PXOR+XALU+(XXL SHL 8)):XALU=((XALU XOR XXL)):'D$="ULXLXOR":GoTo ENDJT
Case 225: XALUF=*(PXOR+XALU+(XYH SHL 8)):XALU=((XALU XOR XYH)):'D$="ULYHXOR":GoTo ENDJT
Case 226: XALUF=*(PXOR+XALU+(XYL SHL 8)):XALU=((XALU XOR XYL)):'D$="ULYLXOR":GoTo ENDJT
' IULROR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBOR=227,IULTOR=233
Case 227: XALUF=*(PPOR+XALU+(XB Shl 8)):XALU=(XALU OR XB):'D$="ULBOR":GoTo ENDJT
Case 228: XALUF=*(PPOR+XALU+(XC Shl 8)):XALU=(XALU OR XC):'D$="ULCOR":GoTo ENDJT
Case 229: XALUF=*(PPOR+XALU+(XD Shl 8)):XALU=(XALU OR XD):'D$="ULDOR":GoTo ENDJT
Case 230: XALUF=*(PPOR+XALU+(XE Shl 8)):XALU=(XALU OR XE):'D$="ULEOR":GoTo ENDJT
Case 231: XALUF=*(PPOR+XALU+(XH Shl 8)):XALU=(XALU OR XH):'D$="ULHOR":GoTo ENDJT
Case 232: XALUF=*(PPOR+XALU+(XL Shl 8)):XALU=(XALU OR XL):'D$="ULLOR":GoTo ENDJT
Case 233: XALUF=*(PPOR+XALU+(XT Shl 8)):XALU=(XALU OR XT):'D$="ULTOR":GoTo ENDJT
Case 234: XALUF=*(PPOR+XALU+(XA Shl 8)):XALU=(XALU OR XA):'D$="ULAOR":GoTo ENDJT
'IULXSOR=235 ' IULXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 235: XALUF=*(PPOR+XALU+(XS SHL 8)):XALU=((XALU OR XS)):'D$="ULXSOR":GoTo ENDJT
Case 236: XALUF=*(PPOR+XALU+(XP SHL 8)):XALU=((XALU OR XP)):'D$="ULXPOR":GoTo ENDJT
Case 237: XALUF=*(PPOR+XALU+(XXH SHL 8)):XALU=((XALU OR XXH)):'D$="ULXHOR":GoTo ENDJT
Case 238: XALUF=*(PPOR+XALU+(XXL SHL 8)):XALU=((XALU OR XXL)):'D$="ULXLOR":GoTo ENDJT
Case 239: XALUF=*(PPOR+XALU+(XYH SHL 8)):XALU=((XALU OR XYH)):'D$="ULYHOR":GoTo ENDJT
Case 240: XALUF=*(PPOR+XALU+(XYL SHL 8)):XALU=((XALU OR XYL)):'D$="ULYLOR":GoTo ENDJT
' IULRCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBCP=241,IULTCP=247
Case 241: XALUF=*(PPCP+XALU+(XB Shl 8)):'D$="ULBCP":GoTo ENDJT
Case 242: XALUF=*(PPCP+XALU+(XC Shl 8)):'D$="ULCCP":GoTo ENDJT
Case 243: XALUF=*(PPCP+XALU+(XD Shl 8)):'D$="ULDCP":GoTo ENDJT
Case 244: XALUF=*(PPCP+XALU+(XE Shl 8)):'D$="ULECP":GoTo ENDJT
Case 245: XALUF=*(PPCP+XALU+(XH Shl 8)):'D$="ULHCP":GoTo ENDJT
Case 246: XALUF=*(PPCP+XALU+(XL Shl 8)):'D$="ULLCP":GoTo ENDJT
Case 247: XALUF=*(PPCP+XALU+(XT Shl 8)):'D$="ULTCP":GoTo ENDJT
Case 248: XALUF=*(PPCP+XALU+(XA Shl 8)):'D$="ULACP":GoTo ENDJT
'IULXSCP=249 ' IULXCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 249: XALUF=*(PPCP+XALU+(XS SHL 8)):'D$="ULXSCP":GoTo ENDJT
Case 250: XALUF=*(PPCP+XALU+(XP Shl 8)):'D$="ULXPCP":GoTo ENDJT
Case 251: XALUF=*(PPCP+XALU+(XXH SHL 8)):'D$="ULXHCP":GoTo ENDJT
Case 252: XALUF=*(PPCP+XALU+(XXL SHL 8)):'D$="ULXLCP":GoTo ENDJT
Case 253: XALUF=*(PPCP+XALU+(XYH SHL 8)):'D$="ULYHCP":GoTo ENDJT
Case 254: XALUF=*(PPCP+XALU+(XYL SHL 8)):'D$="ULYLCP":GoTo ENDJT
' - MAIN SHIFTS AND FLG CORRECT RLCA/RLA/RRCA/RRA     --503-0C IUFQSH=255
' IUORLC=256,IUORRC=257,IUORL=258,IUORR=259
Case 255: XALUF=(XF And &B11000100)+(XALUF And &B00111011):'D$="UFQSH":GoTo ENDJT ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
Case 256: PSHF=PRLC+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UORLC":GoTo ENDJT
Case 257: PSHF=PRRC+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UORRC":GoTo ENDJT
Case 258: PSHF=PRL+(XALU SHL 2)+ISFC:XALU=*PSHF:PSHF+=2:XALUF=*PSHF:'D$="UORL":GoTo ENDJT ' HERE QUAD ENTRY TABLE VV/FF
Case 259: PSHF=PRR+(XALU SHL 2)+ISFC:XALU=*PSHF:PSHF+=2:XALUF=*PSHF:'D$="UORR":GoTo ENDJT ' HERE QUAD ENTRY TABLE VV/FF
' IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263
Case 260: PSHF=PSLA+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UOSLA":GoTo ENDJT
Case 261: PSHF=PSRA+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UOSRA":GoTo ENDJT
Case 262: PSHF=PSLL+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UOSLL":GoTo ENDJT
Case 263: PSHF=PSRL+(XALU SHL 1):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UOSRL":GoTo ENDJT
'IUORES=264,IUOSET=265
Case 264: XALU=XALU And ((1 Shl ((XCODE Shr 3) And 7)) Xor &HFF):'D$="UORES":GoTo ENDJT
Case 265: XALU=XALU Or (1 Shl ((XCODE Shr 3) And 7)):D$="UOSET":GoTo ENDJT
' $ CALCULATION HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULTSADD=266,IUOSADDC=267 0-127 IS DIRECT ADDITION, 128 IS -128, 128-255 IS -128 TO -1
Case 266: TEMP=XT And 127:If XT And 128 Then ' SIGNED MAKE SUB, UNSIGNED MAKE ADD 
	TEMP=128-TEMP: XALUF=*(PSUB+(XALU SHL 1)+(TEMP Shl 9)):XALU=((XALU-TEMP) And &HFF)
	Else XALUF=*(PADD+(XALU SHL 1)+(TEMP Shl 9)):XALU=((XALU+TEMP) And &HFF) 
	EndIf:'D$="ULTSADD":GoTo ENDJT 
Case 267: If XALUF And XFN Then ' IF N IS SET THEN IT WAS SUB AND MAKE SBC WITH CARRY ELSE ADC WITH, DISCARD FLAGS HERE
	XALU=((XALU-ISFC) And &HFF)
	Else XALU=((XALU+ISFC) And &HFF)
	EndIf:'D$="UOSADDC":GoTo ENDJT
'IUOBIT=268
'BIT n,r *Z513*0-  PV as Z, S set only if n=7 and b7 of r set Behaves much like AND r,2^n
Case 268: XALUF=(XALUF And 1)+(XALU And &B00101000)+16' GET COPY OF BIT 5,3,N=0,H=1, CARRY SAVED 
TEMP=1 Shl ((XCODE Shr 3) And 7):If XALU And TEMP Then Else XALUF+=4+64 ' IF BIT SET THEN SET Z AND PV
If TEMP=128 Then XALUF+=(XALU And 128) 'IF TESTED BIT IS 7 AND ALU BIT 7 IS SET THEN SET S 
':D$="UOBIT":GoTo ENDJT
' - - DAA HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 269 : PSHF=(PDAA+(XALU SHL 1)+(XALUF Shl 9)):XALU=*PSHF:PSHF+=1:XALUF=*PSHF:'D$="UODAA":GoTo ENDJT
' - - - PC SUBST UOPS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'SIGUWZ=270,SIGUHL=271,SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275
Case 270 : XSUBST=XZ+(XW Shl 8):TAKC+=1:'D$="HIDDEN USEWZ":GoTo ENDJT
Case 271 : XSUBST=XL+(XH Shl 8):TAKC+=1:'D$="HIDDEN USEHL":GoTo ENDJT
Case 272 : XSUBST=XXL+(XXH Shl 8):TAKC+=1:'D$="HIDDEN USEIX":GoTo ENDJT
Case 273 : XSUBST=XYL+(XYH Shl 8):TAKC+=1:'D$="HIDDEN USEIY":GoTo ENDJT
'SKIP6PE: PV set if BC not 0 PO IS ZERO PE IS TRUE
Case 274 : If XALUF And XFP Then Else PCUR+=XLDIR EndIf:TAKC+=1:'D$="HIDD SKIP6PO":GoTo ENDJT
Case 275 : If (XALUF And XFP)=0 Or (XALUF And XFZ) Then PCUR+=XCPIR Else EndIf:TAKC+=1:'D$="HIDD SKIP6POZ":GoTo ENDJT
' CONDITIONAL ENDINGS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280,IECCPO=281,IECCM=282,IECCP=283
Case 276 : If XALUF And XFZ Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCZ":GoTo ENDJT
Case 277 : If (XALUF And XFZ)=0 Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCNZ":GoTo ENDJT
Case 278 : If XALUF And XFC Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCC":GoTo ENDJT
Case 279 : If (XALUF And XFC)=0 Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCNC":GoTo ENDJT
Case 280 : If XALUF And XFP Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCPE":GoTo ENDJT
Case 281 : If (XALUF And XFP)=0 Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCPO":GoTo ENDJT
Case 282 : If XALUF And XFS Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCM":GoTo ENDJT
Case 283 : If (XALUF And XFS)=0 Then ISEND=1 Else EndIf:TAKC+=1:'D$="HIDDEN ECCP":GoTo ENDJT
' ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289,ISWCCP=290,ISWCCM=291
Case 284 : If (XALUF And XFZ)=0 Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCNZ":GoTo ENDJT
Case 285 : If (XALUF And XFZ)   Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCZ":GoTo ENDJT
Case 286 : If (XALUF And XFC)=0 Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCNC":GoTo ENDJT
Case 287 : If (XALUF And XFC)   Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCC":GoTo ENDJT
Case 288 : If (XALUF And XFP)   Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCPE":GoTo ENDJT
Case 289 : If (XALUF And XFP)=0 Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCPO":GoTo ENDJT
Case 290 : If (XALUF And XFS)=0 Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCP":GoTo ENDJT
Case 291 : If (XALUF And XFS)   Then XSUBST=XZ+(XW Shl 8) Else EndIf:TAKC+=1:'D$="HIDDEN SWCCM":GoTo ENDJT
' - - - CPL - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' CPL --*1*-1- 5, 3 from A register.
Case 292 : XALU Xor= 255: XALUF=(XALUF And &B11000101)+(XA And &B00101000)+&B00010010:'D$="UOCPL":GoTo ENDJT
' - - - IUOSCF=293,IUOCCF=294 the content of A is copied to flags 5+3 after SCF/CCF , NO Q AWHILE - - - - - 
Case 293 : XALUF=(XALUF And &B11010111)+(XA And &B00101000)+1:'D$="UOSCF":GoTo ENDJT
Case 294 : XALUF Xor= 1:XALUF=(XALUF And &B11010111)+(XA And &B00101000):'D$="UOCCF":GoTo ENDJT
' - - IUEXA=295,IUEXX=296 NO AFF
Case 295 : TEMP=XA:XA=EXA:EXA=TEMP:TEMP=XF:XF=EXF:EXF=TEMP:'D$="AF UEXA":GoTo ENDJT
Case 296 : TEMP=XB:XB=EXB:EXB=TEMP:TEMP=XC:XC=EXC:EXC=TEMP:TEMP=XD:XD=EXD:EXD=TEMP:TEMP=XE:XE=EXE:EXE=TEMP:TEMP=XH:XH=EXH:EXH=TEMP:TEMP=XL:XL=EXL:EXL=TEMP:'D$="RR UEXX":GoTo ENDJT
' - - - IUDFF=297,IUSFF=298,IUCFF=299
Case 297 : XIFF1=0:XIFF2=0:'D$="DIS/INT UDFF":GoTo ENDJT
Case 298 : XIFF1=1:XIFF2=1:'D$="ENA/INT USFF":GoTo ENDJT
Case 299 : XIFF1=XIFF2:'D$="REST/INT UCFF":GoTo ENDJT
' - - -IUXHD=300
Case 300 : TEMP=XD:XD=XH:XH=TEMP:TEMP=XE:XE=XL:XL=TEMP:'D$="HL-DE UXHD":GoTo ENDJT
' - - - PORT IO UOPS 'IUNWR=301,IUTIO=302,IUPOW=303 - - - - - - - - - - - - 
Case 301 : XBUS=0:'D$="NULL UNWR":GoTo ENDJT
Case 302 : XT=*(PIORD+XADDR):'D$="RD("+Hex$(XADDR,4)+")="+Hex$(XT,2)+" UTIO":GoTo ENDJT
Case 303 : *(PIOWR+XADDR)=XBUS:'D$="WR("+Hex$(XADDR,4)+")="+Hex$(XBUS,2)+" UPOW":GoTo ENDJT
' - - IUFWR=304 - - 
Case 304 : XBUS=XF:'D$="FLG UFWR":GoTo ENDJT
' - - IUONEG=305
Case 305 : XALUF=(*(PSUB+(0)+(XALU Shl 9))And &B11111011):If XALU=&H80 Then XALUF+=XFP Else EndIf:XALU=((0-XALU) And &HFF):'D$="UONEG":GoTo ENDJT 
' - - - IULTRI=306,IULTRR=307,IUFQIR=308 LD A,R/LD A,I SZ503*0-  PV as IFF2, ALIKE DO OR/XOR r SZ503P00
Case 306 : XALU=XI:'D$="I-REG ULLRI":GoTo ENDJT
Case 307 : XALU=XR:'D$="R-REG ULLRR":GoTo ENDJT
Case 308 : XALUF=(*(PPOR+XALU) And &B11111010)+(XALUF And 1)+(XIFF2 Shl 2):'D$="QUIRK UFQIR":GoTo ENDJT
' - - - IUOQIO=309 - -  IN r,(C) AFFECTION SZ503P0- Also true for IN F(NULL),(C), LIKE OR VALUE,0
Case 309 : XALUF=(*(PPOR+XALU) And &B11111010)+(XALUF And 1):'D$="QUIRK UFQIO":GoTo ENDJT
' - - - RLD AND RRD ALU NIBBLE OPS -  
' IUORVN=310(NIBB REVERSE)
' IULANLL=311(LOWN=A-LOWN),IULTNLL=312(LOWN=T-LOWN)
' IULANLH=313(HIGHN=A-LOWN),IULTNHL=314(LOWN=T-HIGHN)
Case 310 : XALU=((XALU And 15)Shl 4)+((XALU SHR 4)And 15):'D$="REV UORVN":GoTo ENDJT
Case 311 : XALU=(XALU And &HF0)+(XA And &H0F)'D$="L=AL ULANLL":GoTo ENDJT
Case 312 : XALU=(XALU And &HF0)+(XT And &H0F):'D$="L=TL ULTNLL":GoTo ENDJT
Case 313 : XALU=(XALU And &H0F)+((XA And &H0F)Shl 4):'D$="H=AL ULANLH":GoTo ENDJT
Case 314 : XALU=(XALU And &HF0)+((XT Shr 4)And &H0F):'D$="L=TH ULTNHL":GoTo ENDJT
' - - IM X SETTING SIMPLEST OP - - - - 
'IUIM0=315,IUIM1=316,IUIM2=317
Case 315 : XIMM=0:'D$="IM=0 UIM0":GoTo ENDJT
Case 316 : XIMM=1:'D$="IM=1 UIM1":GoTo ENDJT
Case 317 : XIMM=2:'D$="IM=2 UIM2":GoTo ENDJT
' - - LDIR QUIRK AFF IULAQLD=318 - - -  
'LDI/LDIR/LDD/LDIR     --*0**0-  PV set if BC not 0 SO SAVE PV FROM UBCDPV 
'F5 is bit 1 of (transferred byte + A) 'F3 is bit 3 of (transferred byte + A)
Case 318 : TEMP=XT+XA:XALUF=(XALUF And &B110000101)+(TEMP And &B00001000)+((TEMP And &B00000010)Shl 4)':D$="ULAQLD":GoTo ENDJT
' - - - CPIR QUIRK AFF 
'IULTCPQ=319
'CPI/CPIR/CPD/CPDR     SZ*H**1-  PV set if BC not 0 'S,Z,H from (A - (HL) ) DONE BY ULTCP
'F3 is bit 3 of (A - (HL) - H), H as in F after CPIR's INTERNAL CP
'F5 is bit 1 of (A - (HL) - H) 
Case 319 : TEMP=(XALUF And XFH) Shr 4 ' GET FH AS ADD VALUE 0/1
TEMP=XA-XT-TEMP' XT = (HL) THIS TIME
XALUF=(XALUF And &B11010111)+(TEMP And &B00001000)+((TEMP And &B00000010)Shl 4):'D$="QUIRK ULTCPQ":GoTo ENDJT
' - - INIR QUIRK UOPS 'IUOQPV=320 'ERRATIC PV UPDATE OP 'ALREADY S,Z,5,3 are affected by the UODEC OF ULLRB 
Case 320 : 'You'll need also an additional TEMP2, according to the pseudocode: -  
If XB And 15 Then 'IF B-LOWN !=0 THEN Temp2 = Parity(B) xor (B.0 or (B.2 and not B.1)) 
TEMP=(XB And 1) Or (((XB Shr 2)And 1) And (((XB Shr 1)And 1) Xor 1)) 
Else 'IF B-LOWN=0 THEN Temp2 = Parity(B) Xor (B.4 or (B.6 and not B.5))
TEMP=((XB Shr 4) And 1) Or (((XB Shr 6)And 1) And (((XB Shr 5)And 1) Xor 1))
EndIf: XALUF Xor= (TEMP Shl 2) ' HERE DO Parity(B) xor
'D$="QUIRK UOQPV":GoTo ENDJT
' CPIR NEED EXTRA CROSS LOAD DECREASE
Case 321: XADDER-=1:XBYTE=XADDER:XZ=XBYTE And &hFF:XBYTE Shr= 8:XW=XBYTE And &hFF:'D$="CROSS UADDWZ":GoTo ENDJT

' - - - - - IUTADDQI=322 INIR VERSION OF QUIRK STEP2, HAVE INIR LUT
Case 322 : 
'The FLAG N = BIT 7 OF last IO PORT value - XT. '| S Z Y H X P N C |
'FC/FH SETUP - TAKE Z (ULDBC>UADIWZ), ADD value of the I/O port XT, and the carry of THAT SET BOTH C and H 
TEMP=(XZ+XT) Shr 8:XALUF=(XALUF And &B11101100)+TEMP+(TEMP Shl 4)+((XT Shr 7) Shl 1)
'First, look at bits 1 and 0 of both C and inp and USE LUT TO GET TEMP1
TEMP=((XC And 3) Shl 2)+(XT And 3)' 'COMBINE NIBBLE OF C-1,C-0,T-1,T-0 
XBYTE=&B0110110110100100: ' THIS IS 16BIT INIR LUT, SO NIBBLE VALUE OF 15 WILL GET LAST BIT
'HERE IS PV= TEMP2(SOURCE PV XOR VALUE DONE BY UOQPV) AND HERE> XOR TEMP1 XOR INP-2 XOR C-2
XALUF=XALUF Xor (((XBYTE Shr TEMP) And 1)Shl 2) Xor (XC And 2) Xor (XT And 2) 
'D$="QUIRK UTADDQI":GoTo ENDJT

 '- - - - - IUTADDQD=323 INDR VERSION OF QUIRK STEP2, HAVE INDR LUT
Case 323 : 
'The FLAG N = BIT 7 OF last IO PORT value - XT. '| S Z Y H X P N C |
'FC/FH SETUP - TAKE Z (ULDBC>UADIWZ), ADD value of the I/O port XT, and the carry of THAT SET BOTH C and H 
TEMP=(XZ+XT) Shr 8:XALUF=(XALUF And &B11101100)+TEMP+(TEMP Shl 4)+((XT Shr 7) Shl 1)
'First, look at bits 1 and 0 of both C and inp and USE LUT TO GET TEMP1
TEMP=((XC And 3) Shl 2)+(XT And 3)' 'COMBINE NIBBLE OF C-1,C-0,T-1,T-0 
XBYTE=&B1010010010010010: ' THIS IS 16BIT INIR LUT, SO NIBBLE VALUE OF 15 WILL GET LAST BIT
'HERE IS PV= TEMP2(SOURCE PV XOR VALUE DONE BY UOQPV) AND HERE> XOR TEMP1 XOR INP-2 XOR C-2
XALUF=XALUF Xor (((XBYTE Shr TEMP) And 1)Shl 2) Xor (XC And 2) Xor (XT And 2) 
'D$="QUIRK UTADDQD":GoTo ENDJT
' - - LD ALU,Z
Case 324: XALU=XZ:' D$="ULLRZ":GoTo ENDJT


End Select
' END JUMPTABLE HERE 
ENDJT: 
ISFC=XALUF And 1 ' VITAL TO ADC/SBC AND OTHERS, IS VALID BECAUSE ALWAYS UALF/URALF DONE BEFORE CC CHECK
