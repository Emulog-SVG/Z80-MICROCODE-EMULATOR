#Include once "Windows.bi"
#include Once "crt/stdio.bi"
#include "fbgfx.bi"
FreeConsole()

' - - - MOVED TO END NAMED HERE
Declare Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr 

' - - JUST SCREEN INIT HERE
ScreenRes 2048,960, 32
Width 2048/8, 960/16 '' Use 8*14 font


' - - TEMP USE VARS
Dim Shared As Unsigned Long T1,T2,T3,T4,T5,T6,T7,T8,T9,T0
Dim Shared As ULongInt F1,F2,F3,F4,F5,F6,F7,F8,F9
Dim Shared As Unsigned Long S1,S2,S3,S4,S5,S6,S7,S8
Dim Shared AS DOUBLE SEC,SEC2

' - - CORE VARS
Type WRD:
EBC As ULongInt:TBC As ULongInt
EDE As ULongInt:TDE As ULongInt
EHL As ULongInt:THL As ULongInt
EAF As ULongInt:TAF As ULongInt
MEM As UByte Ptr:CUR As ULong Ptr:XCUR As ULong Ptr
HALT As ULong Ptr:IORD As UByte Ptr:IOWR As UByte Ptr
ROOT As ULong Ptr
IFF1 As ULong:IFF2 As ULong:I As ULong:R As ULong:
ISPFX As ULong:ISHALT As ULong:ISINT As ULong:ISEXT As ULong
TAK As ULong:UOP As ULong:IMM As ULong:ISFC As ULong
ADDER As ULong:ADDR As ULong:SUBST As ULong:PREFIX As ULong
PC As ULong:CODE As ULong:CUROFF As ULong:BUS As ULong
FLG As ULong:TEMP As ULong:ALU As ULong:T As ULong
Union:BC As ULongInt:Type:C As ULong:B As ULong:End Type:End Union
Union:DE As ULongInt:Type:E As ULong:D As ULong:End Type:End Union
Union:HL As ULongInt:Type:L As ULong:H As ULong:End Type:End Union
Union:AF As ULongInt:Type:F As ULong:A As ULong:End Type:End Union
Union:WZ As ULongInt:Type:Z As ULong:W As ULong:End Type:End Union
Union:SP As ULongInt:Type:P As ULong:S As ULong:End Type:End Union
Union:IX As ULongInt:Type:XL As ULong:XH As ULong:End Type:End Union
Union:IY As ULongInt:Type:YL As ULong:YH As ULong:End Type:End Union
LEXT As ULong Ptr
End Type
Dim Shared As WRD X
Dim Shared As ULong EXTL(16)
Dim Shared As ULong LREF(256) 
Dim Shared As UByte DAT(1024*1024*4) ' - - ALL-IN ARRAY LOCAL

' - - -  REPLACEMENT VALUES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dim Shared As Const ULong IULTR=511,IULRT=510,IURWR=509 
Dim Shared As Const ULong IULRADD=508,IULXADD=507,IULRADC=506,IULXADC=505
Dim Shared As Const ULong IULRSUB=504,IULXSUB=503,IULRSBC=502,IULXSBC=501
Dim Shared As Const ULong IULLR=500,IULRL=499
Dim Shared As Const ULong IULRAND=498,IULXAND=497
Dim Shared As Const ULong IULRXOR=496,IULXXOR=495
Dim Shared As Const ULong IULROR=494,IULXOR=493
Dim Shared As Const ULong IULRCP=492,IULXCP=491

' SO ASSIGN EXACT NUMBERS IN SWITCH CASE TO OPERATORS HERE, CASE ZERO FOR ERROR TRACKING
Dim Shared As Const ULong IUABC=1,IUADE=2,IUAHL=3,IUAWZ=4,IUAAD=5,IUASP=6,IUAIX=7,IUAIY=8,IUAPCI=9 ' SET ADDRESS BUS 
Dim Shared As Const ULong IUFET=10,IUAIRIUF=11,IURALF=12,IULTB=13,IULBT=21 ' ULRT++8 SO 29 NEXT
Dim Shared As Const ULong IUALF=19,IULRBT=21,IULRCT=22,IULRDT=23,IULRET=24,IULRHT=25,IULRLT=26,IULRAT=28,IUHALT=27
Dim Shared As Const ULong IUBWR=29,IUCWR=30,IUDWR=31,IUEWR=32,IUHWR=33,IULWR=34,IUOWR=35,IUAWR=36 ' JUST USUAL REGS AWHILE
Dim Shared As Const ULong IURCW=37,IUWCW=38,IUDOW=39,IUNOP=40,IUTRD=41,IUTWR=42 ' MEM OPS AND UNOP
Dim Shared As Const ULong IULSLT=43,IULSHT=44 
Dim Shared As Const ULong IULWE=45,IULWA=46,IULWT=47,IULZT=48,IULZN=49,IULW0=50
Dim Shared As Const ULong IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Dim Shared As Const ULong IUADIWZ=59,IUADIPC=60,IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68,IUIYD=69
Dim Shared As Const ULong IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77
Dim Shared As Const ULong IULBCD=78,IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85
Dim Shared As Const ULong IUPFDD=86,IUPFFD=87,IUPFCB=88,IUPFED=89,IUPFDC=90,IUPFFC=91 ' PREFIXES
Dim Shared As Const ULong IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98,IUYLWR=99 ' EXTRA REGISTER WRITE TO MEM
Dim Shared As Const ULong IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRT=106,IULLRA=107
Dim Shared As Const ULong IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113
Dim Shared As Const ULong IULRIA=114,IULRRA=115
Dim Shared As Const ULong IULRBL=116,IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRTL=122,IULRAL=123
Dim Shared As Const ULong IULRZL=124,IULRWL=125,IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129
Dim Shared As Const ULong IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134,IULTXH=135,IULTXL=136,IULTYH=137,IULTYL=138
Dim Shared As Const ULong IULBADD=139,IULTADD=145,IULXSADD=147,IULBADC=153,IULTADC=159,IULXSADC=161 ' X ORDER  SPH-SPL-IXH-IXL-IYH-IYL NEED REVERSE
Dim Shared As Const ULong IULBSUB=167,IULTSUB=173,IULXSSUB=175,IULBSBC=181,IULTSBC=187,IULXSSBC=189,IUFQADD=195
Dim Shared As Const ULong IUOINC=196,IUODEC=197,IUFQID=198
Dim Shared As Const ULong IULBAND=199,IULTAND=205,IULXSAND=207
Dim Shared As Const ULong IULBXOR=213,IULTXOR=219,IULXSXOR=221
Dim Shared As Const ULong IULBOR=227,IULTOR=233,IULXSOR=235
Dim Shared As Const ULong IULBCP=241,IULTCP=247,IULXSCP=249
Dim Shared As Const ULong IUFQSH=255,IUORLC=256,IUORRC=257,IUORL=258,IUORR=259
Dim Shared As Const ULong IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263,IUORES=264,IUOSET=265
Dim Shared As Const ULong IULTSADD=266,IUOSADDC=267,IUOBIT=268,IUODAA=269
Dim Shared As Const ULong SIGUWZ=270,SIGUHL=271,SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275
Dim Shared As Const ULong IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280,IECCPO=281,IECCM=282,IECCP=283
Dim Shared As Const ULong ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289,ISWCCP=290,ISWCCM=291
Dim Shared As Const ULong IUOCPL=292,IUOSCF=293,IUOCCF=294,IUEXA=295,IUEXX=296,IUDFF=297,IUSFF=298,IUCFF=299,IUXHD=300
Dim Shared As Const ULong IUNWR=301,IUTIO=302,IUPOW=303,IUFWR=304,IUONEG=305,IULLRI=306,IULLRR=307,IUFQIR=308
Dim Shared As Const ULong IUOQIO=309,IUORVN=310,IULANLL=311,IULTNLL=312,IULANLH=313,IULTNHL=314
Dim Shared As Const ULong IUIM0=315,IUIM1=316,IUIM2=317,IULAQLD=318,IULTCPQ=319,IUOQPV=320 
Dim Shared As Const ULong IUADDWZ=321,IUTADDQI=322,IUTADDQD=323,IULLRZ=324,IDONE=325,IPAR=326,IEXT=327

' EMULATION LUTs
Dim Shared As Unsigned Byte Ptr PFLAG,PADD,PSUB,PAND,PXOR,PPOR,PPCP
Dim Shared As Unsigned Byte Ptr PRLC,PRRC,PRL,PRR,PSLA,PSRA,PSLL,PSRL,PDAA

Dim Shared As Const ULong XDD=256,XFD=512,XCB=768,XED=1024,XDDCB=1280,XFDCB=1536
Dim Shared As Const ULong XFS=128,XFZ=64,XF5=32,XFH=16,XF3=8,XFP=4,XFN=2,XFC=1,XLDIR=6,XCPIR=6,XMAIN=2,XXDCB=10
Dim Shared As Const ULong URB=7-0,URC=7-1,URD=7-2,URE=7-3,URH=7-4,URL=7-5,URA=7-7
Dim Shared As Const ULong USH=5,USL=4,UYH=3,UYL=2,UXH=1,UXL=0
Dim Shared As ULongInt Ptr MAIN,DD,FD,CB,DDCB,FDCB,ED,PROOT

Dim Shared As ULong Ptr PMOS,PMCUR
Dim Shared As UByte Ptr PMEM,CUR



'Dim Shared As ULong XB,XC,XD,XE,XH,XL,XT,XA,XF
'Dim SHARED As ULong EXB,EXC,EXD,EXE,EXH,EXL,EXA,EXF
'DIM SHARED As ULong XW,XZ,XS,XP,XXH,XXL,XYH,XYL',XI,XR,XALUF,XALU,XBUS

'Dim Shared As ULong ISFC,TEMP,XPC
'Dim SHARED As ULong XADDER,XIFF1,XIFF2,XIMM
'DIM SHARED As ULong XADDR,XSUBST,XCODE,XPREFIX,XCUROFF',XBYTE,XSADD,FIRST01
'DIM Shared As ULong ISPFX,ISHALT,ISINT,X.ISEXT'EXTACT,EXTSEL,ISPAR,ISEND,ISFSET
DIM SHARED As ULong XERR,XPOFF,USED,RETR

Dim Shared As UShort Ptr WRLC,WRRC,WSLA,WSRA,WSLL,WSRL,WDAA
Dim Shared As ULong Ptr QRL,QRR
Dim Shared As ULong REG,REGL,REGR,ALUO


Dim Shared As String A$,B$,C$,D$,SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8,SS9,SS10,SS11,SS12,Q$,O$

Dim Shared As Unsigned Long UOPN(512),UOPL(512),XMNEM(1792),XMLEN(1792)


' - - - START HERE ' - - - INIT ONLY IN THIS ORDER

' - - ALLOCATE CHUNKS GRANULAR BY BYTES
#Include "EMU_ALU_LUT.EXT" ' HERE COMBINED MANY
#Include "EMU_OPERATORS.EXT"
#Include "EMU_MICROCODE.EXT"


X.LEXT=@EXTL(0)
X.MEM=PMEM

' EXT 2 MEAN TO ENABLE EXT FIRST, ALL AND=1 ACT, MUST SKIP ONE CYCLE
EXTL(2)=4 ' SO 4 SKIP ONE CYCLE NO ACTION
EXTL(4)=1 ' SO 1 DOES SINGLE ACTION
EXTL(1)=4 ' CYCLE 1/4 DO OVERLAP
' EXT 3 MEAN ACT TWICE
EXTL(3)=5 ' ENABLE SECOND ACT
EXTL(5)=7 ' GOTO USUAL
EXTL(7)=4 ' GOTO USUAL
' SO ZEROBIT MAKE ACT MAIN NEED TO DO PAR RUN MAIN TWICE
EXTL(6)=8 ' ACT TWICE
EXTL(8)=10  
EXTL(10)=0  

F2=0:For F1=&H00 To 255:
' TEST SEQ 01 INC LD
'*(X.MEM+F2)=(&HFB):F2+=1:*(X.MEM+F2)=(&HF3):F2+=1:*(X.MEM+F2)=(&HFB):F2+=1:*(X.MEM+F2)=(&H01):F2+=1:*(X.MEM+F2)=(&HA1):F2+=1:*(X.MEM+F2)=(&HA2):F2+=1:*(X.MEM+F2)=(&H11):F2+=1:*(X.MEM+F2)=(&HB1):F2+=1:*(X.MEM+F2)=(&HB2):F2+=1:*(X.MEM+F2)=(&H21):F2+=1:*(X.MEM+F2)=(&HC1):F2+=1:*(X.MEM+F2)=(&HC2):F2+=1:*(X.MEM+F2)=(&H31):F2+=1:*(X.MEM+F2)=(&HD1):F2+=1:*(X.MEM+F2)=(&HD2):F2+=1:*(X.MEM+F2)=(&HC5):F2+=1:*(X.MEM+F2)=(&HD5):F2+=1:*(X.MEM+F2)=(&HE5):F2+=1:*(X.MEM+F2)=(&HF5):F2+=1:*(X.MEM+F2)=(&HC1):F2+=1:*(X.MEM+F2)=(&HD1):F2+=1:*(X.MEM+F2)=(&HE1):F2+=1:*(X.MEM+F2)=(&HF1):F2+=1:*(X.MEM+F2)=(&H03):F2+=1:*(X.MEM+F2)=(&H13):F2+=1:*(X.MEM+F2)=(&H23):F2+=1:*(X.MEM+F2)=(&H33):F2+=1:*(X.MEM+F2)=(&H0B):F2+=1:*(X.MEM+F2)=(&H1B):F2+=1:*(X.MEM+F2)=(&H2B):F2+=1:*(X.MEM+F2)=(&H3B):F2+=1:*(X.MEM+F2)=(&H06):F2+=1:*(X.MEM+F2)=(&HF1):F2+=1:*(X.MEM+F2)=(&H16):F2+=1:*(X.MEM+F2)=(&HF2):F2+=1:*(X.MEM+F2)=(&H26):F2+=1:*(X.MEM+F2)=(&HF3):F2+=1:*(X.MEM+F2)=(&H36):F2+=1:*(X.MEM+F2)=(&HF4):F2+=1:*(X.MEM+F2)=(&H0E):F2+=1:*(X.MEM+F2)=(&HF5):F2+=1:*(X.MEM+F2)=(&H1E):F2+=1:*(X.MEM+F2)=(&HF6):F2+=1:*(X.MEM+F2)=(&H2E):F2+=1:*(X.MEM+F2)=(&HF7):F2+=1:*(X.MEM+F2)=(&H3E):F2+=1:*(X.MEM+F2)=(&HFA):F2+=1:*(X.MEM+F2)=(&H00):F2+=1:*(X.MEM+F2)=(&H00):F2+=1:*(X.MEM+F2)=(&H00):F2+=1:*(X.MEM+F2)=(&H00):F2+=1:
' INCDEC R
'*(X.MEM+F2)=(&H05):F2+=1:*(X.MEM+F2)=(&H04):F2+=1:*(X.MEM+F2)=(&H0D):F2+=1:*(X.MEM+F2)=(&H0C):F2+=1:*(X.MEM+F2)=(&H15):F2+=1:*(X.MEM+F2)=(&H14):F2+=1:*(X.MEM+F2)=(&H1D):F2+=1:*(X.MEM+F2)=(&H1C):F2+=1:*(X.MEM+F2)=(&H25):F2+=1:*(X.MEM+F2)=(&H24):F2+=1:*(X.MEM+F2)=(&H2D):F2+=1:*(X.MEM+F2)=(&H2C):F2+=1:*(X.MEM+F2)=(&H3D):F2+=1:*(X.MEM+F2)=(&H3C):F2+=1:*(X.MEM+F2)=(&H35):F2+=1:*(X.MEM+F2)=(&H34):F2+=1:

Next   



SEC=Timer

X.TAK=300'000*100
'T1=X.TAK
Do
SS1=Right("...................."+Str(X.CUR-PMOS)+":"+Str(X.TAK)+":",14)
X.ISEXT=*(X.LEXT+X.ISEXT)
If X.ISEXT And 1 Then 
X.UOP=*X.XCUR
'T1=1:
XPOFF=X.XCUR-PMOS:SS1+=" EXT   :" 'Str(X.ISEXT)
X.XCUR+=1 
Else X.UOP=*X.CUR
'T1=0:
XPOFF=X.CUR-PMOS:SS1+="   MAIN:"
X.CUR+=1:X.TAK-=1
EndIf

#Include "EMU_MICROACT.EXT"
SHOWINFO

'If X.ISEXT=1 Then X.ISEXT=2 Else If X.ISEXT=3 Then X.ISEXT=1 Else EndIf

'Sleep
Loop Until X.TAK=0

SEC=(Timer-SEC)
'End Sub:LOOP1

'Print:Print SEC:Print T1/SEC/1000000 
'Print "ALL ";T8;" ";T8/328;" ";F4/SEC2/1000000

'SCRBLUR
'SCALE (ScreenPtr())

Print "END":Sleep
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' - - - DATA LOCATOR, SAVE RETRIES TO RETR, USE *CURC AND "USED" TO COUNT
Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr Static 
Dim As ULongInt V1, V2,V3:If USED=0 Then CUR=@DAT(0)
V3=0:Do:V1=CUR:V1=V1 And OFFS:If V3>67000 Then Print "ERROR":Sleep:END
CUR+=1:V3+=1:Loop While V1<>0:CUR-=1:V2=CUR:CUR+=SIZE:USED=CUR-(@DAT(0)):V3-=1:RETR=V3
'Print "FOUND AS ";;Hex$(V2);", SKIP: ";V3;", MARGIN: ";OFFS+1;", SIZE: ";SIZE;", END AT: ";USED
Return ByVal V2:End Function
' - - - - - 


