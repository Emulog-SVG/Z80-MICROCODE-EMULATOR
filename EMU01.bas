#Include once "Windows.bi"
#include Once "crt/stdio.bi"
#include "fbgfx.bi"
FreeConsole()

' - - - MOVED TO END NAMED HERE
Declare Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr 

' - - JUST SCREEN INIT HERE
ScreenRes 1024,960,32
'ScreenRes 2432,960,32,2
'Width 2432/8, 960/16 '' Use 8*14 font

' - - TEMP USE VARS
Dim Shared As Unsigned Long T1,T2,T3,T4,T5,T6,T7,T8,T9,T0,E1,E2,E3,E4,E5,E6,E7,E8,E9,E0,CYC
Dim Shared As ULongInt F1,F2,F3,F4,F5,F6,F7,F8,F9
Dim Shared As Unsigned Long S1,S2,S3,S4,S5,S6,S7,S8
Dim Shared AS DOUBLE SEC,SEC2

' - - CORE VARS
Type WRD:
EBC As ULongInt:TBC As ULongInt
EDE As ULongInt:TDE As ULongInt
EHL As ULongInt:THL As ULongInt
EAF As ULongInt:TAF As ULongInt
MEM As UByte Ptr:CUR As ULong Ptr:XCUR As ULong Ptr
HALT As ULong Ptr:IORD As UByte Ptr:IOWR As UByte Ptr
INTL As ULong 
INTC As ULong
INT0 As ULong
INT1 As ULong
INT2 As ULong
ROOT As ULong Ptr
IFF1 As ULong:IFF2 As ULong:I As ULong:R As ULong:
ISPFX As ULong:ISHALT As ULong:ISINT As ULong:ISEXT As ULong
TAK As ULong:UOP As ULong:IMM As ULong:ISFC As ULong
ADDER As ULong:ADDR As ULong:SUBST As ULong:PREFIX As ULong
PC As ULong:CODE As ULong:CUROFF As ULong:BUS As ULong
FLG As ULong:TEMP As ULong:ALU As ULong:T As ULong
Union:BC As ULongInt:Type:C As ULong:B As ULong:End Type:End Union
Union:DE As ULongInt:Type:E As ULong:D As ULong:End Type:End Union
Union:HL As ULongInt:Type:L As ULong:H As ULong:End Type:End Union
Union:AF As ULongInt:Type:F As ULong:A As ULong:End Type:End Union
Union:WZ As ULongInt:Type:Z As ULong:W As ULong:End Type:End Union
Union:SP As ULongInt:Type:P As ULong:S As ULong:End Type:End Union
Union:IX As ULongInt:Type:XL As ULong:XH As ULong:End Type:End Union
Union:IY As ULongInt:Type:YL As ULong:YH As ULong:End Type:End Union
LUT As UByte Ptr
LEXT As ULong Ptr
LTAK As ULong Ptr
RL As ULong Ptr
RR As ULong Ptr
RLC As UShort Ptr
RRC As UShort Ptr
SLA As UShort Ptr
SRA As UShort Ptr
SLL As UShort Ptr
SRL As UShort Ptr
DAA As UShort Ptr 
End Type

Dim Shared As WRD X
Dim Shared As ULong EXTL(16)
Dim Shared As ULong TAKL(16)
Dim Shared As ULong LREF(256) 
Dim Shared As UByte DAT(1024*1024*32) ' - - ALL-IN ARRAY LOCAL

' - - -  REPLACEMENT VALUES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dim Shared As Const ULong IULTR=511,IULRT=510,IURWR=509 
Dim Shared As Const ULong IULRADD=508,IULXADD=507,IULRADC=506,IULXADC=505
Dim Shared As Const ULong IULRSUB=504,IULXSUB=503,IULRSBC=502,IULXSBC=501
Dim Shared As Const ULong IULLR=500,IULRL=499
Dim Shared As Const ULong IULRAND=498,IULXAND=497
Dim Shared As Const ULong IULRXOR=496,IULXXOR=495
Dim Shared As Const ULong IULROR=494,IULXOR=493
Dim Shared As Const ULong IULRCP=492,IULXCP=491,IULZN=490

' SO ASSIGN EXACT NUMBERS IN SWITCH CASE TO OPERATORS HERE, CASE ZERO FOR ERROR TRACKING
Dim Shared As Const ULong IUABC=1,IUADE=2,IUAHL=3,IUAWZ=4,IUAAD=5,IUASP=6,IUAIX=7,IUAIY=8,IUAPCI=9 ' SET ADDRESS BUS 
Dim Shared As Const ULong IUFET=10,IUAIRIUF=11,IURALF=12,IULTB=13,IULBT=21 ' ULRT++8 SO 29 NEXT
Dim Shared As Const ULong IUALF=19,IULRBT=21,IULRCT=22,IULRDT=23,IULRET=24,IULRHT=25,IULRLT=26,IULRAT=28,IUHALT=27
Dim Shared As Const ULong IUBWR=29,IUCWR=30,IUDWR=31,IUEWR=32,IUHWR=33,IULWR=34,IUOWR=35,IUAWR=36 ' JUST USUAL REGS AWHILE
Dim Shared As Const ULong IURCW=37,IUWCW=38,IUDOW=39,IUNOP=40,IUTRD=41,IUTWR=42 ' MEM OPS AND UNOP
Dim Shared As Const ULong IULSLT=43,IULSHT=44 
Dim Shared As Const ULong IULWE=45,IULWA=46,IULWT=47,IULZT=48,IULW0=50
Dim Shared As Const ULong IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Dim Shared As Const ULong IUADIWZ=59,IUADIPC=60,IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68,IUIYD=69
Dim Shared As Const ULong IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77
Dim Shared As Const ULong IULBCD=78,IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85
Dim Shared As Const ULong IUPFDD=86,IUPFFD=87,IUPFCB=88,IUPFED=89,IUPFDC=90,IUPFFC=91 ' PREFIXES
Dim Shared As Const ULong IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98,IUYLWR=99 ' EXTRA REGISTER WRITE TO MEM
Dim Shared As Const ULong IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRT=106,IULLRA=107
Dim Shared As Const ULong IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113
Dim Shared As Const ULong IULRIA=114,IULRRA=115
Dim Shared As Const ULong IULRBL=116,IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRTL=122,IULRAL=123
Dim Shared As Const ULong IULRZL=124,IULRWL=125,IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129
Dim Shared As Const ULong IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134,IULTXH=135,IULTXL=136,IULTYH=137,IULTYL=138
Dim Shared As Const ULong IULBADD=139,IULTADD=145,IULXSADD=147,IULBADC=153,IULTADC=159,IULXSADC=161 ' X ORDER  SPH-SPL-IXH-IXL-IYH-IYL NEED REVERSE
Dim Shared As Const ULong IULBSUB=167,IULTSUB=173,IULXSSUB=175,IULBSBC=181,IULTSBC=187,IULXSSBC=189,IUFQADD=195
Dim Shared As Const ULong IUOINC=196,IUODEC=197,IUFQID=198
Dim Shared As Const ULong IULBAND=199,IULTAND=205,IULXSAND=207
Dim Shared As Const ULong IULBXOR=213,IULTXOR=219,IULXSXOR=221
Dim Shared As Const ULong IULBOR=227,IULTOR=233,IULXSOR=235
Dim Shared As Const ULong IULBCP=241,IULTCP=247,IULXSCP=249
Dim Shared As Const ULong IUFQSH=255,IUORLC=256,IUORRC=257,IUORL=258,IUORR=259
Dim Shared As Const ULong IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263,IUORES=264,IUOSET=265
Dim Shared As Const ULong IULTSADD=266,IUOSADDC=267,IUOBIT=268,IUODAA=269
Dim Shared As Const ULong SIGUWZ=270,SIGUHL=271,SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275
Dim Shared As Const ULong IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280,IECCPO=281,IECCM=282,IECCP=283
Dim Shared As Const ULong ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289,ISWCCP=290,ISWCCM=291
Dim Shared As Const ULong IUOCPL=292,IUOSCF=293,IUOCCF=294,IUEXA=295,IUEXX=296,IUDFF=297,IUSFF=298,IUCFF=299,IUXHD=300
Dim Shared As Const ULong IUNWR=301,IUTIO=302,IUPOW=303,IUFWR=304,IUONEG=305,IULLRI=306,IULLRR=307,IUFQIR=308
Dim Shared As Const ULong IUOQIO=309,IUORVN=310,IULANLL=311,IULTNLL=312,IULANLH=313,IULTNHL=314
Dim Shared As Const ULong IUIM0=315,IUIM1=316,IUIM2=317,IULAQLD=318,IULTCPQ=319,IUOQPV=320 
Dim Shared As Const ULong IUADDWZ=321,IUTADDQI=322,IUTADDQD=323,IULLRZ=324,IDONE=325,IPAR=326,IEXT=327
Dim Shared As Const ULong IUIFF=328,IUIMRQ=329,IUIMFET=330,IULWI=331,IULZ00=332,IUWBITQ=340,ISKIP6Z=341

' EMULATION LUTs
Dim Shared As Unsigned Byte Ptr PFLAG,PADD,PSUB,PAND,PXOR,PPOR,PPCP
Dim Shared As Unsigned Byte Ptr PRLC,PRRC,PRL,PRR,PSLA,PSRA,PSLL,PSRL,PDAA

Dim Shared As Const ULong XDD=256,XFD=512,XCB=768,XED=1024,XDDCB=1280,XFDCB=1536
Dim Shared As Const ULong XFS=128,XFZ=64,XF5=32,XFH=16,XF3=8,XFP=4,XFN=2,XFC=1,XLDIR=7,XCPIR=7,XMAIN=2,XXDCB=10,XDJNZ=6
Dim Shared As Const ULong URB=7-0,URC=7-1,URD=7-2,URE=7-3,URH=7-4,URL=7-5,URA=7-7
Dim Shared As Const ULong USH=5,USL=4,UYH=3,UYL=2,UXH=1,UXL=0
Dim Shared As ULongInt Ptr MAIN,DD,FD,CB,DDCB,FDCB,ED,PROOT

Dim Shared As Const ULong CADD=0,CSUB=131072,CAND=262144,CXOR=327680,COR=393216,CCP=458752
Dim Shared As Const ULong CRLC=524288,CRRC=524800,CRL=525312,CRR=526336
Dim Shared As Const ULong CSLA=527360,CSRA=527872,CSLL=528384,CSRL=528896,CDAA=529408

Dim Shared As ULong Ptr PMOS,PMCUR,XSCR
Dim Shared As UByte Ptr PMEM,CUR

XSCR=ScreenPtr

' - - -  LUMIFY VARS
Dim Shared As Any Ptr IMG,PAL
Dim Shared As ULongInt Ptr PPQM,PQPX,PPTOC,PPTOL,PBLR
Dim Shared As Unsigned Long Ptr PPAL,PBIG,PPC,PIC,PQPL,PSS,TSS,PYTOP,PYTOA,PBTOX,PBTOY,PBTOS,PBTOT,PATF
Dim Shared As UShort Ptr PCLIM,PPLIM,PMLIM
Dim Shared As Unsigned Byte Ptr PSPP,PCVZ,PNOI,PREV,PPAT,PSHF
Dim Shared As Unsigned Long BBASE, PBASE, ABASE,MOSX
Dim Shared As Single DIVD,DIVS,DIVF,DIVM

'Dim Shared As Unsigned Long Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9
'Dim Shared As Unsigned Byte Ptr B1,B2,B3,B4,B5,B6,B7,B8,B9,B0
'Dim Shared As Unsigned Long Ptr P1,P2,P3,P4,P5,P6,P7,P8
'Dim Shared As ULongInt Ptr U1,U2,U3,U4
'Dim Shared As ULongInt Ptr X1,X2,X3,X4
Dim Shared As UShort W1,W2,W3,W4



'Dim Shared As ULong XB,XC,XD,XE,XH,XL,XT,XA,XF
'Dim SHARED As ULong EXB,EXC,EXD,EXE,EXH,EXL,EXA,EXF
'DIM SHARED As ULong XW,XZ,XS,XP,XXH,XXL,XYH,XYL',XI,XR,XALUF,XALU,XBUS

'Dim Shared As ULong ISFC,TEMP,XPC
'Dim SHARED As ULong XADDER,XIFF1,XIFF2,XIMM
'DIM SHARED As ULong XADDR,XSUBST,XCODE,XPREFIX,XCUROFF',XBYTE,XSADD,FIRST01
'DIM Shared As ULong ISPFX,ISHALT,ISINT,X.ISEXT'EXTACT,EXTSEL,ISPAR,ISEND,ISFSET
DIM SHARED As ULong XERR,XPOFF,USED,RETR

Dim Shared As ULong REG,REGL,REGR,ALUO


Dim Shared As String K$,A$,B$,C$,D$,SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8,SS9,SS10,SS11,SS12,Q$,O$

Dim Shared As Unsigned Long UOPN(512),UOPL(512),XMNEM(1792),XMLEN(1792)


' - - - START HERE ' - - - INIT ONLY IN THIS ORDER

' - - ALLOCATE CHUNKS GRANULAR BY BYTES
#Include "EMU_ALU_LUT.EXT" ' HERE COMBINED MANY

Dim As FILE Ptr filePtr:
filePtr = fopen("ELITE.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
BBASE = 208: PBASE = 16384: ABASE = 22528 ' BASE BRIGHT FOR ATTR, BASE SCREEN ADDR AND ITS ATTR
DIVD = 4: DIVS = 3.5:DIVF=DIVS*.9:DIVM=DIVS*.8:PATF=0' PATF ENABLE PATTERNS, DIVD CUT LUMA SURR 3*3,DIVS CUT LUMA TOTAL NON PATT, DIVF LESSCUT LINE PATT, DIVM LESS CUT CHECKER PATT 

#Include "EMU_LUMIFY.EXT" ' ALL SUBS OF SCRBLUR SCRSHOW ETC HERE
LUT_GFX_CREATE ' A BUNCH OF LUT CREATION ALL-IN-ONE, 656 FPS AWHILE, CALL ONCE
#Include "EMU_OPERATORS.EXT"
#Include "EMU_MICROCODE.EXT"

X.LEXT=@EXTL(0)
X.LTAK=@TAKL(0)
X.MEM=PMEM

' EXT 2 MEAN TO ENABLE EXT FIRST, ALL AND=1 ACT, MUST SKIP ONE CYCLE

TAKL(0)=1 ' MAIN DEC TAK
TAKL(4)=1 ' EACH MAIN EXT COUNTS
TAKL(10)=1 ' FIRST PAR: DO TAK

EXTL(2)=4 ' SO 4 SKIP ONE CYCLE NO ACTION
EXTL(4)=1 ' SO 1 DOES SINGLE ACTION
EXTL(1)=4 ' CYCLE 1/4 DO OVERLAP
' EXT: HERE  3 MEAN ACT TWICE
EXTL(3)=5 ' ENABLE SECOND ACT
EXTL(5)=7 ' GOTO USUAL
EXTL(7)=4 ' GOTO USUAL
' PAR: HERE SO ZEROBIT MAKE ACT MAIN NEED TO DO PAR RUN MAIN TWICE
EXTL(6)=8 ' ACT TWICE
EXTL(8)=10  
EXTL(10)=0  
EXTL(11)=0 ' lets done be xtra state  
EXTL(12)=0 ' TAK SKIPPERS MUST HERE  


' TEST SEQs HERE
F2=0:For F1=&H00 To 1:


Next   

'X.XH=&H21:X.XL=&H00 'IX 03D4
'X.YH=&H31:X.YL=&H00 'IY 5C3A

SEC=Timer

'T1=X.TAK

'Cls
'PSet (0,0)
'PSet (1023,767)
'Circle (512,384),380
'SCRSHOW
'Sleep
CYC=3500000*300
X.INTL=71680'69888
X.INTC=X.INT1
'X.TAK=22140+699'X.INTL 
X.TAK=0'X.INTL 

'E1=3
Do
If E1=3 Then E1=1:ScreenRes 2400,960,32:Width 2400/8, 960/16 Else EndIf


If X.ISEXT And 1 Then 
X.UOP=*X.XCUR
If E1 Then XPOFF=X.XCUR-PMOS':SS1+=" EXT   :" 'Str(X.ISEXT)
X.XCUR+=1 
Else X.UOP=*X.CUR
If E1 Then XPOFF=X.CUR-PMOS':SS1+="   MAIN:"
X.CUR+=1:If X.TAK=X.INTL Then X.TAK=0:If X.IFF1 Then X.ISINT=1':E1=1:ScreenRes 2432,960,32:Width 2432/8, 960/16

EndIf



#Include "EMU_MICROACT.EXT"

If X.UOP=IUAPCI And X.ADDR=&H1287  Then X.TAK+=0:E1=1:ScreenRes 2400,960,32:Width 2400/8, 960/16 Else EndIf
If E3=5 And ((X.B Shl 8)+X.C)=0  Then E1=1:E3=0':ScreenRes 2400,960,32:Width 2400/8, 960/16 Else EndIf
If E3=6 And ((X.H Shl 8)+X.L)<&H4000  Then E1=1:E3=0':ScreenRes 2400,960,32:Width 2400/8, 960/16 Else EndIf
If E3=7 And (X.B)=1  Then E1=1:E3=0':ScreenRes 2400,960,32:Width 2400/8, 960/16 Else EndIf


If E1 Then SHOWINFO':SCRSHOW2

If CYC<30000 Then 
filePtr = fopen("ELITE_ZDOC.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
X.CUR=PMOS
X.SUBST=32768
X.PC=32768
X.PREFIX=0
X.ISEXT=0
X.CUROFF=XMAIN
X.IMM=1
X.ISINT=0

X.A=&H00:X.FLG=&H5C 'AF 005C
X.EAF=(&H00 SHL 32)+&H5C 'AF' 005C
X.B=&H17:X.C=&H20 'BC 8000
X.EBC=(&H17 SHL 32)+&H21 'BC' 1721
X.D=&H00:X.E=&HB8 'DE 00B8
X.EDE=(&H5C SHL 32)+&HB9 'DE' 5CB9
X.H=&H00:X.L=&H38 'HL 0038
X.EHL=(&H00 SHL 32)+&H00 'HL' 0000
X.XH=&H03:X.XL=&HD4 'IX 03D4
X.YH=&H5C:X.YL=&H3A 'IY 5C3A
X.S=&H7F:X.P=&HF6 'SP 7FF6
X.I=&HA9:X.R=&HDC 'IR A9DC

CYC=3500000*1000

Else ENDIF



If E2>20000 Then 

If E1=0 And E3=0 Then SCRSHOW:Locate 97,1:Print "CYCLE=";CYC;" INT=";X.TAK

E2=0 
Else 
E2+=1
EndIf

CYC-=1:
K$=InKey
If K=" " Then CYC=0
If K="2" Then E1=0:ScreenRes 1024,960,32
If K="5" Then E1=0:E3=5:Print "*** 5 *** KILL LDIR ***"
If K="6" Then E1=0:E3=6:Print "*** 6 *** HL 4000 ***"
If K="7" Then E1=0:E3=7:Print "*** 7 *** KILL DJNZ ***"

'If INKEY="4" Then E1=1:ScreenRes 2400,960,32,2:Width 2400/8, 960/16

E0+=*(X.LTAK+X.ISEXT)
X.TAK+=*(X.LTAK+X.ISEXT)
X.ISEXT=*(X.LEXT+X.ISEXT)

Loop Until CYC=0

SEC=(Timer-SEC)
'End Sub:LOOP1

'Print:Print SEC:Print T1/SEC/1000000 
'Print "ALL ";T8;" ";T8/328;" ";F4/SEC2/1000000

'SCRBLUR
'SCALE (ScreenPtr())

Print "END":Sleep
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' - - - DATA LOCATOR, SAVE RETRIES TO RETR, USE *CURC AND "USED" TO COUNT
Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr Static 
Dim As ULongInt V1, V2,V3:If USED=0 Then CUR=@DAT(0)
V3=0:Do:V1=CUR:V1=V1 And OFFS:If V3>67000 Then Print "ERROR":Sleep:END
CUR+=1:V3+=1:Loop While V1<>0:CUR-=1:V2=CUR:CUR+=SIZE:USED=CUR-(@DAT(0)):V3-=1:RETR=V3
'Print "FOUND AS ";;Hex$(V2);", SKIP: ";V3;", MARGIN: ";OFFS+1;", SIZE: ";SIZE;", END AT: ";USED
Return ByVal V2:End Function
' - - - - - 


