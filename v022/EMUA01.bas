#cmdline "-asm intel -Wa --verbose"
#Include once "Windows.bi"
#include Once "crt/stdio.bi"
#Include Once "fbgfx.bi"
#Include "EMU_ASMDEF.EXT"

#Define XMAIN 2

Dim Shared As Const ULong MEMMAX=262144,UOPMAX=32768,PAGEMAX=7,XDD=256,XFD=512,XCB=768,XED=1024,XDDCB=1280,XFDCB=1536
Dim Shared As Const ULong XFS=128,XFZ=64,XF5=32,XFH=16,XF3=8,XFP=4,XFN=2,XFC=1,XLDIR=7,XCPIR=7,XXDCB=10,XDJNZ=6
Dim Shared As Const ULong CADD=0,CSUB=131072,CAND=262144,CXOR=327680,COR=393216,CCP=458752
Dim Shared As Const ULong CRLC=524288,CRRC=524800,CRL=525312,CRR=526336
Dim Shared As Const ULong CSLA=527360,CSRA=527872,CSLL=528384,CSRL=528896

Dim Shared As UByte DAT(1024*1024*32) ' - - ALL-IN ARRAY LOCAL
Dim Shared As ULongInt EBC,TBC,EDE,TDE,EHL,THL,EAF,TAF
Dim Shared As ULong INTL,INTC,INT0,INT1,INT2,IFF1,IFF2,TI,TR,ISPFX,ISHALT,ISINT,ISEXT,TAK,UOP,IMM,ISFC
Dim Shared As ULong ADDER,ADDR,SUBST,PREFIX,PC,CODE,BUS,FLG,TEMP,ALU,T,FQ,DSA
Dim Shared As UByte Ptr XMEM,IORD,IOWR,LUT
Dim Shared As ULong Ptr MCUR,ECUR,LROOT,LEXT,RL,RR
Dim Shared As UShort Ptr RLC,RRC,SLA,SRA,SLL,SRL,DAA 
Dim Shared As ULong TB,TC,TD,TE,TH,TL,TF,TA,TW,TZ,XH,XL,YH,YL,TS,TP

'Dim Shared As ULongInt UMR,UXR,UWR,UPR,USR,UTC,UXC,UPM,UER
Dim Shared As ULong Ptr UCUR
Dim Shared As UByte Ptr UDAT
Dim Shared As ULong ZZ,UZ,CUROFF,QQ,DD,UU



Dim Shared As UByte Ptr PMEM
Dim Shared As ULong Ptr PMOS,PMCUR
Dim Shared As ULongInt Ptr PROOT
Dim Shared As ULong EXTL(16),LREF(256),CYC,TSCRX,TSCRY
Dim Shared As Unsigned Long UOPN(512),UOPL(512),XMNEM(1792),XMLEN(1792)
Dim Shared As String SS1,SS2,SS3,SS4,SS5,SS6,SS7,SS8,SS9,Q$,O$,K$',A$,B$,C$,D$
Dim Shared As Unsigned Long T1,T2,T3,T4,T5',T6,T7,T8,T9,T0
Dim Shared As Unsigned Long E1,E2,E3,E4,E5,E6,E7,E8,E9,E0
Dim Shared As Unsigned Byte Ptr PFLAG,PADD,PSUB,PAND,PXOR,PPOR,PPCP
Dim Shared As Unsigned Byte Ptr PRLC,PRRC,PRL,PRR,PSLA,PSRA,PSLL,PSRL,PDAA
Dim Shared As UShort W1,W2,W3,W4

' - - -  LUMIFY VARS
Dim Shared As Any Ptr IMG,PAL
Dim Shared As ULongInt Ptr PPQM,PQPX,PPTOC,PPTOL,PBLR
Dim Shared As Unsigned Long Ptr PPAL,PBIG,PPC,PIC,PQPL,PSS,TSS,PYTOP,PYTOA,PBTOX,PBTOY,PBTOS,PBTOT,PATF
Dim Shared As UShort Ptr PCLIM,PPLIM,PMLIM
Dim Shared As Unsigned Byte Ptr PSPP,PCVZ,PNOI,PREV,PPAT,PSHF
Dim Shared As Unsigned Long BBASE, PBASE, ABASE,MOSX
Dim Shared As Single DIVD,DIVS,DIVF,DIVM

' - - TEMP USE VARS
Dim Shared As ULongInt F1,F2,F3,F4,F5,F6,F7,F8,F9
'Dim Shared As ULong Ptr LP1,LP2,LP3,LP4
Dim Shared As Unsigned Long S1,S2,S3,S4',S5,S6,S7,S8
Dim Shared AS DOUBLE SEC',SEC2



' - - - MASKED OFFSET DATA LOCATOR IN "DAT" UBYTE ARRAY
Function GETPTR(SIZE As ULongInt,OFFS As ULongInt) As Unsigned Byte Ptr Static:Static As ULongInt V1,V2,USED:Static As UByte Ptr CUR:
If USED=0 Then CUR=@DAT(0) Else EndIf:Do:V1=CUR:V1=V1 And OFFS:CUR+=1:Loop While V1<>0:CUR-=1:V2=CUR:CUR+=SIZE:USED=CUR-(@DAT(0)):Return ByVal V2:End Function

' - - - INITIALIZATION STAGE HERE
FreeConsole():ScreenRes 1024,768,32:Width 1024/8,768/16
#Include "EMU_MICROCODE.EXT" ' CONSTS, SUBS, GETPTRS , PMOS FIRST 


#Include "EMU_SUPPLEMENT.EXT"

BBASE = 208: PBASE = 16384: ABASE = 22528 ' BASE BRIGHT FOR ATTR, BASE SCREEN ADDR AND ITS ATTR
DIVD = 4: DIVS = 3.5:DIVF=DIVS*.9:DIVM=DIVS*.8:PATF=0' PATF ENABLE PATTERNS, DIVD CUT LUMA SURR 3*3,DIVS CUT LUMA TOTAL NON PATT, DIVF LESSCUT LINE PATT, DIVM LESS CUT CHECKER PATT 

MICROCODEANDLUT
LUT_GFX_CREATE

CUROFF=XMAIN
MCUR=*PROOT
TAK=0 

'Dim Shared As Unsigned Long Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9
'Dim Shared As Unsigned Byte Ptr B1,B2,B3,B4,B5,B6,B7,B8,B9,B0
'Dim Shared As Unsigned Long Ptr P1,P2,P3,P4,P5,P6,P7,P8
'Dim Shared As ULongInt Ptr U1,U2,U3,U4
'Dim Shared As ULongInt Ptr X1,X2,X3,X4
'Dim SHARED As ULong XERR,XPOFF',USED,RETR


' - - - START HERE ' - - - INIT ONLY IN THIS ORDER

TSCRX=2176:TSCRY=960

ScreenRes TSCRX,TSCRY,32:Width TSCRX/8, TSCRY/16 

Sub LOADREAL () Static 
Static As FILE Ptr filePtr:
filePtr = fopen("ELITE_REAL.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
SUBST=&H7459:PC=SUBST:
MCUR=PMOS:
PREFIX=0:ISEXT=0:CUROFF=XMAIN:IMM=2:IFF1=1:ISINT=0
'TAK=10680-1
TI=&HFD:TR=&H08
TS=&HFF:TP=&HFB
TA=&H00:FLG=&H54:TF=FLG:EAF=(&HA1 SHL 32)+&HA0 
TB=&H00:TC=&H00:EBC=(&HFF SHL 32)+&HFF
TD=&H5D:TE=&HE0:EDE=(&H3A SHL 32)+&H1F 
TH=&HF4:TL=&HE4:EHL=(&H03 SHL 32)+&H04 
XH=&HFF:XL=&H00
YH=&H61:YL=&HCC
End Sub
'LOADREAL

Sub LOADBIN () Static 
Static As FILE Ptr filePtr:
filePtr = fopen("ELITE_PFULL.BIN", "rb"):T1=fread(pmem, 65536,1 , fileptr):fclose (fileptr)
SUBST=&H8000:PC=SUBST:
MCUR=PMOS:
PREFIX=0:ISEXT=0:CUROFF=XMAIN:IMM=1:IFF1=0:ISINT=0:INTC=INT1
'TAK=10680-1
TA=&H41:FLG=&H14:TF=FLG:EAF=(&HA9 SHL 32)+&HAC 
TB=&H10:TC=&HCC:EBC=(&H20 SHL 32)+&HB3
TD=&HDD:TE=&HEE:EDE=(&HB3 SHL 32)+&H56 
TH=&H88:TL=&H00:EHL=(&H87 SHL 32)+&H75 
XH=&H03:XL=&HD4
YH=&H5C:YL=&H3A
TI=&HA9:TR=&H00
TS=&H7F:TP=&HF0
End Sub
LOADBIN


'For T1=0 To 255
'*(X.IORD+(T1 Shl 8)+&HFE)=&HBF
'Next
F1=PMOS
F2=PROOT
'Print F2-F1-ROOTOFF:Sleep:End

Sub CPU() Static

Do 
If ISEXT And 1 Then 
	UOP=*ECUR:ECUR+=1 
	Else 
	UOP=*MCUR:MCUR+=1:TAK+=(ISEXT Shr 5)
	If TAK=INTL Then 
	TAK=0
	If IFF1 Then ISINT=1 
	SCRSHOW2
K$=InKey
If K=" " Then CYC=0
If K="Y" Then *(IORD+&HDFFE)=&B11111110:SCROLLOC:Print " *** Y *** ";IUIFF' Else *(X.IORD+&HDFFE)=&B11111111:Print "                   " 
If K="P" Then SEC=Timer:SCROLLOC:Print " *** PAUSE *** ";SEC:Sleep 
	Else EndIf:
EndIf

' PACK REGISTERS FOR TESTING LOAD ONLY
'FQ=1:DSA=1:
QQ=FQ:DD=DSA

Asm
' UMR 
MOV EBX,TB;MOV ECX,TC;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,TD;MOV ECX,TE;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,TH;MOV ECX,TL;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,CODE;MOV ECX,ALU;Shl RAX,16;MOV AH,BL;MOV AL,CL;MOV UMR,RAX;
' UXR 
MOV EBX,TS;MOV ECX,TP;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,XH;MOV ECX,XL;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,YH;MOV ECX,YL;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,TF;MOV ECX,TA;Shl RAX,16;MOV AH,BL;MOV AL,CL;MOV UXR,RAX;
' UWR 
MOV EBX,TI;MOV ECX,TR;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,TW;MOV ECX,TZ;Shl RAX,16;MOV AH,BL;MOV AL,CL;
MOV EBX,PREFIX;Shl RAX,16;MOV AX,BX;
MOV EBX,BUS;MOV ECX,FLG;Shl RAX,16;MOV AH,BL;MOV AL,CL;MOV UWR,RAX;
' UPR 
MOV EBX,PC;Shl RAX,16;MOV AX,BX;
MOV EBX,SUBST;Shl RAX,16;MOV AX,BX;
MOV EBX,ADDER;Shl RAX,16;MOV AX,BX;
MOV EBX,ADDR;Shl RAX,16;MOV AX,BX;MOV UPR,RAX;
' USR 
MOV EAX,INTL;Shl RAX,8;
MOV EBX,IMM;Shl RAX,8;MOV AL,BL;
MOV ECX,0;ROR ECX,1;RCL EBX,1
MOV ECX,IFF1;ROR ECX,1;RCL EBX,1
MOV ECX,IFF2;ROR ECX,1;RCL EBX,1
MOV ECX,ISINT;ROR ECX,1;RCL EBX,1
MOV ECX,ISHALT;ROR ECX,1;RCL EBX,1;
MOV ECX,ISPFX;ROR ECX,1;RCL EBX,1;
MOV ECX,FQ;ROR ECX,1;RCL EBX,1;
MOV ECX,DSA;ROR ECX,1;RCL EBX,1;Shl RAX,8;MOV AL,BL
MOV EBX,ISEXT;Shl RAX,8;MOV AL,BL
MOV EBX,CUROFF;Shl RAX,8;MOV AL,BL
MOV EBX,T;Shl RAX,8;MOV AL,BL;MOV USR,RAX;
' UTC
MOV EBX,CYC;Shl RAX,32;MOV EAX,EBX;
MOV EBX,TAK;Shl RAX,32;MOV EAX,EBX;MOV UTC,RAX;
' UXC
MOV RCX,ECUR;Sub RCX,PMOS;Shl RAX,32;MOV EAX,ECX;
MOV RCX,MCUR;Sub RCX,PMOS;Shl RAX,32;MOV EAX,ECX;MOV UXC,RAX;
' UPM
MOV RAX,PMOS;MOV UPM,RAX
' UER
MOV RBX,EBC;Shl RAX,16;MOV AL,BL;SHR RBX,32;MOV AH,BL
MOV RBX,EDE;Shl RAX,16;MOV AL,BL;SHR RBX,32;MOV AH,BL
MOV RBX,EHL;Shl RAX,16;MOV AL,BL;SHR RBX,32;MOV AH,BL
MOV RBX,EAF;Shl RAX,16;MOV AH,BL;SHR RBX,32;MOV AL,BL;MOVD UER,RAX ' REV TO F'A'
' UVE
MOV EBX,INT0;Shl RAX,16;MOV AX,BX;
MOV EBX,INT1;Shl RAX,16;MOV AX,BX;
MOV EBX,INT2;Shl RAX,16;MOV AX,BX;
MOV EBX,INTC;Shl RAX,16;MOV AX,BX;MOVD UVE,RAX
End ASM

#Include "EMU_MICROREACT.EXT"

'UU=ZZ:
If ZZ Then 
ZZ=0
ASMGO;
'AFF DONE UPR ADDR,ADDER,PC,SUBST
MOVZX EAX,UPRW;MOV ADDR,EAX;'UPR>ADDR
ROR UPR,16;MOVZX EAX,UPRW;MOV ADDER,EAX;'UPR>ADDER
ROR UPR,16;MOVZX EAX,UPRW;MOV SUBST,EAX;'UPR>SUBST
ROR UPR,16;MOVZX EAX,UPRW;MOV PC,EAX;' UPR>PC
' AFF UMR CODE
ROR UMR,8;MOVZX EAX,UMRB;MOV CODE,EAX;' UMR>CODE
' AFF UWR PREFIX
ROR UWR,16;MOVZX EAX,UWRW;MOV PREFIX,EAX; 'UWR>PREFIX
' AFF USR CUROFF
ROR USR,8;MOVZX EAX,USRB;MOV CUROFF,EAX;' USR>CUROFF
'AFF SYS/Q,DSA,ISPFX
ROR USR,16;MOV BL,USRB;'USR>SYS,BL=
Xor EAX,EAX;BT BX,0;ADC EAX,EAX;MOV DSA,EAX'DSA>C
Xor EAX,EAX;BT BX,1;ADC EAX,EAX;MOV FQ,EAX'Q>C
Xor EAX,EAX;BT BX,2;ADC EAX,EAX;MOV ISPFX,EAX'ISPFX>C
'AFF UXC MCUR
Xor RAX,RAX;MOV EAX,UXCD;Add RAX,UPM;MOV MCUR,RAX;'UXC>MCURO

ADONE:

If 0 Then 
'If UOP=IUAPCI Then
SCROLLOC:
If DD Then Print "DSA ";
If QQ Then Print "Q ";
Print (ISEXT And 31);" ";
Print Mid$(Q$,UOPN(UOP),UOPL(UOP));" ";
If DSA Then Print "DSA ";
If FQ Then Print "Q ";
SCROLLOC:
Sleep
EndIf

Else EndIf



'If UOP=IUTIO And K$="" Then For T1=0 To 255:*(X.IORD+(T1 Shl 8)+&HFE)=&HBF:Next Else EndIf

'GoTo FAST

'If E3=1 And UOP=IUAPCI And ADDR=&H8291 Then E1=1:E3=0
'If E3=2 And UOP=334 Then E1=1:E3=0
'If E3=3 And UOP=IULTCPQ Then E1=1:E3=0
'If E3=4 And UOP=IUTIO Then E1=1:E3=0
'If E3=5 And ((TB Shl 8)+TC)=0  Then E1=1:E3=0
'If E3=6 And ((TH Shl 8)+TL)<&H4000 Then E1=1:E3=0
'If E3=7 And (TB)=0  Then E1=1:E3=0
'If E3=8 And TAK>(INTL-40)  Then E1=1:E3=0
'If E3=9 And UOP=SIGUWZ Then E1=1:E3=0
'If E3=10 Then E1=1:E3=0:ScreenRes TSCRX,TSCRY,32:Width TSCRX/8, TSCRY/16 Else EndIf
'If E1 Then SCROLLOC:SHOWINFO:SCRSHOW2
'E0+=*(X.LEXT+ISEXT) Shr 5
'K$=InKey
'If K=" " Then CYC=0
'If K="1" Then E1=0:E3=1:SCROLLOC:Print "*** 1 *** 8291 ***"
'If K="2" Then E1=0:E3=2:SCROLLOC:Print "*** 2 *** RST10 ***"
'If K="3" Then E1=0:E3=3:SCROLLOC:Print "*** 3 *** ULTCPQ ***"
'If K="4" Then E1=0:E3=4:SCROLLOC:Print "*** 4 *** UTIO PORT READ ***"
'If K="5" Then E1=0:E3=5:SCROLLOC:Print "*** 5 *** KILL LDIR ***"
'If K="7" Then E1=0:E3=7:SCROLLOC:Print "*** 7 *** KILL DJNZ ***"
'If K="8" Then E1=0:E3=8:SCROLLOC:Print "*** 8 *** SEEK INT START ***"
'If K="9" Then E1=0:E3=9:SCROLLOC:Print "*** 9 *** USEWZ SEEK ***"
'If K="Z" Then E3=99:SCROLLOC:Print "*** START *** "
'If K="Y" Then *(X.IORD+&HDFFE)=&B11111110:SCROLLOC:Print " *** Y *** "' Else *(X.IORD+&HDFFE)=&B11111111:Print "                   " 
'If K="U" Then *(X.IORD+&HDFFE)=&B11111101:SCROLLOC:Print " *** U *** "' Else *(X.IORD+&HDFFE)=&B11111111:Print "                   " 
'If K="Q" Then E7=10000
'If K="W" Then E7=1000
'If K="E" Then E1=0
'If K="R" Then E1=1
'If K="O" Then TAK-=1
'If K="P" Then SCROLLOC:Print " *** PAUSE *** ":Sleep 
'FAST:
'Print:Print SEC:Print T1/SEC/1000000 
'Print "ALL ";T8;" ";T8/328;" ";F4/SEC2/1000000

'CYC-=1
ISEXT=*(LEXT+(ISEXT And 31))
Loop Until CYC=0
End Sub

CYC=1'3500000*20'000
SEC=Timer
CPU
SEC=(Timer-SEC)


'

SCROLLOC:Print SEC,20/SEC,"Z USED ";UZ

Sleep
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 




