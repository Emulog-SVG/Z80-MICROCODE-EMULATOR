Select Case As Const UOP 

Case 0: 'XERR+=1 '"ERROR ZERO"
' SET ADDRESS BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 1: ZZ=1:ASMGO;ROR UMR,48;MOV UPRW,UMRW;ROR UPR,16;MOV UPRW,UMRW;ROL UPR,16;ROL UMR,48;ADONE' "UADBC"
Case 2: ZZ=1:ASMGO;ROR UMR,32;MOV UPRW,UMRW;ROR UPR,16;MOV UPRW,UMRW;ROL UPR,16;ROL UMR,32;ADONE' "UADDE"
Case 3: ZZ=1:ASMGO;ROR UMR,16;MOV UPRW,UMRW;ROL UMR,16;ADONE'"UAHL"
Case 4: ZZ=1:ASMGO;ROR UWR,32;MOV UPRW,UWRW;ROL UWR,32;ADONE'"UAWZ"
Case 5: ZZ=1:ASMGO;ROR UPR,16;MOV AX,UPRW;ROL UPR,16;MOV UPRW,AX;ADONE'"UAAD"
Case 6: ZZ=1:ASMGO;ROR UXR,48;MOV UPRW,UXRW;ROR UPR,16;MOV UPRW,UXRW;ROL UPR,16;ROL UXR,48;ADONE'"UADSP"
Case 7: ZZ=1:ASMGO;ROR UXR,32;MOV UPRW,UXRW;ROL UXR,32;ADONE'"UAIX" 
Case 8: ZZ=1:ASMGO;ROR UXR,16;MOV UPRW,UXRW;ROL UXR,16;ADONE'"UAIX"

'- - - UAPCI - - - - - - - - ' USE SUBST AS SOURCE TO CATCH WZ/RR, Q IS RESET TO UNDEFINED STATE

Case 9: 'ADDR=SUBST:ADDER=((ADDR+1)And &HFFFF):PC=ADDER:SUBST=ADDER:FQ=DSA:DSA=0 ' "UAPCI"
ZZ=1:
ASMGO;ROR UPR,32;MOV AX,UPRW;ROL UPR,32;MOV UPRW,AX;' UPR>SUBST>AX,UPR>ADDR=AX
INC AX;ROR UPR,16;MOV UPRW,AX; 'UPR>ADDER=AX
ROR UPR,16;MOV UPRW,AX;'UPR>SUBST=AX
ROR UPR,16;MOV UPRW,AX;ROR UPR,16'UPR>PC=AX,UPR>ADDR
ROR USR,24;'USR>SYS
ROR USRB,2;'SYS>ISPFX,DSA>6
BTR USRW,6;RCL USRB,1;ROL USRB,1;'SYS>DSA
ROL USR,24;ADONE '>USR>T

' - - - UFET - - - OPCODE FETCH - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 10:
ZZ=1:
Asm
MOVZX RAX,UPRW;' RAX=ADDR
ROR UMR,8;MOV UMRB,[RAX+UPM+MEMOFF];'UMR>CODE CODE=*(XMEM+ADDR)
ROR UWR,16;'UWR>PREFIX
MOVZX RAX,UMRB;MOVZX RBX,UWRW;Add RAX,RBX;'TEMP=PREFIX+CODE
ROL UMR,8;'UMR>START
MOV RAX,[RAX*8+UPM+ROOTOFF];'*(PROOT+TEMP) 8 BYTE PTR HERE
ROR USR,8;MOVZX RBX,USRB;LEA RAX,[RAX+RBX*4];'USR>CUROFF MCUR+=CUROFF
Sub RAX,UPM;MOV UXCD,EAX;' GET MCUR-OFFSET TO LONG ARRAY
MOV AX,USRW;MOV AL,XMAIN;Xor BX,BX;
BTR USRD,18;CMOVC USRW,AX;CMOVC UWRW,BX;' 'If ISPFX=1 Then ISPFX=0 CUROFF=XMAIN PREFIX=0
ROL USR,8;'USR>START
ROL UWR,16;'UWR>START
ADONE
'CODE=*(XMEM+ADDR):MCUR=*(PROOT+PREFIX+CODE):MCUR+=CUROFF:If ISPFX=1 Then ISPFX=0:CUROFF=XMAIN:PREFIX=0 Else EndIf: ' "UFET"

' UAIRIUF DO UAIR, INC R, LD F,FLG; R ONLY 7 BIT INCREASE, MSB UNCHANGED
Case 11: ADDR=TR+(TI Shl 8):TF=FLG:TR=LREF(TR):' "UAIRIUF"

' URALF DO DUMMY REF AND LD FLG,F
Case 12: FLG=TF:' "URALF"

' ULTR LD T,REGISTER SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 13: T=TB:' "ULTRB"
Case 14: T=TC:' "ULTRC"
Case 15: T=TD:' "ULTRD"
Case 16: T=TE:' "ULTRE"
Case 17: T=TH:' "ULTRH"
Case 18: T=TL:' "ULTRL"
Case 19: FLG=TF:' "UALF":
Case 20: T=TA:' "ULTRA":
' ULTR LD REGISTER,T SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 21: TB=T: '"ULRBT"
Case 22: TC=T: '"ULRCT"
Case 23: TD=T: '"ULRDT"
Case 24: TE=T: '"ULRET"
Case 25: TH=T: '"ULRHT"
Case 26: TL=T: '"ULRLT"
Case 27: ISHALT=1:'"UHALT"
Case 28: TA=T: '"ULRAT"
' URWR WRITE REGISTER TO MEMORY AWHILE SO, NEED CHANGE LAST UWCWs ALL TO ACTUAL WRITE 
Case 29: BUS=TB: '"UBWR"
Case 30: BUS=TC: '"UCWR"
Case 31: BUS=TD: '"UDWR"
Case 32: BUS=TE: '"UEWR"
Case 33: BUS=TH: '"UHWR"
Case 34: BUS=TL: '"ULWR"
Case 35: BUS=ALU: '"UOWR"
Case 36: BUS=TA: '"UAWR"
' MEM CYCLES AND ACT
Case 37: '"URCW"
Case 38: '"UWCW"
Case 39: If ADDR>16383 Then *(XMEM+ADDR)=BUS Else EndIf: ' "UDOW"
'PSet (ADDR And 255,(ADDR Shr 8)+256),TAK 

'If ADDR And 256 Then 
'PSet ((ADDR And 255)+256, (ADDR SHR 8)+256),TAK Shr (TAK And 7)
'ScreenSet TAK And 1
'*(XSCR+256+(ADDR And 255)+(256+(ADDR SHR 8))*1024)=TAK

Case 40: ' "UNOP"
Case 41: T=*(XMEM+ADDR) '"UTRD" 
'PSet (ADDR And 255,(ADDR Shr 8)+512),TAK


Case 42: BUS=T:' "UTWR"
Case 43: TP=T: '"ULSLT"
Case 44: TS=T: '"ULSHT"
' SOME W AND Z LOADS 'IULWE=45,IULWA=46,IULWT=47,IULZT=48,,IULW0=50
Case 45: 'TW=TA: '"ULWERR"
Case 46: TW=TA: '"ULWA"
Case 47: TW=T: '"ULWT"
Case 48: TZ=T: '"ULZT"
Case 49: 'TZ=CODE And &B00111000:' "ULZN":
Case 50: TW=0: '"ULW0":
' VIA ADDER INCREASES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' - - - - IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Case 51: TZ=((TZ+(TW Shl 8))+1) And &hFFFF:TW=TZ Shr 8:TZ And=&HFF'"UWZI":
Case 52: TC=((TC+(TB Shl 8))+1) And &hFFFF:TB=TC Shr 8:TC And=&HFF'"UBCI":
Case 53: TE=((TE+(TD Shl 8))+1) And &hFFFF:TD=TE Shr 8:TE And=&HFF'"UDEI":
Case 54: TL=((TL+(TH Shl 8))+1) And &hFFFF:TH=TL Shr 8:TL And=&HFF'"UHLI":
Case 55: TP=((TP+(TS Shl 8))+1) And &hFFFF:TS=TP Shr 8:TP And=&HFF'"USPI":
Case 56: ADDER=(ADDER+1) And &HFFFF:'"UADI":
Case 57: XL=((XL+(XH Shl 8))+1) And &hFFFF:XH=XL Shr 8:XL And=&HFF'"UIXI":
Case 58: YL=((YL+(YH Shl 8))+1) And &hFFFF:YH=YL Shr 8:YL And=&HFF'"UIYI":
' VIA ADDER DECREASE CROSSLOADS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'- - - -  IUADIWZ=59,IUADIPC=60
Case 59: ADDER+=1:TZ=ADDER And &HFF:TW=(ADDER Shr 8) And &HFF'TEMP=ADDER:TZ=TEMP And &hFF:TEMP Shr= 8:TW=TEMP' And &hFF:'"CROSS UADIWZ":
Case 60: PC=((ADDER+1)And &HFFFF):'"UADIPC":
' VIA ADDER DECREASES AND UBCDPV  - - - - ' IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68,IUIYD=69
Case 61: ADDER=(ADDER-1) And &HFFFF':"UADD":
Case 62: TC=((TC+(TB Shl 8))-1)And &hFFFF:TB=TC Shr 8:TC And= &hFF:'"UBCD":
Case 63: TC=((TC+(TB Shl 8))-1)And &hFFFF:TB=TC Shr 8:TC And= &hFF:If (TB+TC) Then FLG Or= XFP Else FLG And= &B11111011 EndIf ' "UBCDPV": 'PV set if BC not 0 P0 IS ZERO PE IS TRUE
Case 64: TE=((TE+(TD Shl 8))-1)And &hFFFF:TD=TE Shr 8:TE And= &hFF:'"UDED":
Case 65: TL=((TL+(TH Shl 8))-1)And &hFFFF:TH=TL Shr 8:TL And= &hFF:'"UHLD":
Case 66: TP=((TP+(TS Shl 8))-1)And &hFFFF:TS=TP Shr 8:TP And= &hFF:'"USPD":
Case 67: TZ=((TZ+(TW Shl 8))-1)And &hFFFF:TW=TZ Shr 8:TZ And= &hFF:'"UWZD":
Case 68: XL=((XL+(XH Shl 8))-1)And &hFFFF:XH=XL Shr 8:XL And= &hFF:'"UIXD":
Case 69: YL=((YL+(YH ShL 8))-1)And &hFFFF:YH=YL Shr 8:YL And= &hFF:'"UIYD":
' LOAD ADDER,RR - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77
Case 70: ADDER=(TC+(TB Shl 8))'"ULDBC":
Case 71: ADDER=(TE+(TD Shl 8))'"ULDDE":
Case 72: ADDER=(TL+(TH Shl 8))'"ULDHL":
Case 73: ADDER=(TP+(TS Shl 8))'"ULDSP":
Case 74: ADDER=(TZ+(TW ShL 8))'"ULDWZ":
Case 75: ADDER=PC:'"ULDPC":
Case 76: ADDER=(XL+(XH Shl 8))':"ULDIX":
Case 77: ADDER=(YL+(YH Shl 8))':"ULDIY":
' LOAD RR,ADDER - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULBCD=78,IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85
Case 78: TC=ADDER And &hFF:TB=ADDER Shr 8 '"ULBCD":
Case 79: TE=ADDER And &hFF:TD=ADDER Shr 8 '"ULDED":
Case 80: TL=ADDER And &hFF:TH=ADDER Shr 8 '"ULHLD":
Case 81: TZ=ADDER And &hFF:TW=ADDER Shr 8 '"ULWZD":
Case 82: TP=ADDER And &hFF:TS=ADDER Shr 8 '"ULSPD":
Case 83: PC=ADDER:SUBST=ADDER '"ULPCD":
Case 84: XL=ADDER And &hFF:XH=ADDER Shr 8 '"ULIXD":
Case 85: YL=ADDER And &hFF:YH=ADDER Shr 8 '"ULIYD":
' PREFIXES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'- -  IUPFDD=86,IUPFFD=87,IUPFCB=88,IUPFED=89,IUPFDC=90,IUPFFC=91 ' PREFIXES
Case 86: PREFIX=XDD:ISPFX=1:CUROFF=XMAIN:'"UPFDD #DD":
Case 87: PREFIX=XFD:ISPFX=1:CUROFF=XMAIN:'"UPFFD #FD":
Case 88: PREFIX=XCB:ISPFX=1:CUROFF=XMAIN:'"UPFCB #CB":
Case 89: PREFIX=XED:ISPFX=1:CUROFF=XMAIN:'"UPFED #ED":
Case 90: PREFIX=XDDCB:ISPFX=1:CUROFF=XXDCB:'"UPFDC #DDCB":
Case 91: PREFIX=XFDCB:ISPFX=1:CUROFF=XXDCB:'"UPFFC #FDCB":
' - - - EXTRA REGISTER SETUP DATA BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98,IUYLWR=99 ' EXTRA REGISTER WRITE TO MEM
Case 92: BUS=TP: '"USLWR":
Case 93: BUS=TS: '"USHWR":
Case 94: BUS=(PC And &HFF): '"UPLWR":
Case 95: BUS=(PC SHR 8): '"UPHWR":
Case 96: BUS=XH: '"UXHWR":
Case 97: BUS=XL: '"UXLWR":
Case 98: BUS=YH: '"UYHWR":
Case 99: BUS=YL: '"UYLWR":
' - - - LD ALU,R SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRA=106
' IULLRT=107,IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113
Case 100: ALU=TB: '"ULLRB":
Case 101: ALU=TC: '"ULLRC":
Case 102: ALU=TD: '"ULLRD":
Case 103: ALU=TE: '"ULLRE":
Case 104: ALU=TH: '"ULLRH":
Case 105: ALU=TL: '"ULLRL":
Case 106: ALU=T: '"ULLRT":
Case 107: ALU=TA: '"ULLRA":
Case 108: ALU=XL: '"ULLXL":
Case 109: ALU=XH: '"ULLXH":
Case 110: ALU=YL: '"ULLYL":
Case 111: ALU=YH: '"ULLYH":
Case 112: ALU=PC And &HFF: '"ULLPL":
Case 113: ALU=PC Shr 8: '"ULLPH":
' - - - LD IR,A SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
' IULRIA=114,IULRRA=115
Case 114: TI=TA: '"ULRIA":
Case 115: TR=TA: '"ULRRA":
' - - - LD R,ALU SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULRBL=116,IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRAL=122
' IULRTL=123,IULRZL=124,IULRWL=125,IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129
Case 116: TB=ALU: '"ULRBL":
Case 117: TC=ALU: '"ULRCL":
Case 118: TD=ALU: '"ULRDL":
Case 119: TE=ALU: '"ULREL":
Case 120: TH=ALU: '"ULRHL":
Case 121: TL=ALU: '"ULRLL":
Case 122: T=ALU: '"ULRTL":
Case 123: TA=ALU: '"ULRAL":
Case 124: TZ=ALU: '"ULRZL":
Case 125: TW=ALU: '"ULRWL":
Case 126: XL=ALU:' "ULXLL":
Case 127: XH=ALU:' "ULXHL":
Case 128: YL=ALU:' "ULYLL":
Case 129: YH=ALU: '"ULYHL":
' - - TO FROM T TOSS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134,IULTXH=135,IULTXL=136,IULTYH=137,IULTYL=138
Case 130: TF=T: '"ULRFT":
Case 131: XL=T:' "ULXLT":
Case 132: XH=T:' "ULXHT":
Case 133: YL=T:' "ULYHT":
Case 134: YH=T:' "ULYLT":
Case 135: T=XL:' "ULTXL":
Case 136: T=XH:' "ULTXH":
Case 137: T=YL:' "ULTYL":
Case 138: T=YH:' "ULTYH":
' - - ALU OP ADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBADD=139,IULTADD=145
Case 139: FLG=*(LUT+CADD+(ALU SHL 1)+(TB Shl 9)):ALU=((ALU+TB) And &HFF):DSA=1'"ULBADD":
Case 140: FLG=*(LUT+CADD+(ALU SHL 1)+(TC Shl 9)):ALU=((ALU+TC) And &HFF):DSA=1'"ULCADD":
Case 141: FLG=*(LUT+CADD+(ALU SHL 1)+(TD Shl 9)):ALU=((ALU+TD) And &HFF):DSA=1'"ULDADD":
Case 142: FLG=*(LUT+CADD+(ALU SHL 1)+(TE Shl 9)):ALU=((ALU+TE) And &HFF):DSA=1'"ULEADD":
Case 143: FLG=*(LUT+CADD+(ALU SHL 1)+(TH Shl 9)):ALU=((ALU+TH) And &HFF):DSA=1'"ULHADD":
Case 144: FLG=*(LUT+CADD+(ALU SHL 1)+(TL Shl 9)):ALU=((ALU+TL) And &HFF):DSA=1'"ULLADD":
Case 145: FLG=*(LUT+CADD+(ALU SHL 1)+(T Shl 9)):ALU=((ALU+T) And &HFF):DSA=1'"ULTADD":
Case 146: FLG=*(LUT+CADD+(ALU SHL 1)+(TA Shl 9)):ALU=((ALU+TA) And &HFF):DSA=1'"ULAADD":
' IULXADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULXSADD=147 ' X ORDER  SPH-SPL-IXH-IXL-IYH-IYL
Case 147: FLG=*(LUT+CADD+(ALU SHL 1)+(TS Shl 9)):ALU=((ALU+TS) And &HFF):DSA=1'"ULXSADD":
Case 148: FLG=*(LUT+CADD+(ALU SHL 1)+(TP Shl 9)):ALU=((ALU+TP) And &HFF):DSA=1'"ULXX.LUT+CADD":
Case 149: FLG=*(LUT+CADD+(ALU SHL 1)+(XH Shl 9)):ALU=((ALU+XH) And &HFF):DSA=1'"ULXHADD":
Case 150: FLG=*(LUT+CADD+(ALU SHL 1)+(XL Shl 9)):ALU=((ALU+XL) And &HFF):DSA=1'"ULXLADD":
Case 151: FLG=*(LUT+CADD+(ALU SHL 1)+(YH Shl 9)):ALU=((ALU+YH) And &HFF):DSA=1'"ULYHADD":
Case 152: FLG=*(LUT+CADD+(ALU SHL 1)+(YL Shl 9)):ALU=((ALU+YL) And &HFF):DSA=1'"ULYLADD":
' - - ALU OP ADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULBADC=153,IULTADC=159
Case 153: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TB Shl 9)+TEMP):ALU=((ALU+TB+TEMP) And &HFF):DSA=1'"ULBADC":
Case 154: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TC Shl 9)+TEMP):ALU=((ALU+TC+TEMP) And &HFF):DSA=1'"ULCADC":
Case 155: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TD Shl 9)+TEMP):ALU=((ALU+TD+TEMP) And &HFF):DSA=1'"ULDADC":
Case 156: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TE Shl 9)+TEMP):ALU=((ALU+TE+TEMP) And &HFF):DSA=1'"ULEADC":
Case 157: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TH Shl 9)+TEMP):ALU=((ALU+TH+TEMP) And &HFF):DSA=1'"ULHADC":
Case 158: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TL Shl 9)+TEMP):ALU=((ALU+TL+TEMP) And &HFF):DSA=1'"ULLADC":
Case 159: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(T Shl 9)+TEMP):ALU=((ALU+T+TEMP) And &HFF):DSA=1'"ULTADC":
Case 160: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TA Shl 9)+TEMP):ALU=((ALU+TA+TEMP) And &HFF):DSA=1'"ULAADC":
' IULXADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSADC=161
Case 161: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TS Shl 9)+TEMP):ALU=((ALU+TS+TEMP) And &HFF):DSA=1'"ULXSADC":
Case 162: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(TP Shl 9)+TEMP):ALU=((ALU+TP+TEMP) And &HFF):DSA=1'"ULXPADC":
Case 163: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(XH Shl 9)+TEMP):ALU=((ALU+XH+TEMP) And &HFF):DSA=1':"ULXHADC":
Case 164: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(XL Shl 9)+TEMP):ALU=((ALU+XL+TEMP) And &HFF):DSA=1':"ULXLADC":
Case 165: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(YH Shl 9)+TEMP):ALU=((ALU+YH+TEMP) And &HFF):DSA=1':"ULYHADC":
Case 166: TEMP=FLG And 1:FLG=*(LUT+CADD+(ALU SHL 1)+(YL Shl 9)+TEMP):ALU=((ALU+YL+TEMP) And &HFF):DSA=1':"ULYLADC":
' IULRSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBSUB=167,IULTSUB=173
Case 167: FLG=*(LUT+CSUB+(ALU SHL 1)+(TB Shl 9)):ALU=((ALU-TB) And &HFF):DSA=1'"ULBSUB":
Case 168: FLG=*(LUT+CSUB+(ALU SHL 1)+(TC Shl 9)):ALU=((ALU-TC) And &HFF):DSA=1'"ULCSUB":
Case 169: FLG=*(LUT+CSUB+(ALU SHL 1)+(TD Shl 9)):ALU=((ALU-TD) And &HFF):DSA=1'"ULDSUB":
Case 170: FLG=*(LUT+CSUB+(ALU SHL 1)+(TE Shl 9)):ALU=((ALU-TE) And &HFF):DSA=1'"ULESUB":
Case 171: FLG=*(LUT+CSUB+(ALU SHL 1)+(TH Shl 9)):ALU=((ALU-TH) And &HFF):DSA=1'"ULHSUB":
Case 172: FLG=*(LUT+CSUB+(ALU SHL 1)+(TL Shl 9)):ALU=((ALU-TL) And &HFF):DSA=1'"ULLSUB":
Case 173: FLG=*(LUT+CSUB+(ALU SHL 1)+(T Shl 9)):ALU=((ALU-T) And &HFF):DSA=1'"ULTSUB":
Case 174: FLG=*(LUT+CSUB+(ALU SHL 1)+(TA Shl 9)):ALU=((ALU-TA) And &HFF):DSA=1'"ULASUB":
' IULXSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSUB=175
Case 175: FLG=*(LUT+CSUB+(ALU SHL 1)+(TS Shl 9)):ALU=((ALU-TS) And &HFF):DSA=1'"ULXSSUB":
Case 176: FLG=*(LUT+CSUB+(ALU SHL 1)+(TP Shl 9)):ALU=((ALU-TP) And &HFF):DSA=1'"ULXX.LUT+CSUB":
Case 177: FLG=*(LUT+CSUB+(ALU SHL 1)+(XH Shl 9)):ALU=((ALU-XH) And &HFF):DSA=1'"ULXHSUB":
Case 178: FLG=*(LUT+CSUB+(ALU SHL 1)+(XL Shl 9)):ALU=((ALU-XL) And &HFF):DSA=1'"ULXLSUB":
Case 179: FLG=*(LUT+CSUB+(ALU SHL 1)+(YH Shl 9)):ALU=((ALU-YH) And &HFF):DSA=1'"ULYHSUB":
Case 180: FLG=*(LUT+CSUB+(ALU SHL 1)+(YL Shl 9)):ALU=((ALU-YL) And &HFF):DSA=1'"ULYLSUB":
' IULRSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRSBC=181,IULTSBC=187
Case 181: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TB Shl 9)+TEMP):ALU=((ALU-TB-TEMP) And &HFF):DSA=1'"ULBSBC":
Case 182: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TC Shl 9)+TEMP):ALU=((ALU-TC-TEMP) And &HFF):DSA=1'"ULCSBC":
Case 183: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TD Shl 9)+TEMP):ALU=((ALU-TD-TEMP) And &HFF):DSA=1'"ULDSBC":
Case 184: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TE Shl 9)+TEMP):ALU=((ALU-TE-TEMP) And &HFF):DSA=1'"ULESBC":
Case 185: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TH Shl 9)+TEMP):ALU=((ALU-TH-TEMP) And &HFF):DSA=1'"ULHSBC":
Case 186: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TL Shl 9)+TEMP):ALU=((ALU-TL-TEMP) And &HFF):DSA=1'"ULLSBC":
Case 187: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(T Shl 9)+TEMP):ALU=((ALU-T-TEMP) And &HFF):DSA=1'"ULTSBC":
Case 188: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TA Shl 9)+TEMP):ALU=((ALU-TA-TEMP) And &HFF):DSA=1'"ULASBC":
' IULXSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSBC=189
Case 189: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TS Shl 9)+TEMP):ALU=((ALU-TS-TEMP) And &HFF):DSA=1'"ULXSSBC":
Case 190: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(TP Shl 9)+TEMP):ALU=((ALU-TP-TEMP) And &HFF):DSA=1'"ULXPSBC":
Case 191: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(XH Shl 9)+TEMP):ALU=((ALU-XH-TEMP) And &HFF):DSA=1':"ULXHSBC":
Case 192: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(XL Shl 9)+TEMP):ALU=((ALU-XL-TEMP) And &HFF):DSA=1':"ULXLSBC":
Case 193: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(YH Shl 9)+TEMP):ALU=((ALU-YH-TEMP) And &HFF):DSA=1':"ULYHSBC":
Case 194: TEMP=FLG And 1:FLG=*(LUT+CSUB+(ALU SHL 1)+(YL Shl 9)+TEMP):ALU=((ALU-YL-TEMP) And &HFF):DSA=1':"ULYLSBC":
' ADD HL,RR FLAGS --***-0C SO S/Z/PV KEEP INTACT 'IUFQADD=195
Case 195: FLG=(TF And &B11000100)+(FLG And &B00111011):'"UFQADD": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' INCDEC SIMPLE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUOINC=196,IUODEC=197,IUFQID=198
Case 196: FLG=(*(LUT+CADD+(ALU SHL 1)+(1 Shl 9))And 254)+(FLG And 1):ALU=((ALU+1) And &HFF):'"UOINC": SAVE CARRY
Case 197: FLG=(*(LUT+CSUB+(ALU SHL 1)+(1 Shl 9))And 254)+(FLG And 1):ALU=((ALU-1) And &HFF):'"UODEC":
Case 198: FLG=(TF And &B00000001)+(FLG And &B11111110):'"UFQID": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' IULRAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBAND=199,IULTAND=205
Case 199: FLG=*(LUT+CAND+ALU+(TB Shl 8)):ALU=(ALU And TB):DSA=1'"ULBAND":
Case 200: FLG=*(LUT+CAND+ALU+(TC Shl 8)):ALU=(ALU And TC):DSA=1'"ULCAND":
Case 201: FLG=*(LUT+CAND+ALU+(TD Shl 8)):ALU=(ALU And TD):DSA=1'"ULDAND":
Case 202: FLG=*(LUT+CAND+ALU+(TE Shl 8)):ALU=(ALU And TE):DSA=1'"ULEAND":
Case 203: FLG=*(LUT+CAND+ALU+(TH Shl 8)):ALU=(ALU And TH):DSA=1'"ULHAND":
Case 204: FLG=*(LUT+CAND+ALU+(TL Shl 8)):ALU=(ALU And TL):DSA=1'"ULLAND":
Case 205: FLG=*(LUT+CAND+ALU+(T Shl 8)):ALU=(ALU And T):DSA=1'"ULTAND":
Case 206: FLG=*(LUT+CAND+ALU+(TA Shl 8)):ALU=(ALU And TA):DSA=1'"ULAAND":
'IULXSAND=207 ' IULXAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 207: FLG=*(LUT+CAND+ALU+(TS SHL 8)):ALU=((ALU And TS)):DSA=1'"ULXSAND":
Case 208: FLG=*(LUT+CAND+ALU+(TP SHL 8)):ALU=((ALU And TP)):DSA=1'"ULXX.LUT+CAND":
Case 209: FLG=*(LUT+CAND+ALU+(XH SHL 8)):ALU=((ALU And XH)):DSA=1'"ULXHAND":
Case 210: FLG=*(LUT+CAND+ALU+(XL SHL 8)):ALU=((ALU And XL)):DSA=1'"ULXLAND":
Case 211: FLG=*(LUT+CAND+ALU+(YH SHL 8)):ALU=((ALU And YH)):DSA=1'"ULYHAND":
Case 212: FLG=*(LUT+CAND+ALU+(YL SHL 8)):ALU=((ALU And YL)):DSA=1'"ULYLAND":
' IULRXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBXOR=213,IULTXOR=219
Case 213: FLG=*(LUT+CXOR+ALU+(TB Shl 8)):ALU=(ALU XOR TB):DSA=1'"ULBXOR":
Case 214: FLG=*(LUT+CXOR+ALU+(TC Shl 8)):ALU=(ALU XOR TC):DSA=1'"ULCXOR":
Case 215: FLG=*(LUT+CXOR+ALU+(TD Shl 8)):ALU=(ALU XOR TD):DSA=1'"ULDXOR":
Case 216: FLG=*(LUT+CXOR+ALU+(TE Shl 8)):ALU=(ALU XOR TE):DSA=1'"ULEXOR":
Case 217: FLG=*(LUT+CXOR+ALU+(TH Shl 8)):ALU=(ALU XOR TH):DSA=1'"ULHXOR":
Case 218: FLG=*(LUT+CXOR+ALU+(TL Shl 8)):ALU=(ALU XOR TL):DSA=1'"ULLXOR":
Case 219: FLG=*(LUT+CXOR+ALU+(T Shl 8)):ALU=(ALU XOR T):DSA=1'"ULTXOR":
Case 220: FLG=*(LUT+CXOR+ALU+(TA Shl 8)):ALU=(ALU XOR TA):DSA=1'"ULAXOR":
'IULXSXOR=221 ' IULXXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 221: FLG=*(LUT+CXOR+ALU+(TS SHL 8)):ALU=((ALU XOR TS)):DSA=1'"ULXSXOR":
Case 222: FLG=*(LUT+CXOR+ALU+(TP SHL 8)):ALU=((ALU XOR TP)):DSA=1'"ULXX.LUT+CXOR":
Case 223: FLG=*(LUT+CXOR+ALU+(XH SHL 8)):ALU=((ALU XOR XH)):DSA=1'"ULXHXOR":
Case 224: FLG=*(LUT+CXOR+ALU+(XL SHL 8)):ALU=((ALU XOR XL)):DSA=1'"ULXLXOR":
Case 225: FLG=*(LUT+CXOR+ALU+(YH SHL 8)):ALU=((ALU XOR YH)):DSA=1'"ULYHXOR":
Case 226: FLG=*(LUT+CXOR+ALU+(YL SHL 8)):ALU=((ALU XOR YL)):DSA=1'"ULYLXOR":
' IULROR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBOR=227,IULTOR=233
Case 227: FLG=*(LUT+COR+ALU+(TB Shl 8)):ALU=(ALU OR TB):DSA=1'"ULBOR":
Case 228: FLG=*(LUT+COR+ALU+(TC Shl 8)):ALU=(ALU OR TC):DSA=1'"ULCOR":
Case 229: FLG=*(LUT+COR+ALU+(TD Shl 8)):ALU=(ALU OR TD):DSA=1'"ULDOR":
Case 230: FLG=*(LUT+COR+ALU+(TE Shl 8)):ALU=(ALU OR TE):DSA=1'"ULEOR":
Case 231: FLG=*(LUT+COR+ALU+(TH Shl 8)):ALU=(ALU OR TH):DSA=1'"ULHOR":
Case 232: FLG=*(LUT+COR+ALU+(TL Shl 8)):ALU=(ALU OR TL):DSA=1'"ULLOR":
Case 233: FLG=*(LUT+COR+ALU+(T Shl 8)):ALU=(ALU OR T):DSA=1'"ULTOR":
Case 234: FLG=*(LUT+COR+ALU+(TA Shl 8)):ALU=(ALU OR TA):DSA=1'"ULAOR":
'IULXSOR=235 ' IULXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 235: FLG=*(LUT+COR+ALU+(TS SHL 8)):ALU=((ALU OR TS)):DSA=1'"ULXSOR":
Case 236: FLG=*(LUT+COR+ALU+(TP SHL 8)):ALU=((ALU OR TP)):DSA=1'"ULXPOR":
Case 237: FLG=*(LUT+COR+ALU+(XH SHL 8)):ALU=((ALU OR XH)):DSA=1'"ULXHOR":
Case 238: FLG=*(LUT+COR+ALU+(XL SHL 8)):ALU=((ALU OR XL)):DSA=1'"ULXLOR":
Case 239: FLG=*(LUT+COR+ALU+(YH SHL 8)):ALU=((ALU OR YH)):DSA=1'"ULYHOR":
Case 240: FLG=*(LUT+COR+ALU+(YL SHL 8)):ALU=((ALU OR YL)):DSA=1'"ULYLOR":
' IULRCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBCP=241,IULTCP=247
Case 241: FLG=*(LUT+CCP+ALU+(TB Shl 8)):DSA=1'"ULBCP":
Case 242: FLG=*(LUT+CCP+ALU+(TC Shl 8)):DSA=1'"ULCCP":
Case 243: FLG=*(LUT+CCP+ALU+(TD Shl 8)):DSA=1'"ULDCP":
Case 244: FLG=*(LUT+CCP+ALU+(TE Shl 8)):DSA=1'"ULECP":
Case 245: FLG=*(LUT+CCP+ALU+(TH Shl 8)):DSA=1'"ULHCP":
Case 246: FLG=*(LUT+CCP+ALU+(TL Shl 8)):DSA=1'"ULLCP":
Case 247: FLG=*(LUT+CCP+ALU+(T Shl 8)):DSA=1'"ULTCP":
Case 248: FLG=*(LUT+CCP+ALU+(TA Shl 8)):DSA=1'"ULACP":
'IULXSCP=249 ' IULXCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 249: FLG=*(LUT+CCP+ALU+(TS SHL 8)):DSA=1'"ULXSCP":
Case 250: FLG=*(LUT+CCP+ALU+(TP Shl 8)):DSA=1'"ULXPCP":
Case 251: FLG=*(LUT+CCP+ALU+(XH SHL 8)):DSA=1'"ULXHCP":
Case 252: FLG=*(LUT+CCP+ALU+(XL SHL 8)):DSA=1'"ULXLCP":
Case 253: FLG=*(LUT+CCP+ALU+(YH SHL 8)):DSA=1'"ULYHCP":
Case 254: FLG=*(LUT+CCP+ALU+(YL SHL 8)):DSA=1'"ULYLCP":
' - PROOT SHIFTS AND FLG CORRECT RLCA/RLA/RRCA/RRA     --503-0C IUFQSH=255
Case 255: FLG=(TF And &B11000100)+(FLG And &B00111011):'"UFQSH": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' IUORLC=256,IUORRC=257,IUORL=258,IUORR=259 ' IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263
Case 256: ALU=*(RLC+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UORLC":
Case 257: ALU=*(RRC+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UORRC":
Case 258: ALU=*(RL+ALU)Shr ((FLG And 1) Shl 3):FLG=(ALU Shr 16) And &HFF:ALU And= &HFF:DSA=1 '"UORL": ' HERE QUAD ENTRY TABLE VV/FF
Case 259: ALU=*(RR+ALU)Shr ((FLG And 1) Shl 3):FLG=(ALU Shr 16) And &HFF:ALU And= &HFF:DSA=1 '"UORR": ' HERE QUAD ENTRY TABLE VV/FF
'ALU=*(X.RR+ALU):If FLG And 1 Then FLG=8 Else FLG=0 EndIf:ALU Shl= FLG:FLG=(ALU Shr 8) And &HFF:ALU=(ALU Shr 24)And &HFF '"UORR": ' HERE QUAD ENTRY TABLE VV/FF
Case 260: ALU=*(SLA+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UOSLA":
Case 261: ALU=*(SRA+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UOSRA":
Case 262: ALU=*(SLL+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UOSLL":
Case 263: ALU=*(SRL+ALU):FLG=ALU Shr 8:ALU And= &HFF:DSA=1 '"UOSRL":
'IUORES=264,IUOSET=265
Case 264: ALU=ALU And ((1 Shl ((CODE Shr 3) And 7)) Xor &HFF):DSA=1'"UORES":
Case 265: ALU=ALU Or (1 Shl ((CODE Shr 3) And 7)):DSA=1':"UOSET":
' $ CALCULATION HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULTSADD=266,IUOSADDC=267 0-127 IS DIRECT ADDITION, 128 IS -128, 128-255 IS -128 TO -1
Case 266: If T And 128 Then ' SIGNED MAKE SUB, UNSIGNED MAKE ADD 
TEMP=128-(T And 127)
FLG=*(LUT+CSUB+(ALU Shl 1)+(TEMP Shl 9))
ALU=((ALU-TEMP) And &HFF)
Else 
TEMP=T And 127
FLG=*(LUT+CADD+(ALU SHL 1)+(TEMP Shl 9)) 
ALU=((ALU+TEMP) And &HFF)
EndIf:'"ULTSADD": 
Case 267: If FLG And XFN Then ' IF N IS SET THEN IT WAS SUB AND MAKE SBC WITH CARRY ELSE ADC WITH, DISCARD FLAGS HERE
ALU=((ALU-(FLG And 1)) And &HFF)
Else ALU=((ALU+(FLG And 1)) And &HFF)
EndIf:'"UOSADDC":
'IUOBIT=268 'BIT n,r *Z513*0-  PV as Z, S set only if n=7 and b7 of r set Behaves much like AND r,2^n
' REVERT F53 TO NORMAL COPY 'F53 SEAN'S BULLSHIT WRONG 5 = set if n=5 and tested bit is set. ' 3 = set if n=3 and tested bit is set. 
Case 268: ' "UOBIT": 
TEMP=1 Shl ((CODE Shr 3) And 7)
FLG=(FLG And 1)+XFH+(ALU And ((TEMP And &B10000000)+&B00101000))' RESET 5,3,N, SET H, COPY CARRY, COPY F53 FROM ALU, MASK ALU BY 7 AND GET 7 TO FLG   
If (ALU And TEMP)=0 Then FLG+=4+64 ' IF BIT ZERO THEN SET Z AND PV

' - - DAA HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 269 : ALU=*(DAA+ALU+(FLG Shl 8)):FLG=ALU Shr 8:ALU And= &HFF'"UODAA":
' - - - PC SUBST UOPS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'SIGUWZ=270,SIGUHL=271,SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275
Case 270 : ISEXT=12:SUBST=TZ+(TW Shl 8)'"HIDDEN USEWZ":
Case 271 : ISEXT=12:SUBST=TL+(TH Shl 8)'"HIDDEN USEHL":
Case 272 : ISEXT=12:SUBST=XL+(XH Shl 8)'"HIDDEN USEIX":
Case 273 : ISEXT=12:SUBST=YL+(YH Shl 8)'"HIDDEN USEIY":
'SKIP6PE: PV set if BC not 0 PO IS ZERO PE IS TRUE
Case 274 : ISEXT=12:If(FLG And XFP)=0 Then MCUR+=XLDIR  '"HIDD SKIP6PO":
Case 275 : ISEXT=12:If(FLG And XFP)=0 Or (FLG And XFZ) Then MCUR+=XCPIR  '"HIDD SKIP6POZ":
' CONDITIONAL ENDINGS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280,IECCPO=281,IECCM=282,IECCP=283
Case 276 : ISEXT=12:If     FLG And XFZ  Then MCUR=PMOS ' "HIDDEN ECCZ":
Case 277 : ISEXT=12:If (FLG And XFZ)=0 Then MCUR=PMOS' "HIDDEN ECCNZ":
Case 278 : ISEXT=12:If     FLG And XFC  Then MCUR=PMOS' "HIDDEN ECCC":
Case 279 : ISEXT=12:If (FLG And XFC)=0 Then MCUR=PMOS' "HIDDEN ECCNC":
Case 280 : ISEXT=12:If     FLG And XFP  Then MCUR=PMOS' "HIDDEN ECCPE":
Case 281 : ISEXT=12:If (FLG And XFP)=0 Then MCUR=PMOS' "HIDDEN ECCPO":
Case 282 : ISEXT=12:If     FLG And XFS  Then MCUR=PMOS' "HIDDEN ECCM":
Case 283 : ISEXT=12:If (FLG And XFS)=0 Then MCUR=PMOS' "HIDDEN ECCP":
' ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289,ISWCCP=290,ISWCCM=291
Case 284 : ISEXT=12:If (FLG And XFZ)=0 Then SUBST=TZ+(TW Shl 8) '"HIDDEN SWCCNZ":
Case 285 : ISEXT=12:If FLG And XFZ Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCZ":
Case 286 : ISEXT=12:If (FLG And XFC)=0 Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCNC":
Case 287 : ISEXT=12:If FLG And XFC Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCC":
Case 288 : ISEXT=12:If FLG And XFP Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCPE":
Case 289 : ISEXT=12:If (FLG And XFP)=0 Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCPO":
Case 290 : ISEXT=12:If (FLG And XFS)=0 Then SUBST=TZ+(TW Shl 8)'"HIDDEN SWCCP":
Case 291 : ISEXT=12:If FLG And XFS Then SUBST=TZ+(TW Shl 8) '"HIDDEN SWCCM":
' - - - CPL - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' CPL --*1*-1- 5, 3 from A registeX.
Case 292 : '"UOCPL":
ALU Xor= 255:FLG=(FLG And &B11000101)+(ALU And &B00101000)+&B00010010:DSA=1

'if <previous instruction modified the flags> then F53 COPY ELSE F53 OR
' SO Q SET IF FLG MOD OCCUR, SO SCF/CCF ALWAYS DOES OR ACTUALLY, AND COPY IS THE DEFINED STATE
' SO EACH UAPCI WILL RESET Q TO UNDEFINED STATE IE ZERO

' - - - IUOSCF=293,IUOCCF=294 the content of A is ORED OR MOVED ACC WITH Q STATE to flags 5+3 after SCF/CCF  - - - - - 
Case 293 : '"UOSCF": 
DSA=1
FLG =((FLG And &B11101100)+1) Or (TA And &B00101000) ' OR STATE AKA UNDEF
TEMP=((FLG And &B11000100)+1)   +(TA And &B00101000) ' COPY STATE
If FQ Then FLG=TEMP ' IF Q AKA DEFINED THEN COPY

' CCF C=1-C, H as old C. 5, 3 from A register --***-0* MAY OR A53 BITS MAY COPY
Case 294 : ' "UOCCF":
DSA=1
FLG=(FLG And &B11101101)+((FLG And 1)Shl 4) ' SET H AS OLD C CLEAR N
FLG Xor= XFC ' INVERT C
FLG Or= (TA And &B00101000) ' UNDEF STATE
TEMP=(FLG And &B11010111)+(TA And &B00101000) ' DEF STATE
If FQ Then FLG=TEMP ' IF Q AKA DEFINED THEN COPY

' - - IUEXA=295,IUEXX=296 NO AFF
Case 295 : 
TAF=(TA Shl 32)+TF:TF=EAF And 255:TA=(EAF Shr 32):EAF=TAF
'"AF UEXA":
Case 296 : 
TBC=(TB Shl 32)+TC:TC=EBC And 255:TB=(EBC Shr 32):EBC=TBC
TDE=(TD Shl 32)+TE:TE=EDE And 255:TD=(EDE Shr 32):EDE=TDE
THL=(TH Shl 32)+TL:TL=EHL And 255:TH=(EHL Shr 32):EHL=THL
'" UEXX":
' - - - IUDFF=297,IUSFF=298,IUCFF=299
Case 297 : IFF1=0:IFF2=0:'"DIS/INT UDFF":
Case 298 : IFF1=1:IFF2=1:'"ENA/INT USFF":
Case 299 : IFF1=IFF2:'"REST/INT UCFF":
' - - -IUXHD=300
Case 300 : 
T=TL:TL=TE:TE=T
T=TH:TH=TD:TD=T
'"HL-DE UXHD":
' - - - PORT IO UOPS 'IUNWR=301,IUTIO=302,IUPOW=303 - - - - - - - - - - - - 
Case 301 : BUS=0:'"NULL UNWR":
Case 302 : 
T=*(IORD+ADDR):*(IORD+ADDR)=255':SCROLLOC:Print ADDR;" "';:SLEEP'"RD("+Hex$(ADDR,4)+")="+Hex$(T,2)+" UTIO":

Case 303 : *(IOWR+ADDR)=BUS:'"WR("+Hex$(ADDR,4)+")="+Hex$(BUS,2)+" UPOW":
' - - IUFWR=304 - - 
Case 304 : BUS=TF:'"FLG UFWR":
' - - IUONEG=305
Case 305 : FLG=(*(LUT+CSUB+(ALU Shl 9))And &B11111011):If ALU=&H80 Then FLG+=XFP Else EndIf:ALU=((0-ALU) And &HFF):'"UONEG": 
' - - - IULTRI=306,IULTRR=307,IUFQIR=308 LD A,R/LD A,I SZ503*0-  PV as IFF2, ALIKE DO OR/XOR r SZ503P00
Case 306 : ALU=TI:'"I-REG ULLRI":
Case 307 : ALU=TR:'"R-REG ULLRR":
Case 308 : FLG=(*(LUT+COR+ALU) And &B11111010)+(FLG And 1)+(IFF2 Shl 2):'"QUIRK UFQIR":
' - - - IUOQIO=309 - -  IN r,(C) AFFECTION SZ503P0- Also true for IN F(NULL),(C), LIKE OR VALUE,0
Case 309 : FLG=(*(LUT+COR+ALU) And &B11111010)+(FLG And 1):'"QUIRK UFQIO":
' - - - RLD AND RRD ALU NIBBLE OPS -  
' IUORVN=310(NIBB REVERSE)
' IULANLL=311(LOWN=A-LOWN),IULTNLL=312(LOWN=T-LOWN)
' IULANLH=313(HIGHN=A-LOWN),IULTNHL=314(LOWN=T-HIGHN)
Case 310 : ALU=((ALU And &H0F)Shl 4)+((ALU SHR 4)And &H0F):'"REV UORVN":
Case 311 : ALU=(ALU And &HF0)+(TA And &H0F)'"L=AL ULANLL":
Case 312 : ALU=(ALU And &HF0)+(T And &H0F):'"L=TL ULTNLL":
Case 313 : ALU=(ALU And &H0F)+((TA And &H0F)Shl 4):'"H=AL ULANLH":
Case 314 : ALU=(ALU And &HF0)+((T Shr 4)And &H0F):'"L=TH ULTNHL":
' - - IM X SETTING SIMPLEST OP - - - - 
'IUIM0=315,IUIM1=316,IUIM2=317
Case 315 : IMM=0:INTC=INT0 '"IM=0 UIM0":
Case 316 : IMM=1:INTC=INT1 '"IM=1 UIM1":
Case 317 : IMM=2:INTC=INT2 '"IM=2 UIM2":
' - - LDIR QUIRK AFF IULAQLD=318 - - -  
'LDI/LDIR/LDD/LDIR     --*0**0-  PV set if BC not 0 SO SAVE PV FROM UBCDPV 
'F5 is bit 1 of (transferred byte + A) 'F3 is bit 3 of (transferred byte + A)
Case 318 : TEMP=T+TA:FLG=(FLG And &B11000101)+(TEMP And &B00001000)+((TEMP And &B00000010)Shl 4)':"ULAQLD":
' - - - CPIR QUIRK AFF 
'IULTCPQ=319
'CPI/CPIR/CPD/CPDR     SZ*H**1-  PV set if BC not 0 'S,Z,H from (A - (HL) ) DONE BY ULTCP
'F3 is bit 3 of (A - (HL) - H), H as in F after CPIR's INTERNAL CP
'F5 is bit 1 of (A - (HL) - H) 
Case 319 : TEMP=(FLG And XFH) Shr 4 ' GET FH AS ADD VALUE 0/1
TEMP=TA-T-TEMP' T = (HL) THIS TIME
FLG=(FLG And &B11010111)+(TEMP And &B00001000)+((TEMP And &B00000010)Shl 4):'"QUIRK ULTCPQ"

' - - INIR OTIR ENDING PARITY QUIRK  'IUBXORQ=320 'NEW FMLA 
Case 320 : ' "UBXORQ": UBXORQ  
ALU=(ALU And 7) Xor TB:FLG OR= *(PFLAG+ALU) 'flag_pv = partab[((io_data + reg_other) & 7) ^ reg_b];

' CPIR NEED EXTRA CROSS LOAD DECREASE
Case 321: ADDER-=1:TEMP=ADDER:TZ=TEMP And &hFF:TEMP Shr= 8:TW=TEMP And &hFF:'"CROSS UADDWZ":

' - - - - - IUTADDQ=322 INIR OTIR ENDING NEW FMLA
Case 322 : '"QUIRK UTADDQ"
DSA=1
ALU=ALU+T ' DO ADD AND MASK
TEMP=ALU Shr 8: ' GET CARRY FOR C AND H SETTING
FLG=(FLG And &B11101000)+((T And XFS) Shr 6)+TEMP+(TEMP Shl 4): ' CLEAR H,P,N,C, SET N AS MSB T, SET C,H BOTH  
 
Case 323 : ' "PIPE PARALLEL TRIPLE":
If ISEXT And 1 Then ISEXT=15 Else ISEXT=14' "TRI:":

' - - LD ALU,Z
Case 324: ALU=TZ:' "ULLRZ":
' - - DONE NOW UOP NOT SIGNAL - - - 
Case 325:  
If ISEXT And 1 Then 
ISEXT=11 
Else 
	If ISEXT=10 Then Else ISEXT=12 ENDIF	
	If ISPFX Then 
	MCUR=*(PROOT+PREFIX) 
	Else
		If ISINT Then
			If IFF1 Then MCUR=PMOS+INTC:ISINT=0:ISHALT=0:Exit Select
			Else EndIf
		If ISHALT Then MCUR=PMOS:SUBST-=1:Exit Select
		MCUR=PMOS
	EndIf
EndIf


' "DONE":
' - - PAR NOW UOP NOT SIGNAL - - - 
Case 326: If ISEXT And 1 Then ISEXT=3 Else ISEXT=6' "PAR:":
' - - EXT NOW UOP NOT SIGNAL - - - NEED TO CATCH INT TOO 
Case 327: ISEXT=2:ECUR=MCUR ' "EXT:":
		If ISINT And IFF1 Then 
			MCUR=PMOS+INTC:ISINT=0:ISHALT=0
			Else 
			MCUR=*(PROOT+(PREFIX*ISPFX))
			EndIf
' - INTERRUPT OPERATORS
Case 328: PC=SUBST:IFF1=0:DSA=0 ' "UIFF" ' USEWZ/RR IN FACT DONE BY Z80 ON INT START, AND CLEAR Q 
Case 329:  ' "UIMRQ" DUMMY HERE LIKE UNOP
Case 330: T=&HFF ' "UIMFET" RECEIVE VECTOR HERE DEFAULTS TO &HFF FOR ALL IMs
Case 331: TW=TI ' "ULWI" LD W,I

Case 332 : TZ=&H00 ' "ULZ00"
Case 333 : TZ=&H08 ' "ULZ08"
Case 334 : TZ=&H10 ' "ULZ10"
Case 335 : TZ=&H18 ' "ULZ18"
Case 336 : TZ=&H20 ' "ULZ20"
Case 337 : TZ=&H28 ' "ULZ28"
Case 338 : TZ=&H30 ' "ULZ30"
Case 339 : TZ=&H38 ' "ULZ38"
' UWBITQ CORRUPT F35 WITH COPY OF W 
Case 340 : ' "UWBITQ" SO IN BIT THERE ARE TWO ALUOPS, IF USE INDIRECT ACCESS, SECOND LIKE QUIRKY "AND ALU,W"
' P/V, Z, S set as the other BIT instructions, but the 5 and 3 flags are different.
' They are a copy of an internal register of the Z80, which IS W
FLG=(FLG And &B11010111)+(TW And &B00101000)
Case 341 : ISEXT=12:If FLG And XFZ Then MCUR+=XDJNZ  '"SKIP6Z":
' CYCLE LDIR LDXR/CPXR --*0**0- F53 FROM W, P BY UBCDPV, N H CLEAR ,VZ80 SHOW THAT CPIR RESET H IN CYCLE TOO
Case 342 : FLG=(FLG And &B11000101)+(TW And &B00101000) ' "IULWQLD"
' - -RLD RRD AFFECTION
Case 343 : ' "UOFRXD" RRD/RLD SZ503P0-  Flags set on result in A ALIKE OR/XOR r SZ503P00
FLG=*(LUT+COR+ALU)+(FLG And XFC)
Case 344 : ' CORRECT Z FOR ADC/SBC RR IF HL=0 THEN Z "UFHLZ"
TEMP=0:If (TH+TL)=0 Then TEMP=XFZ
FLG=(FLG And &B10111111)+TEMP
' - ULTCPX FOR CPIR SAVES CARRY
Case 345: FLG=(*(LUT+CCP+ALU+(T Shl 8)) And &B11111110)+(TF And XFC):'"ULTCPX":
Case 346: ALU=TW:' "ULLRW":


End Select
