Select Case As Const X.UOP 

Case 0: 'XERR+=1 '"ERROR ZERO"
' SET ADDRESS BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 1: X.ADDR=X.BC+(X.BC Shr 24):X.ADDER=X.ADDR'X.C+(X.B Shl 8):' "UADBC"
Case 2: X.ADDR=X.DE+(X.DE Shr 24):X.ADDER=X.ADDR'X.E+(X.D Shl 8):' "UADDE"
Case 3: X.ADDR=X.HL+(X.HL Shr 24)'X.L+(X.H Shl 8):' "UAHL"
Case 4: X.ADDR=X.WZ+(X.WZ Shr 24)'X.Z+(X.W Shl 8):' "UAWZ"
Case 5: X.ADDR=X.ADDER:' "UAAD"
Case 6: X.ADDR=X.SP+(X.SP Shr 24):X.ADDER=X.ADDR'X.P+(X.S Shl 8):' "UADSP"
Case 7: X.ADDR=X.IX+(X.IX Shr 24)'X.XL+(X.XH Shl 8):' "UAIX"
Case 8: X.ADDR=X.IY+(X.IY Shr 24)'X.YL+(X.YH Shl 8):' "UAIY"

'- - - UAPCI - - - - - - - - ' USE X.SUBST AS SOURCE TO CATCH WZ/RR, Q IS RESET TO UNDEFINED STATE

Case 9: X.ADDR=X.SUBST:X.ADDER=((X.ADDR+1)And &HFFFF):X.PC=X.ADDER:X.SUBST=X.ADDER: ' "UAPCI"
X.Q=X.DSA:X.DSA=0

' - - - UFET - - - OPCODE FETCH - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 10: X.CODE=*(X.MEM+X.ADDR):X.TEMP=X.PREFIX+X.CODE:X.CUR=*(PROOT+X.TEMP):X.CUR+=X.CUROFF:If X.ISPFX=1 Then X.ISPFX=0:X.CUROFF=XMAIN:X.PREFIX=0 Else EndIf: ' "UFET"
'PSet (X.ADDR And 255,(X.ADDR Shr 8)),X.TAK 

' UAIRIUF DO UAIR, INC R, LD F,FLG; R ONLY 7 BIT INCREASE, MSB UNCHANGED
Case 11: X.ADDR=X.R+(X.I Shl 8):X.F=X.FLG:X.R=LREF(X.R):' "UAIRIUF"

' URALF DO DUMMY REF AND LD FLG,F
Case 12: X.FLG=X.F:' "URALF"

' ULTR LD T,REGISTER SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Case 13: X.T=X.B:' "ULTRB"
Case 14: X.T=X.C:' "ULTRC"
Case 15: X.T=X.D:' "ULTRD"
Case 16: X.T=X.E:' "ULTRE"
Case 17: X.T=X.H:' "ULTRH"
Case 18: X.T=X.L:' "ULTRL"
Case 19: X.FLG=X.F:' "UALF":
Case 20: X.T=X.A:' "ULTRA":
' ULTR LD REGISTER,T SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 21: X.B=X.T: '"ULRBT"
Case 22: X.C=X.T: '"ULRCT"
Case 23: X.D=X.T: '"ULRDT"
Case 24: X.E=X.T: '"ULRET"
Case 25: X.H=X.T: '"ULRHT"
Case 26: X.L=X.T: '"ULRLT"
Case 27: X.ISHALT=1:'"UHALT"
Case 28: X.A=X.T: '"ULRAT"
' URWR WRITE REGISTER TO MEMORY AWHILE SO, NEED CHANGE LAST UWCWs ALL TO ACTUAL WRITE 
Case 29: X.BUS=X.B: '"UBWR"
Case 30: X.BUS=X.C: '"UCWR"
Case 31: X.BUS=X.D: '"UDWR"
Case 32: X.BUS=X.E: '"UEWR"
Case 33: X.BUS=X.H: '"UHWR"
Case 34: X.BUS=X.L: '"ULWR"
Case 35: X.BUS=X.ALU: '"UOWR"
Case 36: X.BUS=X.A: '"UAWR"
' MEM CYCLES AND ACT
Case 37: '"URCW"
Case 38: '"UWCW"
Case 39: If X.ADDR>16383 Then *(X.MEM+X.ADDR)=X.BUS Else EndIf: ' "UDOW"
'PSet (X.ADDR And 255,(X.ADDR Shr 8)+256),X.TAK 

'If X.ADDR And 256 Then 
'PSet ((X.ADDR And 255)+256, (X.ADDR SHR 8)+256),X.TAK Shr (X.TAK And 7)
'ScreenSet X.TAK And 1
'*(XSCR+256+(X.ADDR And 255)+(256+(X.ADDR SHR 8))*1024)=X.TAK

Case 40: ' "UNOP"
Case 41: X.T=*(X.MEM+X.ADDR) '"UTRD" 
'PSet (X.ADDR And 255,(X.ADDR Shr 8)+512),X.TAK


Case 42: X.BUS=X.T:' "UTWR"
Case 43: X.P=X.T: '"ULSLT"
Case 44: X.S=X.T: '"ULSHT"
' SOME W AND Z LOADS 'IULWE=45,IULWA=46,IULWT=47,IULZT=48,,IULW0=50
Case 45: 'X.W=X.A: '"ULWERR"
Case 46: X.W=X.A: '"ULWA"
Case 47: X.W=X.T: '"ULWT"
Case 48: X.Z=X.T: '"ULZT"
Case 49: 'X.Z=X.CODE And &B00111000:' "ULZN":
Case 50: X.W=0: '"ULW0":
' VIA ADDER INCREASES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' - - - - IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Case 51: X.Z=((X.Z+(X.W Shl 8))+1) And &hFFFF:X.W=X.Z Shr 8:X.Z And=&HFF'"UWZI":
Case 52: X.C=((X.C+(X.B Shl 8))+1) And &hFFFF:X.B=X.C Shr 8:X.C And=&HFF'"UBCI":
Case 53: X.E=((X.E+(X.D Shl 8))+1) And &hFFFF:X.D=X.E Shr 8:X.E And=&HFF'"UDEI":
Case 54: X.L=((X.L+(X.H Shl 8))+1) And &hFFFF:X.H=X.L Shr 8:X.L And=&HFF'"UHLI":
Case 55: X.P=((X.P+(X.S Shl 8))+1) And &hFFFF:X.S=X.P Shr 8:X.P And=&HFF'"USPI":
Case 56: X.ADDER=(X.ADDER+1) And &HFFFF:'"UADI":
Case 57: X.XL=((X.XL+(X.XH Shl 8))+1) And &hFFFF:X.XH=X.XL Shr 8:X.XL And=&HFF'"UIXI":
Case 58: X.YL=((X.YL+(X.YH Shl 8))+1) And &hFFFF:X.YH=X.YL Shr 8:X.YL And=&HFF'"UIYI":
' VIA ADDER DECREASE CROSSLOADS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'- - - -  IUADIWZ=59,IUADIPC=60
Case 59: X.ADDER+=1:X.Z=X.ADDER And &HFF:X.W=(X.ADDER Shr 8) And &HFF'TEMP=X.ADDER:X.Z=X.TEMP And &hFF:X.TEMP Shr= 8:X.W=X.TEMP' And &hFF:'"CROSS UADIWZ":
Case 60: X.PC=((X.ADDER+1)And &HFFFF):'"UADIPC":
' VIA ADDER DECREASES AND UBCDPV  - - - - ' IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68,IUIYD=69
Case 61: X.ADDER=(X.ADDER-1) And &HFFFF':"UADD":
Case 62: X.C=((X.C+(X.B Shl 8))-1)And &hFFFF:X.B=X.C Shr 8:X.C And= &hFF:'"UBCD":
Case 63: X.C=((X.C+(X.B Shl 8))-1)And &hFFFF:X.B=X.C Shr 8:X.C And= &hFF:If (X.B+X.C) Then X.FLG Or= XFP Else X.FLG And= &B11111011 EndIf ' "UBCDPV": 'PV set if BC not 0 P0 IS ZERO PE IS TRUE
Case 64: X.E=((X.E+(X.D Shl 8))-1)And &hFFFF:X.D=X.E Shr 8:X.E And= &hFF:'"UDED":
Case 65: X.L=((X.L+(X.H Shl 8))-1)And &hFFFF:X.H=X.L Shr 8:X.L And= &hFF:'"UHLD":
Case 66: X.P=((X.P+(X.S Shl 8))-1)And &hFFFF:X.S=X.P Shr 8:X.P And= &hFF:'"USPD":
Case 67: X.Z=((X.Z+(X.W Shl 8))-1)And &hFFFF:X.W=X.Z Shr 8:X.Z And= &hFF:'"UWZD":
Case 68: X.XL=((X.XL+(X.XH Shl 8))-1)And &hFFFF:X.XH=X.XL Shr 8:X.XL And= &hFF:'"UIXD":
Case 69: X.YL=((X.YL+(X.YH ShL 8))-1)And &hFFFF:X.YH=X.YL Shr 8:X.YL And= &hFF:'"UIYD":
' LOAD ADDER,RR - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77
Case 70: X.ADDER=(X.BC+(X.BC Shr 24))And &HFFFF:'"ULDBC":
Case 71: X.ADDER=(X.DE+(X.DE Shr 24))And &HFFFF:'"ULDDE":
Case 72: X.ADDER=(X.HL+(X.HL Shr 24))And &HFFFF:'"ULDHL":
Case 73: X.ADDER=(X.SP+(X.SP Shr 24))And &HFFFF:'"ULDSP":
Case 74: X.ADDER=(X.WZ+(X.WZ Shr 24))And &HFFFF:'"ULDWZ":
Case 75: X.ADDER=X.PC:'"ULDPC":
Case 76: X.ADDER=(X.IX+(X.IX Shr 24))And &HFFFF':"ULDIX":
Case 77: X.ADDER=(X.IY+(X.IY Shr 24))And &HFFFF':"ULDIY":
' LOAD RR,ADDER - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULBCD=78,IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85
Case 78: X.C=X.ADDER And &hFF:X.B=X.ADDER Shr 8 '"ULBCD":
Case 79: X.E=X.ADDER And &hFF:X.D=X.ADDER Shr 8 '"ULDED":
Case 80: X.L=X.ADDER And &hFF:X.H=X.ADDER Shr 8 '"ULHLD":
Case 81: X.Z=X.ADDER And &hFF:X.W=X.ADDER Shr 8 '"ULWZD":
Case 82: X.P=X.ADDER And &hFF:X.S=X.ADDER Shr 8 '"ULSPD":
Case 83: X.PC=X.ADDER:X.SUBST=X.ADDER '"ULPCD":
Case 84: X.XL=X.ADDER And &hFF:X.XH=X.ADDER Shr 8 '"ULIXD":
Case 85: X.YL=X.ADDER And &hFF:X.YH=X.ADDER Shr 8 '"ULIYD":
' PREFIXES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'- -  IUPFDD=86,IUPFFD=87,IUPFCB=88,IUPFED=89,IUPFDC=90,IUPFFC=91 ' PREFIXES
Case 86: X.PREFIX=XDD:X.ISPFX=1:X.CUROFF=XMAIN:'"UPFDD #DD":
Case 87: X.PREFIX=XFD:X.ISPFX=1:X.CUROFF=XMAIN:'"UPFFD #FD":
Case 88: X.PREFIX=XCB:X.ISPFX=1:X.CUROFF=XMAIN:'"UPFCB #CB":
Case 89: X.PREFIX=XED:X.ISPFX=1:X.CUROFF=XMAIN:'"UPFED #ED":
Case 90: X.PREFIX=XDDCB:X.ISPFX=1:X.CUROFF=XXDCB:'"UPFDC #DDCB":
Case 91: X.PREFIX=XFDCB:X.ISPFX=1:X.CUROFF=XXDCB:'"UPFFC #FDCB":
' - - - EXTRA REGISTER SETUP DATA BUS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98,IUYLWR=99 ' EXTRA REGISTER WRITE TO MEM
Case 92: X.BUS=X.P: '"USLWR":
Case 93: X.BUS=X.S: '"USHWR":
Case 94: X.BUS=(X.PC And &HFF): '"UPLWR":
Case 95: X.BUS=(X.PC SHR 8): '"UPHWR":
Case 96: X.BUS=X.XH: '"UXHWR":
Case 97: X.BUS=X.XL: '"UXLWR":
Case 98: X.BUS=X.YH: '"UYHWR":
Case 99: X.BUS=X.YL: '"UYLWR":
' - - - LD ALU,R SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRA=106
' IULLRT=107,IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113
Case 100: X.ALU=X.B: '"ULLRB":
Case 101: X.ALU=X.C: '"ULLRC":
Case 102: X.ALU=X.D: '"ULLRD":
Case 103: X.ALU=X.E: '"ULLRE":
Case 104: X.ALU=X.H: '"ULLRH":
Case 105: X.ALU=X.L: '"ULLRL":
Case 106: X.ALU=X.T: '"ULLRT":
Case 107: X.ALU=X.A: '"ULLRA":
Case 108: X.ALU=X.XL: '"ULLXL":
Case 109: X.ALU=X.XH: '"ULLXH":
Case 110: X.ALU=X.YL: '"ULLYL":
Case 111: X.ALU=X.YH: '"ULLYH":
Case 112: X.ALU=X.PC And &HFF: '"ULLPL":
Case 113: X.ALU=X.PC Shr 8: '"ULLPH":
' - - - LD IR,A SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  
' IULRIA=114,IULRRA=115
Case 114: X.I=X.A: '"ULRIA":
Case 115: X.R=X.A: '"ULRRA":
' - - - LD R,ALU SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
' IULRBL=116,IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRAL=122
' IULRTL=123,IULRZL=124,IULRWL=125,IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129
Case 116: X.B=X.ALU: '"ULRBL":
Case 117: X.C=X.ALU: '"ULRCL":
Case 118: X.D=X.ALU: '"ULRDL":
Case 119: X.E=X.ALU: '"ULREL":
Case 120: X.H=X.ALU: '"ULRHL":
Case 121: X.L=X.ALU: '"ULRLL":
Case 122: X.T=X.ALU: '"ULRTL":
Case 123: X.A=X.ALU: '"ULRAL":
Case 124: X.Z=X.ALU: '"ULRZL":
Case 125: X.W=X.ALU: '"ULRWL":
Case 126: X.XL=X.ALU:' "ULXLL":
Case 127: X.XH=X.ALU:' "ULXHL":
Case 128: X.YL=X.ALU:' "ULYLL":
Case 129: X.YH=X.ALU: '"ULYHL":
' - - TO FROM T TOSS SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134,IULTXH=135,IULTXL=136,IULTYH=137,IULTYL=138
Case 130: X.F=X.T: '"ULRFT":
Case 131: X.XL=X.T:' "ULXLT":
Case 132: X.XH=X.T:' "ULXHT":
Case 133: X.YL=X.T:' "ULYHT":
Case 134: X.YH=X.T:' "ULYLT":
Case 135: X.T=X.XL:' "ULTXL":
Case 136: X.T=X.XH:' "ULTXH":
Case 137: X.T=X.YL:' "ULTYL":
Case 138: X.T=X.YH:' "ULTYH":
' - - ALU OP ADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBADD=139,IULTADD=145
Case 139: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.B Shl 9)):X.ALU=((X.ALU+X.B) And &HFF):X.DSA=1'"ULBADD":
Case 140: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.C Shl 9)):X.ALU=((X.ALU+X.C) And &HFF):X.DSA=1'"ULCADD":
Case 141: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.D Shl 9)):X.ALU=((X.ALU+X.D) And &HFF):X.DSA=1'"ULDADD":
Case 142: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.E Shl 9)):X.ALU=((X.ALU+X.E) And &HFF):X.DSA=1'"ULEADD":
Case 143: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.H Shl 9)):X.ALU=((X.ALU+X.H) And &HFF):X.DSA=1'"ULHADD":
Case 144: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.L Shl 9)):X.ALU=((X.ALU+X.L) And &HFF):X.DSA=1'"ULLADD":
Case 145: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.T Shl 9)):X.ALU=((X.ALU+X.T) And &HFF):X.DSA=1'"ULTADD":
Case 146: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.A Shl 9)):X.ALU=((X.ALU+X.A) And &HFF):X.DSA=1'"ULAADD":
' IULXADD DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULXSADD=147 ' X ORDER  SPH-SPL-IXH-IXL-IYH-IYL
Case 147: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.S Shl 9)):X.ALU=((X.ALU+X.S) And &HFF):X.DSA=1'"ULXSADD":
Case 148: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.P Shl 9)):X.ALU=((X.ALU+X.P) And &HFF):X.DSA=1'"ULXX.LUT+CADD":
Case 149: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.XH Shl 9)):X.ALU=((X.ALU+X.XH) And &HFF):X.DSA=1'"ULXHADD":
Case 150: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.XL Shl 9)):X.ALU=((X.ALU+X.XL) And &HFF):X.DSA=1'"ULXLADD":
Case 151: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.YH Shl 9)):X.ALU=((X.ALU+X.YH) And &HFF):X.DSA=1'"ULYHADD":
Case 152: X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.YL Shl 9)):X.ALU=((X.ALU+X.YL) And &HFF):X.DSA=1'"ULYLADD":
' - - ALU OP ADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IULBADC=153,IULTADC=159
Case 153: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.B Shl 9)+X.TEMP):X.ALU=((X.ALU+X.B+X.TEMP) And &HFF):X.DSA=1'"ULBADC":
Case 154: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.C Shl 9)+X.TEMP):X.ALU=((X.ALU+X.C+X.TEMP) And &HFF):X.DSA=1'"ULCADC":
Case 155: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.D Shl 9)+X.TEMP):X.ALU=((X.ALU+X.D+X.TEMP) And &HFF):X.DSA=1'"ULDADC":
Case 156: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.E Shl 9)+X.TEMP):X.ALU=((X.ALU+X.E+X.TEMP) And &HFF):X.DSA=1'"ULEADC":
Case 157: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.H Shl 9)+X.TEMP):X.ALU=((X.ALU+X.H+X.TEMP) And &HFF):X.DSA=1'"ULHADC":
Case 158: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.L Shl 9)+X.TEMP):X.ALU=((X.ALU+X.L+X.TEMP) And &HFF):X.DSA=1'"ULLADC":
Case 159: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.T Shl 9)+X.TEMP):X.ALU=((X.ALU+X.T+X.TEMP) And &HFF):X.DSA=1'"ULTADC":
Case 160: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.A Shl 9)+X.TEMP):X.ALU=((X.ALU+X.A+X.TEMP) And &HFF):X.DSA=1'"ULAADC":
' IULXADC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSADC=161
Case 161: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.S Shl 9)+X.TEMP):X.ALU=((X.ALU+X.S+X.TEMP) And &HFF):X.DSA=1'"ULXSADC":
Case 162: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.P Shl 9)+X.TEMP):X.ALU=((X.ALU+X.P+X.TEMP) And &HFF):X.DSA=1'"ULXPADC":
Case 163: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.XH Shl 9)+X.TEMP):X.ALU=((X.ALU+X.XH+X.TEMP) And &HFF):X.DSA=1':"ULXHADC":
Case 164: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.XL Shl 9)+X.TEMP):X.ALU=((X.ALU+X.XL+X.TEMP) And &HFF):X.DSA=1':"ULXLADC":
Case 165: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.YH Shl 9)+X.TEMP):X.ALU=((X.ALU+X.YH+X.TEMP) And &HFF):X.DSA=1':"ULYHADC":
Case 166: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.YL Shl 9)+X.TEMP):X.ALU=((X.ALU+X.YL+X.TEMP) And &HFF):X.DSA=1':"ULYLADC":
' IULRSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBSUB=167,IULTSUB=173
Case 167: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.B Shl 9)):X.ALU=((X.ALU-X.B) And &HFF):X.DSA=1'"ULBSUB":
Case 168: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.C Shl 9)):X.ALU=((X.ALU-X.C) And &HFF):X.DSA=1'"ULCSUB":
Case 169: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.D Shl 9)):X.ALU=((X.ALU-X.D) And &HFF):X.DSA=1'"ULDSUB":
Case 170: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.E Shl 9)):X.ALU=((X.ALU-X.E) And &HFF):X.DSA=1'"ULESUB":
Case 171: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.H Shl 9)):X.ALU=((X.ALU-X.H) And &HFF):X.DSA=1'"ULHSUB":
Case 172: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.L Shl 9)):X.ALU=((X.ALU-X.L) And &HFF):X.DSA=1'"ULLSUB":
Case 173: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.T Shl 9)):X.ALU=((X.ALU-X.T) And &HFF):X.DSA=1'"ULTSUB":
Case 174: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.A Shl 9)):X.ALU=((X.ALU-X.A) And &HFF):X.DSA=1'"ULASUB":
' IULXSUB DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSUB=175
Case 175: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.S Shl 9)):X.ALU=((X.ALU-X.S) And &HFF):X.DSA=1'"ULXSSUB":
Case 176: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.P Shl 9)):X.ALU=((X.ALU-X.P) And &HFF):X.DSA=1'"ULXX.LUT+CSUB":
Case 177: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.XH Shl 9)):X.ALU=((X.ALU-X.XH) And &HFF):X.DSA=1'"ULXHSUB":
Case 178: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.XL Shl 9)):X.ALU=((X.ALU-X.XL) And &HFF):X.DSA=1'"ULXLSUB":
Case 179: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.YH Shl 9)):X.ALU=((X.ALU-X.YH) And &HFF):X.DSA=1'"ULYHSUB":
Case 180: X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.YL Shl 9)):X.ALU=((X.ALU-X.YL) And &HFF):X.DSA=1'"ULYLSUB":
' IULRSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULRSBC=181,IULTSBC=187
Case 181: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.B Shl 9)+X.TEMP):X.ALU=((X.ALU-X.B-X.TEMP) And &HFF):X.DSA=1'"ULBSBC":
Case 182: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.C Shl 9)+X.TEMP):X.ALU=((X.ALU-X.C-X.TEMP) And &HFF):X.DSA=1'"ULCSBC":
Case 183: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.D Shl 9)+X.TEMP):X.ALU=((X.ALU-X.D-X.TEMP) And &HFF):X.DSA=1'"ULDSBC":
Case 184: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.E Shl 9)+X.TEMP):X.ALU=((X.ALU-X.E-X.TEMP) And &HFF):X.DSA=1'"ULESBC":
Case 185: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.H Shl 9)+X.TEMP):X.ALU=((X.ALU-X.H-X.TEMP) And &HFF):X.DSA=1'"ULHSBC":
Case 186: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.L Shl 9)+X.TEMP):X.ALU=((X.ALU-X.L-X.TEMP) And &HFF):X.DSA=1'"ULLSBC":
Case 187: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.T Shl 9)+X.TEMP):X.ALU=((X.ALU-X.T-X.TEMP) And &HFF):X.DSA=1'"ULTSBC":
Case 188: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.A Shl 9)+X.TEMP):X.ALU=((X.ALU-X.A-X.TEMP) And &HFF):X.DSA=1'"ULASBC":
' IULXSBC DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULXSSBC=189
Case 189: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.S Shl 9)+X.TEMP):X.ALU=((X.ALU-X.S-X.TEMP) And &HFF):X.DSA=1'"ULXSSBC":
Case 190: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.P Shl 9)+X.TEMP):X.ALU=((X.ALU-X.P-X.TEMP) And &HFF):X.DSA=1'"ULXPSBC":
Case 191: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.XH Shl 9)+X.TEMP):X.ALU=((X.ALU-X.XH-X.TEMP) And &HFF):X.DSA=1':"ULXHSBC":
Case 192: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.XL Shl 9)+X.TEMP):X.ALU=((X.ALU-X.XL-X.TEMP) And &HFF):X.DSA=1':"ULXLSBC":
Case 193: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.YH Shl 9)+X.TEMP):X.ALU=((X.ALU-X.YH-X.TEMP) And &HFF):X.DSA=1':"ULYHSBC":
Case 194: X.TEMP=X.FLG And 1:X.FLG=*(X.LUT+CSUB+(X.ALU SHL 1)+(X.YL Shl 9)+X.TEMP):X.ALU=((X.ALU-X.YL-X.TEMP) And &HFF):X.DSA=1':"ULYLSBC":
' ADD HL,RR FLAGS --***-0C SO S/Z/PV KEEP INTACT 'IUFQADD=195
Case 195: X.FLG=(X.F And &B11000100)+(X.FLG And &B00111011):'"UFQADD": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' INCDEC SIMPLE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
'IUOINC=196,IUODEC=197,IUFQID=198
Case 196: X.FLG=(*(X.LUT+CADD+(X.ALU SHL 1)+(1 Shl 9))And 254)+(X.FLG And 1):X.ALU=((X.ALU+1) And &HFF):'"UOINC": SAVE CARRY
Case 197: X.FLG=(*(X.LUT+CSUB+(X.ALU SHL 1)+(1 Shl 9))And 254)+(X.FLG And 1):X.ALU=((X.ALU-1) And &HFF):'"UODEC":
Case 198: X.FLG=(X.F And &B00000001)+(X.FLG And &B11111110):'"UFQID": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' IULRAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBAND=199,IULTAND=205
Case 199: X.FLG=*(X.LUT+CAND+X.ALU+(X.B Shl 8)):X.ALU=(X.ALU And X.B):X.DSA=1'"ULBAND":
Case 200: X.FLG=*(X.LUT+CAND+X.ALU+(X.C Shl 8)):X.ALU=(X.ALU And X.C):X.DSA=1'"ULCAND":
Case 201: X.FLG=*(X.LUT+CAND+X.ALU+(X.D Shl 8)):X.ALU=(X.ALU And X.D):X.DSA=1'"ULDAND":
Case 202: X.FLG=*(X.LUT+CAND+X.ALU+(X.E Shl 8)):X.ALU=(X.ALU And X.E):X.DSA=1'"ULEAND":
Case 203: X.FLG=*(X.LUT+CAND+X.ALU+(X.H Shl 8)):X.ALU=(X.ALU And X.H):X.DSA=1'"ULHAND":
Case 204: X.FLG=*(X.LUT+CAND+X.ALU+(X.L Shl 8)):X.ALU=(X.ALU And X.L):X.DSA=1'"ULLAND":
Case 205: X.FLG=*(X.LUT+CAND+X.ALU+(X.T Shl 8)):X.ALU=(X.ALU And X.T):X.DSA=1'"ULTAND":
Case 206: X.FLG=*(X.LUT+CAND+X.ALU+(X.A Shl 8)):X.ALU=(X.ALU And X.A):X.DSA=1'"ULAAND":
'IULXSAND=207 ' IULXAND DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 207: X.FLG=*(X.LUT+CAND+X.ALU+(X.S SHL 8)):X.ALU=((X.ALU And X.S)):X.DSA=1'"ULXSAND":
Case 208: X.FLG=*(X.LUT+CAND+X.ALU+(X.P SHL 8)):X.ALU=((X.ALU And X.P)):X.DSA=1'"ULXX.LUT+CAND":
Case 209: X.FLG=*(X.LUT+CAND+X.ALU+(X.XH SHL 8)):X.ALU=((X.ALU And X.XH)):X.DSA=1'"ULXHAND":
Case 210: X.FLG=*(X.LUT+CAND+X.ALU+(X.XL SHL 8)):X.ALU=((X.ALU And X.XL)):X.DSA=1'"ULXLAND":
Case 211: X.FLG=*(X.LUT+CAND+X.ALU+(X.YH SHL 8)):X.ALU=((X.ALU And X.YH)):X.DSA=1'"ULYHAND":
Case 212: X.FLG=*(X.LUT+CAND+X.ALU+(X.YL SHL 8)):X.ALU=((X.ALU And X.YL)):X.DSA=1'"ULYLAND":
' IULRXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBXOR=213,IULTXOR=219
Case 213: X.FLG=*(X.LUT+CXOR+X.ALU+(X.B Shl 8)):X.ALU=(X.ALU XOR X.B):X.DSA=1'"ULBXOR":
Case 214: X.FLG=*(X.LUT+CXOR+X.ALU+(X.C Shl 8)):X.ALU=(X.ALU XOR X.C):X.DSA=1'"ULCXOR":
Case 215: X.FLG=*(X.LUT+CXOR+X.ALU+(X.D Shl 8)):X.ALU=(X.ALU XOR X.D):X.DSA=1'"ULDXOR":
Case 216: X.FLG=*(X.LUT+CXOR+X.ALU+(X.E Shl 8)):X.ALU=(X.ALU XOR X.E):X.DSA=1'"ULEXOR":
Case 217: X.FLG=*(X.LUT+CXOR+X.ALU+(X.H Shl 8)):X.ALU=(X.ALU XOR X.H):X.DSA=1'"ULHXOR":
Case 218: X.FLG=*(X.LUT+CXOR+X.ALU+(X.L Shl 8)):X.ALU=(X.ALU XOR X.L):X.DSA=1'"ULLXOR":
Case 219: X.FLG=*(X.LUT+CXOR+X.ALU+(X.T Shl 8)):X.ALU=(X.ALU XOR X.T):X.DSA=1'"ULTXOR":
Case 220: X.FLG=*(X.LUT+CXOR+X.ALU+(X.A Shl 8)):X.ALU=(X.ALU XOR X.A):X.DSA=1'"ULAXOR":
'IULXSXOR=221 ' IULXXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 221: X.FLG=*(X.LUT+CXOR+X.ALU+(X.S SHL 8)):X.ALU=((X.ALU XOR X.S)):X.DSA=1'"ULXSXOR":
Case 222: X.FLG=*(X.LUT+CXOR+X.ALU+(X.P SHL 8)):X.ALU=((X.ALU XOR X.P)):X.DSA=1'"ULXX.LUT+CXOR":
Case 223: X.FLG=*(X.LUT+CXOR+X.ALU+(X.XH SHL 8)):X.ALU=((X.ALU XOR X.XH)):X.DSA=1'"ULXHXOR":
Case 224: X.FLG=*(X.LUT+CXOR+X.ALU+(X.XL SHL 8)):X.ALU=((X.ALU XOR X.XL)):X.DSA=1'"ULXLXOR":
Case 225: X.FLG=*(X.LUT+CXOR+X.ALU+(X.YH SHL 8)):X.ALU=((X.ALU XOR X.YH)):X.DSA=1'"ULYHXOR":
Case 226: X.FLG=*(X.LUT+CXOR+X.ALU+(X.YL SHL 8)):X.ALU=((X.ALU XOR X.YL)):X.DSA=1'"ULYLXOR":
' IULROR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBOR=227,IULTOR=233
Case 227: X.FLG=*(X.LUT+COR+X.ALU+(X.B Shl 8)):X.ALU=(X.ALU OR X.B):X.DSA=1'"ULBOR":
Case 228: X.FLG=*(X.LUT+COR+X.ALU+(X.C Shl 8)):X.ALU=(X.ALU OR X.C):X.DSA=1'"ULCOR":
Case 229: X.FLG=*(X.LUT+COR+X.ALU+(X.D Shl 8)):X.ALU=(X.ALU OR X.D):X.DSA=1'"ULDOR":
Case 230: X.FLG=*(X.LUT+COR+X.ALU+(X.E Shl 8)):X.ALU=(X.ALU OR X.E):X.DSA=1'"ULEOR":
Case 231: X.FLG=*(X.LUT+COR+X.ALU+(X.H Shl 8)):X.ALU=(X.ALU OR X.H):X.DSA=1'"ULHOR":
Case 232: X.FLG=*(X.LUT+COR+X.ALU+(X.L Shl 8)):X.ALU=(X.ALU OR X.L):X.DSA=1'"ULLOR":
Case 233: X.FLG=*(X.LUT+COR+X.ALU+(X.T Shl 8)):X.ALU=(X.ALU OR X.T):X.DSA=1'"ULTOR":
Case 234: X.FLG=*(X.LUT+COR+X.ALU+(X.A Shl 8)):X.ALU=(X.ALU OR X.A):X.DSA=1'"ULAOR":
'IULXSOR=235 ' IULXOR DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 235: X.FLG=*(X.LUT+COR+X.ALU+(X.S SHL 8)):X.ALU=((X.ALU OR X.S)):X.DSA=1'"ULXSOR":
Case 236: X.FLG=*(X.LUT+COR+X.ALU+(X.P SHL 8)):X.ALU=((X.ALU OR X.P)):X.DSA=1'"ULXPOR":
Case 237: X.FLG=*(X.LUT+COR+X.ALU+(X.XH SHL 8)):X.ALU=((X.ALU OR X.XH)):X.DSA=1'"ULXHOR":
Case 238: X.FLG=*(X.LUT+COR+X.ALU+(X.XL SHL 8)):X.ALU=((X.ALU OR X.XL)):X.DSA=1'"ULXLOR":
Case 239: X.FLG=*(X.LUT+COR+X.ALU+(X.YH SHL 8)):X.ALU=((X.ALU OR X.YH)):X.DSA=1'"ULYHOR":
Case 240: X.FLG=*(X.LUT+COR+X.ALU+(X.YL SHL 8)):X.ALU=((X.ALU OR X.YL)):X.DSA=1'"ULYLOR":
' IULRCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULBCP=241,IULTCP=247
Case 241: X.FLG=*(X.LUT+CCP+X.ALU+(X.B Shl 8)):X.DSA=1'"ULBCP":
Case 242: X.FLG=*(X.LUT+CCP+X.ALU+(X.C Shl 8)):X.DSA=1'"ULCCP":
Case 243: X.FLG=*(X.LUT+CCP+X.ALU+(X.D Shl 8)):X.DSA=1'"ULDCP":
Case 244: X.FLG=*(X.LUT+CCP+X.ALU+(X.E Shl 8)):X.DSA=1'"ULECP":
Case 245: X.FLG=*(X.LUT+CCP+X.ALU+(X.H Shl 8)):X.DSA=1'"ULHCP":
Case 246: X.FLG=*(X.LUT+CCP+X.ALU+(X.L Shl 8)):X.DSA=1'"ULLCP":
Case 247: X.FLG=*(X.LUT+CCP+X.ALU+(X.T Shl 8)):X.DSA=1'"ULTCP":
Case 248: X.FLG=*(X.LUT+CCP+X.ALU+(X.A Shl 8)):X.DSA=1'"ULACP":
'IULXSCP=249 ' IULXCP DIRECT SERIES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 249: X.FLG=*(X.LUT+CCP+X.ALU+(X.S SHL 8)):X.DSA=1'"ULXSCP":
Case 250: X.FLG=*(X.LUT+CCP+X.ALU+(X.P Shl 8)):X.DSA=1'"ULXPCP":
Case 251: X.FLG=*(X.LUT+CCP+X.ALU+(X.XH SHL 8)):X.DSA=1'"ULXHCP":
Case 252: X.FLG=*(X.LUT+CCP+X.ALU+(X.XL SHL 8)):X.DSA=1'"ULXLCP":
Case 253: X.FLG=*(X.LUT+CCP+X.ALU+(X.YH SHL 8)):X.DSA=1'"ULYHCP":
Case 254: X.FLG=*(X.LUT+CCP+X.ALU+(X.YL SHL 8)):X.DSA=1'"ULYLCP":
' - PROOT SHIFTS AND FLG CORRECT RLCA/RLA/RRCA/RRA     --503-0C IUFQSH=255
Case 255: X.FLG=(X.F And &B11000100)+(X.FLG And &B00111011):'"UFQSH": ' THIS IS NOT ACTUAL MICROCODE, BUT IT IS DONE BY DESIGN, SO CORRECT
' IUORLC=256,IUORRC=257,IUORL=258,IUORR=259 ' IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263
Case 256: X.ALU=*(X.RLC+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UORLC":
Case 257: X.ALU=*(X.RRC+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UORRC":
Case 258: X.ALU=*(X.RL+X.ALU)Shr ((X.FLG And 1) Shl 3):X.FLG=(X.ALU Shr 16) And &HFF:X.ALU And= &HFF:X.DSA=1 '"UORL": ' HERE QUAD ENTRY TABLE VV/FF
Case 259: X.ALU=*(X.RR+X.ALU)Shr ((X.FLG And 1) Shl 3):X.FLG=(X.ALU Shr 16) And &HFF:X.ALU And= &HFF:X.DSA=1 '"UORR": ' HERE QUAD ENTRY TABLE VV/FF
'X.ALU=*(X.RR+X.ALU):If X.FLG And 1 Then X.FLG=8 Else X.FLG=0 EndIf:X.ALU Shl= X.FLG:X.FLG=(X.ALU Shr 8) And &HFF:X.ALU=(X.ALU Shr 24)And &HFF '"UORR": ' HERE QUAD ENTRY TABLE VV/FF
Case 260: X.ALU=*(X.SLA+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UOSLA":
Case 261: X.ALU=*(X.SRA+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UOSRA":
Case 262: X.ALU=*(X.SLL+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UOSLL":
Case 263: X.ALU=*(X.SRL+X.ALU):X.FLG=X.ALU Shr 8:X.ALU And= &HFF:X.DSA=1 '"UOSRL":
'IUORES=264,IUOSET=265
Case 264: X.ALU=X.ALU And ((1 Shl ((X.CODE Shr 3) And 7)) Xor &HFF):X.DSA=1'"UORES":
Case 265: X.ALU=X.ALU Or (1 Shl ((X.CODE Shr 3) And 7)):X.DSA=1':"UOSET":
' $ CALCULATION HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'IULTSADD=266,IUOSADDC=267 0-127 IS DIRECT ADDITION, 128 IS -128, 128-255 IS -128 TO -1
Case 266: If X.T And 128 Then ' SIGNED MAKE SUB, UNSIGNED MAKE ADD 
X.TEMP=128-(X.T And 127)
X.FLG=*(X.LUT+CSUB+(X.ALU Shl 1)+(X.TEMP Shl 9))
X.ALU=((X.ALU-X.TEMP) And &HFF)
Else 
X.TEMP=X.T And 127
X.FLG=*(X.LUT+CADD+(X.ALU SHL 1)+(X.TEMP Shl 9)) 
X.ALU=((X.ALU+X.TEMP) And &HFF)
EndIf:'"ULTSADD": 
Case 267: If X.FLG And XFN Then ' IF N IS SET THEN IT WAS SUB AND MAKE SBC WITH CARRY ELSE ADC WITH, DISCARD FLAGS HERE
X.ALU=((X.ALU-(X.FLG And 1)) And &HFF)
Else X.ALU=((X.ALU+(X.FLG And 1)) And &HFF)
EndIf:'"UOSADDC":
'IUOBIT=268 'BIT n,r *Z513*0-  PV as Z, S set only if n=7 and b7 of r set Behaves much like AND r,2^n
' REVERT F53 TO NORMAL COPY 'F53 SEAN'S BULLSHIT WRONG 5 = set if n=5 and tested bit is set. ' 3 = set if n=3 and tested bit is set. 
Case 268: ' "UOBIT": 
X.TEMP=1 Shl ((X.CODE Shr 3) And 7)
X.FLG=(X.FLG And 1)+XFH+(X.ALU And ((X.TEMP And &B10000000)+&B00101000))' RESET 5,3,N, SET H, COPY CARRY, COPY F53 FROM ALU, MASK ALU BY 7 AND GET 7 TO FLG   
If (X.ALU And X.TEMP)=0 Then X.FLG+=4+64 ' IF BIT ZERO THEN SET Z AND PV

' - - DAA HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Case 269 : X.ALU=*(X.DAA+X.ALU+(X.FLG Shl 8)):X.FLG=X.ALU Shr 8:X.ALU And= &HFF'"UODAA":
' - - - PC SUBST UOPS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'SIGUWZ=270,SIGUHL=271,SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275
Case 270 : X.ISEXT=12:X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN USEWZ":
Case 271 : X.ISEXT=12:X.SUBST=X.L+(X.H Shl 8)'"HIDDEN USEHL":
Case 272 : X.ISEXT=12:X.SUBST=X.XL+(X.XH Shl 8)'"HIDDEN USEIX":
Case 273 : X.ISEXT=12:X.SUBST=X.YL+(X.YH Shl 8)'"HIDDEN USEIY":
'SKIP6PE: PV set if BC not 0 PO IS ZERO PE IS TRUE
Case 274 : X.ISEXT=12:If(X.FLG And XFP)=0 Then X.CUR+=XLDIR  '"HIDD SKIP6PO":
Case 275 : X.ISEXT=12:If(X.FLG And XFP)=0 Or (X.FLG And XFZ) Then X.CUR+=XCPIR  '"HIDD SKIP6POZ":
' CONDITIONAL ENDINGS - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280,IECCPO=281,IECCM=282,IECCP=283
Case 276 : X.ISEXT=12:If     X.FLG And XFZ  Then X.CUR=PMOS ' "HIDDEN ECCZ":
Case 277 : X.ISEXT=12:If (X.FLG And XFZ)=0 Then X.CUR=PMOS' "HIDDEN ECCNZ":
Case 278 : X.ISEXT=12:If     X.FLG And XFC  Then X.CUR=PMOS' "HIDDEN ECCC":
Case 279 : X.ISEXT=12:If (X.FLG And XFC)=0 Then X.CUR=PMOS' "HIDDEN ECCNC":
Case 280 : X.ISEXT=12:If     X.FLG And XFP  Then X.CUR=PMOS' "HIDDEN ECCPE":
Case 281 : X.ISEXT=12:If (X.FLG And XFP)=0 Then X.CUR=PMOS' "HIDDEN ECCPO":
Case 282 : X.ISEXT=12:If     X.FLG And XFS  Then X.CUR=PMOS' "HIDDEN ECCM":
Case 283 : X.ISEXT=12:If (X.FLG And XFS)=0 Then X.CUR=PMOS' "HIDDEN ECCP":
' ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289,ISWCCP=290,ISWCCM=291
Case 284 : X.ISEXT=12:If (X.FLG And XFZ)=0 Then X.SUBST=X.Z+(X.W Shl 8) '"HIDDEN SWCCNZ":
Case 285 : X.ISEXT=12:If X.FLG And XFZ Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCZ":
Case 286 : X.ISEXT=12:If (X.FLG And XFC)=0 Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCNC":
Case 287 : X.ISEXT=12:If X.FLG And XFC Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCC":
Case 288 : X.ISEXT=12:If X.FLG And XFP Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCPE":
Case 289 : X.ISEXT=12:If (X.FLG And XFP)=0 Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCPO":
Case 290 : X.ISEXT=12:If (X.FLG And XFS)=0 Then X.SUBST=X.Z+(X.W Shl 8)'"HIDDEN SWCCP":
Case 291 : X.ISEXT=12:If X.FLG And XFS Then X.SUBST=X.Z+(X.W Shl 8) '"HIDDEN SWCCM":
' - - - CPL - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' CPL --*1*-1- 5, 3 from A registeX.
Case 292 : '"UOCPL":
X.ALU Xor= 255:X.FLG=(X.FLG And &B11000101)+(X.ALU And &B00101000)+&B00010010:X.DSA=1

'if <previous instruction modified the flags> then F53 COPY ELSE F53 OR
' SO Q SET IF FLG MOD OCCUR, SO SCF/CCF ALWAYS DOES OR ACTUALLY, AND COPY IS THE DEFINED STATE
' SO EACH UAPCI WILL RESET Q TO UNDEFINED STATE IE ZERO

' - - - IUOSCF=293,IUOCCF=294 the content of A is ORED OR MOVED ACC WITH Q STATE to flags 5+3 after SCF/CCF  - - - - - 
Case 293 : '"UOSCF": 
X.DSA=1
X.FLG =((X.FLG And &B11101100)+1) Or (X.A And &B00101000) ' OR STATE AKA UNDEF
X.TEMP=((X.FLG And &B11000100)+1)   +(X.A And &B00101000) ' COPY STATE
If X.Q Then X.FLG=X.TEMP ' IF Q AKA DEFINED THEN COPY

' CCF C=1-C, H as old C. 5, 3 from A register --***-0* MAY OR A53 BITS MAY COPY
Case 294 : ' "UOCCF":
X.DSA=1
X.FLG=(X.FLG And &B11101101)+((X.FLG And 1)Shl 4) ' SET H AS OLD C CLEAR N
X.FLG Xor= XFC ' INVERT C
X.FLG Or= (X.A And &B00101000) ' UNDEF STATE
X.TEMP=(X.FLG And &B11010111)+(X.A And &B00101000) ' DEF STATE
If X.Q Then X.FLG=X.TEMP ' IF Q AKA DEFINED THEN COPY

' - - IUEXA=295,IUEXX=296 NO AFF
Case 295 : X.TAF=X.AF:X.AF=X.EAF:X.EAF=X.TAF:'"AF UEXA":
Case 296 : X.TBC=X.BC:X.TDE=X.DE:X.THL=X.HL::X.BC=X.EBC:X.DE=X.EDE:X.HL=X.EHL::X.EBC=X.TBC:X.EDE=X.TDE:X.EHL=X.THL: '"RR UEXX":
' - - - IUDFF=297,IUSFF=298,IUCFF=299
Case 297 : X.IFF1=0:X.IFF2=0:'"DIS/INT UDFF":
Case 298 : X.IFF1=1:X.IFF2=1:'"ENA/INT USFF":
Case 299 : X.IFF1=X.IFF2:'"REST/INT UCFF":
' - - -IUXHD=300
Case 300 : X.TDE=X.DE:X.DE=X.HL:X.HL=X.TDE:'"HL-DE UXHD":
' - - - PORT IO UOPS 'IUNWR=301,IUTIO=302,IUPOW=303 - - - - - - - - - - - - 
Case 301 : X.BUS=0:'"NULL UNWR":
Case 302 : X.T=*(X.IORD+X.ADDR):*(X.IORD+X.ADDR)=255':SCROLLOC:Print X.ADDR;" ";"RD("+Hex$(X.ADDR,4)+")="+Hex$(X.T,2)+" UTIO":Sleep
Case 303 : *(X.IOWR+X.ADDR)=X.BUS:'"WR("+Hex$(X.ADDR,4)+")="+Hex$(X.BUS,2)+" UPOW":
' - - IUFWR=304 - - 
Case 304 : X.BUS=X.F:'"FLG UFWR":
' - - IUONEG=305
Case 305 : X.FLG=(*(X.LUT+CSUB+(X.ALU Shl 9))And &B11111011):If X.ALU=&H80 Then X.FLG+=XFP Else EndIf:X.ALU=((0-X.ALU) And &HFF):'"UONEG": 
' - - - IULTRI=306,IULTRR=307,IUFQIR=308 LD A,R/LD A,I SZ503*0-  PV as IFF2, ALIKE DO OR/XOR r SZ503P00
Case 306 : X.ALU=X.I:'"I-REG ULLRI":
Case 307 : X.ALU=X.R:'"R-REG ULLRR":
Case 308 : X.FLG=(*(X.LUT+COR+X.ALU) And &B11111010)+(X.FLG And 1)+(X.IFF2 Shl 2):'"QUIRK UFQIR":
' - - - IUOQIO=309 - -  IN r,(C) AFFECTION SZ503P0- Also true for IN F(NULL),(C), LIKE OR VALUE,0
Case 309 : X.FLG=(*(X.LUT+COR+X.ALU) And &B11111010)+(X.FLG And 1):'"QUIRK UFQIO":
' - - - RLD AND RRD ALU NIBBLE OPS -  
' IUORVN=310(NIBB REVERSE)
' IULANLL=311(LOWN=A-LOWN),IULTNLL=312(LOWN=T-LOWN)
' IULANLH=313(HIGHN=A-LOWN),IULTNHL=314(LOWN=T-HIGHN)
Case 310 : X.ALU=((X.ALU And &H0F)Shl 4)+((X.ALU SHR 4)And &H0F):'"REV UORVN":
Case 311 : X.ALU=(X.ALU And &HF0)+(X.A And &H0F)'"L=AL ULANLL":
Case 312 : X.ALU=(X.ALU And &HF0)+(X.T And &H0F):'"L=TL ULTNLL":
Case 313 : X.ALU=(X.ALU And &H0F)+((X.A And &H0F)Shl 4):'"H=AL ULANLH":
Case 314 : X.ALU=(X.ALU And &HF0)+((X.T Shr 4)And &H0F):'"L=TH ULTNHL":
' - - IM X SETTING SIMPLEST OP - - - - 
'IUIM0=315,IUIM1=316,IUIM2=317
Case 315 : X.IMM=0:X.INTC=X.INT0 '"IM=0 UIM0":
Case 316 : X.IMM=1:X.INTC=X.INT1 '"IM=1 UIM1":
Case 317 : X.IMM=2:X.INTC=X.INT2 '"IM=2 UIM2":
' - - LDIR QUIRK AFF IULAQLD=318 - - -  
'LDI/LDIR/LDD/LDIR     --*0**0-  PV set if BC not 0 SO SAVE PV FROM UBCDPV 
'F5 is bit 1 of (transferred byte + A) 'F3 is bit 3 of (transferred byte + A)
Case 318 : X.TEMP=X.T+X.A:X.FLG=(X.FLG And &B11000101)+(X.TEMP And &B00001000)+((X.TEMP And &B00000010)Shl 4)':"ULAQLD":
' - - - CPIR QUIRK AFF 
'IULTCPQ=319
'CPI/CPIR/CPD/CPDR     SZ*H**1-  PV set if BC not 0 'S,Z,H from (A - (HL) ) DONE BY ULTCP
'F3 is bit 3 of (A - (HL) - H), H as in F after CPIR's INTERNAL CP
'F5 is bit 1 of (A - (HL) - H) 
Case 319 : X.TEMP=(X.FLG And XFH) Shr 4 ' GET FH AS ADD VALUE 0/1
X.TEMP=X.A-X.T-X.TEMP' X.T = (HL) THIS TIME
X.FLG=(X.FLG And &B11010111)+(X.TEMP And &B00001000)+((X.TEMP And &B00000010)Shl 4):'"QUIRK ULTCPQ"

' - - INIR OTIR ENDING PARITY QUIRK  'IUBXORQ=320 'NEW FMLA 
Case 320 : ' "UBXORQ": UBXORQ  
X.ALU=(X.ALU And 7) Xor X.B:X.FLG OR= *(PFLAG+X.ALU) 'flag_pv = partab[((io_data + reg_other) & 7) ^ reg_b];

' CPIR NEED EXTRA CROSS LOAD DECREASE
Case 321: X.ADDER-=1:X.TEMP=X.ADDER:X.Z=X.TEMP And &hFF:X.TEMP Shr= 8:X.W=X.TEMP And &hFF:'"CROSS UADDWZ":

' - - - - - IUTADDQ=322 INIR OTIR ENDING NEW FMLA
Case 322 : '"QUIRK UTADDQ"
X.DSA=1
X.ALU=X.ALU+X.T ' DO ADD AND MASK
X.TEMP=X.ALU Shr 8: ' GET CARRY FOR C AND H SETTING
X.FLG=(X.FLG And &B11101000)+((X.T And XFS) Shr 6)+X.TEMP+(X.TEMP Shl 4): ' CLEAR H,P,N,C, SET N AS MSB X.T, SET C,H BOTH  
 
Case 323 : ' "PIPE PARALLEL TRIPLE":
If X.ISEXT And 1 Then X.ISEXT=15 Else X.ISEXT=14' "TRI:":

' - - LD ALU,Z
Case 324: X.ALU=X.Z:' "ULLRZ":
' - - DONE: - - - 
Case 325:  
If X.ISEXT And 1 Then 
X.ISEXT=11 
Else 
	If X.ISEXT=10 Then Else X.ISEXT=12 ENDIF	
	If X.ISPFX Then 
	X.CUR=*(PROOT+X.PREFIX) 
	Else
		If X.ISINT Then
			If X.IFF1 Then X.CUR=PMOS+X.INTC:X.ISINT=0:X.ISHALT=0':SCROLLOC:Print "*** INT ADDRESS SET ***";X.CUR-PMOS;" ";X.INTC;" ";X.INT0;" ";X.INT1;" ";X.INT2:Exit Select
			Else EndIf
		If X.ISHALT Then X.CUR=PMOS:X.SUBST-=1:Exit Select
		X.CUR=PMOS
	EndIf
EndIf


' "DONE":
' - - PAR NOW UOP NOT SIGNAL - - - 
Case 326: If X.ISEXT And 1 Then X.ISEXT=3 Else X.ISEXT=6' "PAR:":
' - - EXT NOW UOP NOT SIGNAL - - - NEED TO CATCH INT TOO 
Case 327: X.ISEXT=2:X.XCUR=X.CUR ' "EXT:":
		If X.ISINT And X.IFF1 Then 
			X.CUR=PMOS+X.INTC:X.ISINT=0:X.ISHALT=0
			Else 
			X.CUR=*(PROOT+(X.PREFIX*X.ISPFX))
			EndIf
' - INTERRUPT OPERATORS
Case 328: X.PC=X.SUBST:X.IFF1=0:X.DSA=0':SCROLLOC:Print "UIFF":Sleep ' "UIFF" ' USEWZ/RR IN FACT DONE BY Z80 ON INT START, AND CLEAR Q 
Case 329:  ' "UIMRQ" DUMMY HERE LIKE UNOP
Case 330: X.T=&HFF ' "UIMFET" RECEIVE VECTOR HERE DEFAULTS TO &HFF FOR ALL IMs
Case 331: X.W=X.I ' "ULWI" LD W,I

Case 332 : X.Z=&H00 ' "ULZ00"
Case 333 : X.Z=&H08 ' "ULZ08"
Case 334 : X.Z=&H10 ' "ULZ10"
Case 335 : X.Z=&H18 ' "ULZ18"
Case 336 : X.Z=&H20 ' "ULZ20"
Case 337 : X.Z=&H28 ' "ULZ28"
Case 338 : X.Z=&H30 ' "ULZ30"
Case 339 : X.Z=&H38 ' "ULZ38"
' UWBITQ CORRUPT F35 WITH COPY OF W 
Case 340 : ' "UWBITQ" SO IN BIT THERE ARE TWO ALUOPS, IF USE INDIRECT ACCESS, SECOND LIKE QUIRKY "AND ALU,W"
' P/V, Z, S set as the other BIT instructions, but the 5 and 3 flags are different.
' They are a copy of an internal register of the Z80, which IS W
X.FLG=(X.FLG And &B11010111)+(X.W And &B00101000)
Case 341 : X.ISEXT=12:If X.FLG And XFZ Then X.CUR+=XDJNZ  '"SKIP6Z":
' CYCLE LDIR LDXR/CPXR --*0**0- F53 FROM W, P BY UBCDPV, N H CLEAR ,VZ80 SHOW THAT CPIR RESET H IN CYCLE TOO
Case 342 : X.FLG=(X.FLG And &B11000101)+(X.W And &B00101000) ' "IULWQLD"
' - -RLD RRD AFFECTION
Case 343 : ' "UOFRXD" RRD/RLD SZ503P0-  Flags set on result in A ALIKE OR/XOR r SZ503P00
X.FLG=*(X.LUT+COR+X.ALU)+(X.FLG And XFC)
Case 344 : ' CORRECT Z FOR ADC/SBC RR IF HL=0 THEN Z
X.TEMP=0:If X.HL=0 Then X.TEMP=XFZ
X.FLG=(X.FLG And &B10111111)+X.TEMP
' - ULTCPX FOR CPIR SAVES CARRY
Case 345: X.FLG=(*(X.LUT+CCP+X.ALU+(X.T Shl 8)) And &B11111110)+(X.F And XFC):'"ULTCPX":
Case 346: X.ALU=X.W:' "ULLRW":


End Select
