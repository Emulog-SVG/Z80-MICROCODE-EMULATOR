
' - - - - - - - - - - - - - - - ALL MICROCODE AND LUT SETUP HERE  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

' - - - CURRENT STATE - - - - 
' NO HALF CYCLE PRECISION
' NO SPECIAL RESET
' NO PIN SIGNALING
' NO LDIR/CPIR/INIR/OTIR INTERRUPTED FLAG AFFECTIONs
' NO IM0 WITH BYTE FETCH, IS SAME AS IM1
' HALT DO REPEAT ITSELF UNTIL INT

' - - -  REPLACEMENT VALUES - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
Dim Shared As Const ULong IULTR=511,IULRT=510,IURWR=509,IULRADD=508,IULXADD=507,IULRADC=506
Dim Shared As Const ULong IULXADC=505,IULRSUB=504,IULXSUB=503,IULRSBC=502,IULXSBC=501,IULLR=500
Dim Shared As Const ULong IULRL=499,IULRAND=498,IULXAND=497,IULRXOR=496,IULXXOR=495,IULROR=494
Dim Shared As Const ULong IULXOR=493,IULRCP=492,IULXCP=491,IULZN=490

' SO ASSIGN EXACT NUMBERS IN SWITCH CASE TO OPERATORS HERE, CASE ZERO FOR ERROR TRACKING
Dim Shared As Const ULong IUADBC=1,IUADDE=2,IUAHL=3,IUAWZ=4,IUAAD=5,IUADSP=6,IUAIX=7,IUAIY=8,IUAPCI=9,IUFET=10,IUAIRIUF=11
Dim Shared As Const ULong IURALF=12,IULTB=13,IULBT=21,IUALF=19,IULRBT=21,IULRCT=22,IULRDT=23,IULRET=24,IULRHT=25,IULRLT=26
Dim Shared As Const ULong IULRAT=28,IUHALT=27,IUBWR=29,IUCWR=30,IUDWR=31,IUEWR=32,IUHWR=33,IULWR=34,IUOWR=35,IUAWR=36
Dim Shared As Const ULong IURCW=37,IUWCW=38,IUDOW=39,IUNOP=40,IUTRD=41,IUTWR=42,IULSLT=43,IULSHT=44,IULWE=45,IULWA=46
Dim Shared As Const ULong IULWT=47,IULZT=48,IULW0=50,IUWZI=51,IUBCI=52,IUDEI=53,IUHLI=54,IUSPI=55,IUADI=56,IUIXI=57,IUIYI=58
Dim Shared As Const ULong IUADIWZ=59,IUADIPC=60,IUADD=61,IUBCD=62,IUBCDPV=63,IUDED=64,IUHLD=65,IUSPD=66,IUWZD=67,IUIXD=68
Dim Shared As Const ULong IUIYD=69,IULDBC=70,IULDDE=71,IULDHL=72,IULDSP=73,IULDWZ=74,IULDPC=75,IULDIX=76,IULDIY=77,IULBCD=78
Dim Shared As Const ULong IULDED=79,IULHLD=80,IULWZD=81,IULSPD=82,IULPCD=83,IULIXD=84,IULIYD=85,IUPFDD=86,IUPFFD=87,IUPFCB=88
Dim Shared As Const ULong IUPFED=89,IUPFDC=90,IUPFFC=91,IUSLWR=92,IUSHWR=93,IUPLWR=94,IUPHWR=95,IUXHWR=96,IUXLWR=97,IUYHWR=98
Dim Shared As Const ULong IUYLWR=99,IULLRB=100,IULLRC=101,IULLRD=102,IULLRE=103,IULLRH=104,IULLRL=105,IULLRT=106,IULLRA=107
Dim Shared As Const ULong IULLXL=108,IULLXH=109,IULLYL=110,IULLYH=111,IULLPL=112,IULLPH=113,IULRIA=114,IULRRA=115,IULRBL=116
Dim Shared As Const ULong IULRCL=117,IULRDL=118,IULREL=119,IULRHL=120,IULRLL=121,IULRTL=122,IULRAL=123,IULRZL=124,IULRWL=125
Dim Shared As Const ULong IULXLL=126,IULXHL=127,IULYLL=128,IULYHL=129,IULRFT=130,IULXLT=131,IULXHT=132,IULYLT=133,IULYHT=134
Dim Shared As Const ULong IULTXL=135,IULTXH=136,IULTYL=137,IULTYH=138,IULBADD=139,IULTADD=145,IULXSADD=147,IULBADC=153
Dim Shared As Const ULong IULTADC=159,IULXSADC=161,IULBSUB=167,IULTSUB=173,IULXSSUB=175,IULBSBC=181,IULTSBC=187,IULXSSBC=189
Dim Shared As Const ULong IUFQADD=195,IUOINC=196,IUODEC=197,IUFQID=198,IULBAND=199,IULTAND=205,IULXSAND=207,IULBXOR=213
Dim Shared As Const ULong IULTXOR=219,IULXSXOR=221,IULBOR=227,IULTOR=233,IULXSOR=235,IULBCP=241,IULTCP=247,IULXSCP=249
Dim Shared As Const ULong IUFQSH=255,IUORLC=256,IUORRC=257,IUORL=258,IUORR=259,IUOSLA=260,IUOSRA=261,IUOSLL=262,IUOSRL=263
Dim Shared As Const ULong IUORES=264,IUOSET=265,IULTSADD=266,IUOSADDC=267,IUOBIT=268,IUODAA=269,SIGUWZ=270,SIGUHL=271
Dim Shared As Const ULong SIGUIX=272,SIGUIY=273,SIGSK6=274,SIGSK6Z=275,IECCZ=276,IECCNZ=277,IECCC=278,IECCNC=279,IECCPE=280
Dim Shared As Const ULong IECCPO=281,IECCM=282,IECCP=283,ISWCCNZ=284,ISWCCZ=285,ISWCCNC=286,ISWCCC=287,ISWCCPE=288,ISWCCPO=289
Dim Shared As Const ULong ISWCCP=290,ISWCCM=291,IUOCPL=292,IUOSCF=293,IUOCCF=294,IUEXA=295,IUEXX=296,IUDFF=297,IUSFF=298
Dim Shared As Const ULong IUCFF=299,IUXHD=300,IUNWR=301,IUTIO=302,IUPOW=303,IUFWR=304,IUONEG=305,IULLRI=306,IULLRR=307
Dim Shared As Const ULong IUFQIR=308,IUOQIO=309,IUORVN=310,IULANLL=311,IULTNLL=312,IULANLH=313,IULTNHL=314,IUIM0=315,IUIM1=316
Dim Shared As Const ULong IUIM2=317,IULAQLD=318,IULTCPQ=319,IUBXORQ=320,IUADDWZ=321,IUTADDQ=322,IULLRZ=324,IDONE=325,IPAR=326
Dim Shared As Const ULong IEXT=327,IUIFF=328,IUIMRQ=329,IUIMFET=330,IULWI=331,IULZ00=332,IUWBITQ=340,ISKIP6Z=341,IULWQLD=342
Dim Shared As Const ULong IUOFRXD=343,IUFHLZ=344,IULTCPX=345,IULLRW=346,ITRI=323

' - - - - - - - - - UOP SETUP COMMANDS (TO ROOTs), EACH ROOT IS 256 ENTRIES OF UINT64 POINTERS (TO PMOS) - - - 

Sub DEFMAIN(OFFS As ULongInt):*(PROOT+OFFS)=PMCUR:End Sub
Sub DEFDD(OFFS As ULongInt):::*(PROOT+XDD+OFFS)=PMCUR:End Sub
Sub DEFFD(OFFS As ULongInt):::*(PROOT+XFD+OFFS)=PMCUR:End Sub
Sub DEFCB(OFFS As ULongInt):::*(PROOT+XCB+OFFS)=PMCUR:End Sub
Sub DEFED(OFFS As ULongInt):::*(PROOT+XED+OFFS)=PMCUR:End Sub
Sub DEFDDCB(OFFS As ULongInt):*(PROOT+XDDCB+OFFS)=PMCUR:End Sub
Sub DEFFDCB(OFFS As ULongInt):*(PROOT+XFDCB+OFFS)=PMCUR:End Sub

' - - - - - - - - - - - - - - - MICROCODE "WORDS" - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

' AFFECTION AND QUIRKS
Sub UBXORQ():*PMCUR+=IUBXORQ:PMCUR+=1:End Sub' CREATE ERRATIC PV FOR INIR OTIR 
Sub UTADDQ():*PMCUR+=IUTADDQ:PMCUR+=1:End Sub' CREATE ERRATIC NCH PV FOR INIR OTIR
Sub UWBITQ():*PMCUR+=IUWBITQ:PMCUR+=1:End Sub' ERRATIC F35 OF W TO FLG IN BIT (HL/IX/IY)
Sub ULWQLD():*PMCUR+=IULWQLD:PMCUR+=1:End Sub' ERRATIC F35 OF W TO FLG IN LDIR/CPIR CLEAR N
Sub UOQIO():*PMCUR+=IUOQIO:PMCUR+=1:End Sub' AFFECT FLAGS BY IO BYTE, UNARY OP
Sub UOFRXD():*PMCUR+=IUOFRXD:PMCUR+=1:End Sub' AFFECT FLAGS FOR RLD RRD
Sub UFHLZ():*PMCUR+=IUFHLZ:PMCUR+=1:End Sub' CORRECT Z FOR ADC/SBC RR
Sub ULTCPX():*PMCUR+=IULTCPX:PMCUR+=1:End Sub ' SPECIAL CP FOR CPIR
Sub ULTCPQ():*PMCUR+=IULTCPQ:PMCUR+=1:End Sub ' ERRATIC EXTRA COMPARE FOR CPIR BUNCH
Sub ULAQLD():*PMCUR+=IULAQLD:PMCUR+=1:End Sub ' LDIR AFFECTION
Sub UFQADD():*PMCUR+=IUFQADD:PMCUR+=1:End Sub ' CORRECT FLAGS FOR ADD HL,RR 
Sub UFQID():*PMCUR+=IUFQID:PMCUR+=1:End Sub ' CORRECT INC DEC R CARRY SAVE
Sub UFQSH():*PMCUR+=IUFQSH:PMCUR+=1:End Sub ' CORRECT MAIN SHIFTS FLAGS
Sub UFQIR():*PMCUR+=IUFQIR:PMCUR+=1:End Sub ' SET PV AS IFF1  

' Z80 TRICKY OPS
Sub UBCDPV():*PMCUR+=IUBCDPV:PMCUR+=1:End Sub ' DECREASE BC, SET PV IF NONZERO, ALL xxIR USE THIS 
Sub ULTSADD():*PMCUR+=IULTSADD:PMCUR+=1:End Sub ' $ CALC LOW BYTE
Sub UOSADDC():*PMCUR+=IUOSADDC:PMCUR+=1:End Sub' $ CALC HIGH BYTE
Sub ULANLL():*PMCUR+=IULANLL:PMCUR+=1:End Sub ' NIBBLE TOSS
Sub ULTNLL():*PMCUR+=IULTNLL:PMCUR+=1:End Sub
Sub ULANLH():*PMCUR+=IULANLH:PMCUR+=1:End Sub
Sub ULTNHL():*PMCUR+=IULTNHL:PMCUR+=1:End Sub
Sub UORVN():*PMCUR+=IUORVN:PMCUR+=1:End Sub' REVERSE NIBBLES
Sub UAPCI():::*PMCUR+=IUAPCI:PMCUR+=1:::End Sub ' DUAL HALF-T OP, SET ADDR BY PC, AND INCREASE PC VIA ADDER
Sub UNOP()::::*PMCUR+=IUNOP:PMCUR+=1::::End Sub' DESIGNATE Z80 T-STATE WITH NO "SIGNIFICANT" EFFECT, DETAILS UNCLEAR
Sub UFET()::::*PMCUR+=IUFET:PMCUR+=1::::End Sub' BYTE FETCH TO DECODER LATCH, HERE CYCLE GET EXACT UOP SEQ USING "ROOT"
Sub UAIRIUF():*PMCUR+=IUAIRIUF:PMCUR+=1:End Sub ' DUAL HALF-T OP, SET ADDR BY IR, SET REFRESH, INCREASE R AND UPDATE F FROM ALU T3 LATE
Sub URALF()::*PMCUR+=IURALF:PMCUR+=1::::End Sub ' DUAL HALF-T OP, SET REFRESH, UPDATE ALU-F FROM F T4 LATE
Sub UALF()::*PMCUR+=IUALF:PMCUR+=1::::End Sub ' UPDATE ALU-F FROM F
Sub UHALT()::*PMCUR+=IUHALT:PMCUR+=1::::End Sub ' HALT

' LOAD W AND Z WITH
Sub ULWE():*PMCUR+=IULWE:PMCUR+=1:End Sub ' LD W,A ERRATIC MOD 
Sub ULWA():*PMCUR+=IULWA:PMCUR+=1:End Sub ' LD W,A REGULAR 
Sub ULWT():*PMCUR+=IULWT:PMCUR+=1:End Sub ' LD W,T 
Sub ULZT():*PMCUR+=IULZT:PMCUR+=1:End Sub ' LD Z,T 
Sub ULZN(RN As ULong):*PMCUR+=IULZN+(RN Shl 9):PMCUR+=1:End Sub ' LD Z,RST** 
Sub ULW0():*PMCUR+=IULW0:PMCUR+=1:End Sub ' LD W,0 FOR RST**  

' INTERRUPTS IR, IFFs
Sub DEFINT0():INT0=PMCUR-PMOS:End Sub
Sub DEFINT1():INT1=PMCUR-PMOS:End Sub
Sub DEFINT2():INT2=PMCUR-PMOS:End Sub
Sub UIFF()::*PMCUR+=IUIFF:PMCUR+=1:End Sub ' RESET IFF1, IFF2 INTACT
Sub UIMRQ()::*PMCUR+=IUIMRQ:PMCUR+=1:End Sub ' SET IORQ FOR PERIPHERAL TO FETCH BYTE NEXT CYCLE
Sub UIMFET()::*PMCUR+=IUIMFET:PMCUR+=1:End Sub ' RECEIVE TO T - INT VECTOR
Sub ULWI()::*PMCUR+=IULWI:PMCUR+=1:End Sub ' LD W,I
Sub UDFF():*PMCUR+=IUDFF:PMCUR+=1:End Sub ' UNSET IFF1 AND IFF2
Sub USFF():*PMCUR+=IUSFF:PMCUR+=1:End Sub ' SET
Sub UCFF():*PMCUR+=IUCFF:PMCUR+=1:End Sub ' COPY IFF2 TO IFF1
Sub UIM0():*PMCUR+=IUIM0:PMCUR+=1:End Sub ' SET INTERRUPT MODE
Sub UIM1():*PMCUR+=IUIM1:PMCUR+=1:End Sub ' SET INTERRUPT MODE
Sub UIM2():*PMCUR+=IUIM2:PMCUR+=1:End Sub ' SET INTERRUPT MODE
Sub ULLRI():*PMCUR+=IULLRI:PMCUR+=1:End Sub ' LD ALU,I 
Sub ULLRR():*PMCUR+=IULLRR:PMCUR+=1:End Sub ' LD ALU,R 
Sub ULRIA():*PMCUR+=IULRIA:PMCUR+=1:End Sub ' LD I,A 
Sub ULRRA():*PMCUR+=IULRRA:PMCUR+=1:End Sub ' LD R,A 

' LOAD T-LATCH WITH
Sub ULTR(RN As ULong):*PMCUR+=IULTR+(RN Shl 9):PMCUR+=1:End Sub' INTERNAL LD T,R
Sub ULTXH():*PMCUR+=IULTXH:PMCUR+=1:End Sub 
Sub ULTXL():*PMCUR+=IULTXL:PMCUR+=1:End Sub 
Sub ULTYH():*PMCUR+=IULTYH:PMCUR+=1:End Sub 
Sub ULTYL():*PMCUR+=IULTYL:PMCUR+=1:End Sub 

' LOAD REGISTER WITH T-LATCH
Sub ULRT(RN As ULong):*PMCUR+=IULRT+(RN Shl 9):PMCUR+=1:End Sub' INTERNAL LD R,T
Sub ULRBT():*PMCUR+=IULRBT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRCT():*PMCUR+=IULRCT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRDT():*PMCUR+=IULRDT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRET():*PMCUR+=IULRET:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRHT():*PMCUR+=IULRHT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRLT():*PMCUR+=IULRLT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRAT():*PMCUR+=IULRAT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULRFT():*PMCUR+=IULRFT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULSLT():*PMCUR+=IULSLT:PMCUR+=1:End Sub ' LD REGISTER,T SP 
Sub ULSHT():*PMCUR+=IULSHT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULXLT():*PMCUR+=IULXLT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULXHT():*PMCUR+=IULXHT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULYLT():*PMCUR+=IULYLT:PMCUR+=1:End Sub ' LD REGISTER,T 
Sub ULYHT():*PMCUR+=IULYHT:PMCUR+=1:End Sub ' LD REGISTER,T 

' DIRECT 16BIT REGISTER INC/DEC VIA ADDER
Sub UADIWZ():*PMCUR+=IUADIWZ:PMCUR+=1:End Sub ' PRELOADED ADDER INCREASE ADD AND STORE TO RR
Sub UADDWZ():*PMCUR+=IUADDWZ:PMCUR+=1:End Sub ' PRELOADED ADDER DECREASE ADD AND STORE TO RR
'Sub UADIPC():*PMCUR+=IUADIPC:PMCUR+=1:End Sub ' 
Sub UWZI():*PMCUR+=IUWZI:PMCUR+=1:End Sub ' INCREASE RR VIA ADDER 
Sub UBCI():*PMCUR+=IUBCI:PMCUR+=1:End Sub ' INCREASE RR VIA ADDER 
Sub UDEI():*PMCUR+=IUDEI:PMCUR+=1:End Sub ' INCREASE RR VIA ADDER 
Sub UHLI():*PMCUR+=IUHLI:PMCUR+=1:End Sub ' INCREASE RR VIA ADDER 
Sub USPI():*PMCUR+=IUSPI:PMCUR+=1:End Sub ' INCREASE RR VIA ADDER 
Sub UADI():*PMCUR+=IUADI:PMCUR+=1:End Sub ' INCREASE ADDER
Sub UIXI():*PMCUR+=IUIXI:PMCUR+=1:End Sub ' INCREASE 
Sub UIYI():*PMCUR+=IUIYI:PMCUR+=1:End Sub ' INCREASE 
Sub UWZD():*PMCUR+=IUWZD:PMCUR+=1:End Sub ' DECREASE RR VIA ADDER 
Sub UBCD():*PMCUR+=IUBCD:PMCUR+=1:End Sub ' DECREASE RR VIA ADDER 
Sub UDED():*PMCUR+=IUDED:PMCUR+=1:End Sub ' DECREASE RR VIA ADDER 
Sub UHLD():*PMCUR+=IUHLD:PMCUR+=1:End Sub ' DECREASE RR VIA ADDER 
Sub USPD():*PMCUR+=IUSPD:PMCUR+=1:End Sub ' DECREASE RR VIA ADDER 
Sub UADD():*PMCUR+=IUADD:PMCUR+=1:End Sub ' DECREASE ADDER 
Sub UIXD():*PMCUR+=IUIXD:PMCUR+=1:End Sub ' DECREASE  
Sub UIYD():*PMCUR+=IUIYD:PMCUR+=1:End Sub ' DECREASE  

' LOAD ADDER WITH
Sub ULDHL():*PMCUR+=IULDHL:PMCUR+=1:End Sub ' LD ADDER,RR 
Sub ULDWZ():*PMCUR+=IULDWZ:PMCUR+=1:End Sub ' LD ADDER,RR 
Sub ULDPC():*PMCUR+=IULDPC:PMCUR+=1:End Sub ' LD ADDER,RR 
Sub ULDIX():*PMCUR+=IULDIX:PMCUR+=1:End Sub ' LD ADDER,RR 
Sub ULDIY():*PMCUR+=IULDIY:PMCUR+=1:End Sub ' LD ADDER,RR 
'Sub ULDBC():*PMCUR+=IULDBC:PMCUR+=1:End Sub ' LD ADDER,RR 
'Sub ULDDE():*PMCUR+=IULDDE:PMCUR+=1:End Sub ' LD ADDER,RR 
'Sub ULDSP():*PMCUR+=IULDSP:PMCUR+=1:End Sub ' LD ADDER,RR 

' LOAD RR PAIRS WITH ADDER
Sub ULBCD():*PMCUR+=IULBCD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULDED():*PMCUR+=IULDED:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULHLD():*PMCUR+=IULHLD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULWZD():*PMCUR+=IULWZD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULSPD():*PMCUR+=IULSPD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULPCD():*PMCUR+=IULPCD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULIXD():*PMCUR+=IULIXD:PMCUR+=1:End Sub ' LD RR,ADDER 
Sub ULIYD():*PMCUR+=IULIYD:PMCUR+=1:End Sub ' LD RR,ADDER 

' LOAD ALU-WITH GROUP
Sub ULLR(RN As ULong):*PMCUR+=IULLR+(RN Shl 9):PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRB():*PMCUR+=IULLRB:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRC():*PMCUR+=IULLRC:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRD():*PMCUR+=IULLRD:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRE():*PMCUR+=IULLRE:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRH():*PMCUR+=IULLRH:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRL():*PMCUR+=IULLRL:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRA():*PMCUR+=IULLRA:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRT():*PMCUR+=IULLRT:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRZ():*PMCUR+=IULLRZ:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLRW():*PMCUR+=IULLRW:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLXL():*PMCUR+=IULLXL:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLXH():*PMCUR+=IULLXH:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLYL():*PMCUR+=IULLYL:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLYH():*PMCUR+=IULLYH:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLPL():*PMCUR+=IULLPL:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 
Sub ULLPH():*PMCUR+=IULLPH:PMCUR+=1:End Sub ' LD ALU LEFT OPERAND R 

' LOAD REGISTER WITH ALU GROUP
Sub ULRL(RN As ULong):*PMCUR+=IULRL+(RN Shl 9):PMCUR+=1:End Sub ' LD R,ALU RESULT 
Sub ULRBL():*PMCUR+=IULRBL:PMCUR+=1:End Sub ' LD R,ALU RESULT 
Sub ULRCL():*PMCUR+=IULRCL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRDL():*PMCUR+=IULRDL:PMCUR+=1:End Sub ' LD R,ALU RESULT 
Sub ULREL():*PMCUR+=IULREL:PMCUR+=1:End Sub ' LD R,ALU RESULT 
Sub ULRHL():*PMCUR+=IULRHL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRLL():*PMCUR+=IULRLL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRAL():*PMCUR+=IULRAL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRTL():*PMCUR+=IULRTL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRZL():*PMCUR+=IULRZL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULRWL():*PMCUR+=IULRWL:PMCUR+=1:End Sub ' LD R,ALU RESULT
Sub ULXLL():*PMCUR+=IULXLL:PMCUR+=1:End Sub  
Sub ULXHL():*PMCUR+=IULXHL:PMCUR+=1:End Sub  
Sub ULYLL():*PMCUR+=IULYLL:PMCUR+=1:End Sub  
Sub ULYHL():*PMCUR+=IULYHL:PMCUR+=1:End Sub  

' MEMORY AND IO
Sub UTRD():::*PMCUR+=IUTRD:PMCUR+=1::::::End Sub ' ACTUAL MEM READ
Sub UDOW():::*PMCUR+=IUDOW:PMCUR+=1::::::End Sub ' ACTUAL MEM WRITE
Sub UPOW():::*PMCUR+=IUPOW:PMCUR+=1::::::End Sub ' PORT ACTUAL WRITE 
Sub UTIO():::*PMCUR+=IUTIO:PMCUR+=1::::::End Sub ' PORT ACTUAL READ
Sub URCW():::*PMCUR+=IURCW:PMCUR+=1::::::End Sub ' READ CYCLE WAIT
Sub UWCW():::*PMCUR+=IUWCW:PMCUR+=1::::::End Sub ' WRITE CYCLE WAIT

' SET ADDRESS BUS WITH
Sub UADBC():::*PMCUR+=IUADBC:PMCUR+=1::::::End Sub ' SET ADDR BY BC AND LOAD ADDER WITH
Sub UADDE():::*PMCUR+=IUADDE:PMCUR+=1::::::End Sub ' SET ADDR BY DE AND LOAD ADDER WITH
Sub UAHL():::*PMCUR+=IUAHL:PMCUR+=1::::::End Sub ' SET ADDR BY HL
Sub UAWZ():::*PMCUR+=IUAWZ:PMCUR+=1::::::End Sub ' SET ADDR BY WZ
Sub UAAD():::*PMCUR+=IUAAD:PMCUR+=1::::::End Sub ' SET ADDR BY ADDER
Sub UADSP():::*PMCUR+=IUADSP:PMCUR+=1::::::End Sub ' SET ADDR BY SP AND LOAD ADDER WITH
Sub UAIX():::*PMCUR+=IUAIX:PMCUR+=1::::::End Sub ' SET ADDR BY SP
Sub UAIY():::*PMCUR+=IUAIY:PMCUR+=1::::::End Sub ' SET ADDR BY SP

' SET DATA OUTPUT LATCH WITH
Sub URWR(RN As ULong):*PMCUR+=IURWR+(RN Shl 9):PMCUR+=1:End Sub' SET DATA BUS WITH R
Sub UAWR():*PMCUR+=IUAWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UTWR():*PMCUR+=IUTWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UOWR():*PMCUR+=IUOWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UNWR():*PMCUR+=IUNWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH NULL
Sub UFWR():*PMCUR+=IUFWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UBWR():*PMCUR+=IUBWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UCWR():*PMCUR+=IUCWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UDWR():*PMCUR+=IUDWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UEWR():*PMCUR+=IUEWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub UHWR():*PMCUR+=IUHWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub ULWR():*PMCUR+=IULWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R
Sub USLWR():*PMCUR+=IUSLWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub USHWR():*PMCUR+=IUSHWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UPLWR():*PMCUR+=IUPLWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UPHWR():*PMCUR+=IUPHWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UXLWR():*PMCUR+=IUXLWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UXHWR():*PMCUR+=IUXHWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UYLWR():*PMCUR+=IUYLWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP
Sub UYHWR():*PMCUR+=IUYHWR:PMCUR+=1:End Sub ' SET DATA BUS LATCH WITH R SP

' EXCHANGES
Sub UEXX():*PMCUR+=IUEXX:PMCUR+=1:End Sub
Sub UEXA():*PMCUR+=IUEXA:PMCUR+=1:End Sub
Sub UXHD():*PMCUR+=IUXHD:PMCUR+=1:End Sub

' SINGLE OPERAND ALU OPERATION 
Sub UOINC():*PMCUR+=IUOINC:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UODEC():*PMCUR+=IUODEC:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UORLC():*PMCUR+=IUORLC:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UORRC():*PMCUR+=IUORRC:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UORL()::*PMCUR+=IUORL:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UORR()::*PMCUR+=IUORR:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSLA():*PMCUR+=IUOSLA:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSRA():*PMCUR+=IUOSRA:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSRL():*PMCUR+=IUOSRL:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSLL():*PMCUR+=IUOSLL:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UONEG():*PMCUR+=IUONEG:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UODAA():*PMCUR+=IUODAA:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOCPL():*PMCUR+=IUOCPL:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSCF():*PMCUR+=IUOSCF:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOCCF():*PMCUR+=IUOCCF:PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOBIT(RN As ULong):*PMCUR+=IUOBIT+(RN Shl 9):PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UOSET(RN As ULong):*PMCUR+=IUOSET+(RN Shl 9):PMCUR+=1:End Sub' SINGLE ALU OPERATION
Sub UORES(RN As ULong):*PMCUR+=IUORES+(RN Shl 9):PMCUR+=1:End Sub' SINGLE ALU OPERATION

' ALU OPERATION WITH IMMEDIATE RIGHT OPERAND READ AND ACT 
Sub ULRADD(RN As ULong):*PMCUR+=IULRADD+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRADC(RN As ULong):*PMCUR+=IULRADC+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRSUB(RN As ULong):*PMCUR+=IULRSUB+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRSBC(RN As ULong):*PMCUR+=IULRSBC+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRXOR(RN As ULong):*PMCUR+=IULRXOR+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRAND(RN As ULong):*PMCUR+=IULRAND+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULROR(RN As ULong):*PMCUR+=IULROR+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULRCP(RN As ULong):*PMCUR+=IULRCP+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULTADD():*PMCUR+=IULTADD:PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND T
Sub ULTADC():*PMCUR+=IULTADC:PMCUR+=1:End Sub
Sub ULTSUB():*PMCUR+=IULTSUB:PMCUR+=1:End Sub
Sub ULTSBC():*PMCUR+=IULTSBC:PMCUR+=1:End Sub
Sub ULTXOR():*PMCUR+=IULTXOR:PMCUR+=1:End Sub
Sub ULTAND():*PMCUR+=IULTAND:PMCUR+=1:End Sub
Sub ULTOR():*PMCUR+=IULTOR:PMCUR+=1:End Sub
Sub ULTCP():*PMCUR+=IULTCP:PMCUR+=1:End Sub
Sub ULXADD(RN As ULong):*PMCUR+=IULXADD+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXADC(RN As ULong):*PMCUR+=IULXADC+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXSUB(RN As ULong):*PMCUR+=IULXSUB+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXSBC(RN As ULong):*PMCUR+=IULXSBC+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXXOR(RN As ULong):*PMCUR+=IULXXOR+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXAND(RN As ULong):*PMCUR+=IULXAND+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXOR(RN As ULong):*PMCUR+=IULXOR+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R
Sub ULXCP(RN As ULong):*PMCUR+=IULXCP+(RN Shl 9):PMCUR+=1:End Sub' ALU ACT WITH RIGHT OPERAND R

' FLOW CONTROL
Sub DONE():*PMCUR+=IDONE:PMCUR+=1:End Sub ' MARK END OF UOP
Sub PAR()::*PMCUR+=IPAR:PMCUR+=1:End Sub ' NEXT UOP IS PARALLEL, ALLOW MULTIPLE USE BEFORE UOP
Sub TRI()::*PMCUR+=ITRI:PMCUR+=1:End Sub ' NEXT TWO UOP ARE PARALLEL
Sub EXT()::*PMCUR+=IEXT:PMCUR+=1:End Sub ' MARK END OF UOP AND RUN ALL SEQ UOP IN PARALLEL, USUALLY LATE 1T AND 2T ALUOP AND FLUSH, NO MORE
Sub UPFDD():*PMCUR+=IUPFDD:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX DD, SETUP TIME UNCLEAR, MUST BE AS FAST AS "DI" ACT AT T3-ST0
Sub UPFFD():*PMCUR+=IUPFFD:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX FD
Sub UPFCB():*PMCUR+=IUPFCB:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX CB
Sub UPFED():*PMCUR+=IUPFED:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX ED 
Sub UPFDC():*PMCUR+=IUPFDC:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX DDCB 
Sub UPFFC():*PMCUR+=IUPFFC:PMCUR+=1:End Sub ' SET DECODER FLAG TO PFX FDCB 
Sub USEWZ():*PMCUR+=SIGUWZ:PMCUR+=1:End Sub ' STATE THAT NEXT M1 SET ADDR BY 
Sub USEHL():*PMCUR+=SIGUHL:PMCUR+=1:End Sub ' STATE THAT NEXT M1 SET ADDR BY 
Sub USEIX():*PMCUR+=SIGUIX:PMCUR+=1:End Sub ' STATE THAT NEXT M1 SET ADDR BY 
Sub USEIY():*PMCUR+=SIGUIY:PMCUR+=1:End Sub ' STATE THAT NEXT M1 SET ADDR BY 
Sub SKIP6PE():*PMCUR+=SIGSK6:PMCUR+=1:End Sub ' SKIP 6 UOPS TO EXECUTE LDIRs 
Sub SKIP6PEZ():*PMCUR+=SIGSK6Z:PMCUR+=1:End Sub ' SKIP 6 UOPS TO EXECUTE CPIRs
Sub SKIP6Z():*PMCUR+=ISKIP6Z:PMCUR+=1:End Sub ' SKIP 6 UOPS TFOR DJNZ
Sub ECCZ()::*PMCUR+=IECCZ:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCNZ():*PMCUR+=IECCNZ:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCC()::*PMCUR+=IECCC:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCNC():*PMCUR+=IECCNC:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCPE():*PMCUR+=IECCPE:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCPO():*PMCUR+=IECCPO:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCM()::*PMCUR+=IECCM:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub ECCP()::*PMCUR+=IECCP:PMCUR+=1:End Sub ' UOP SEQ ENDS IMMED IF CC SET TO AS
Sub SWCCNZ():*PMCUR+=ISWCCNZ:PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCZ()::*PMCUR+=ISWCCZ::PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCNC():*PMCUR+=ISWCCNC:PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCC()::*PMCUR+=ISWCCC::PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCPE():*PMCUR+=ISWCCPE:PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCPO():*PMCUR+=ISWCCPO:PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCP()::*PMCUR+=ISWCCP::PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ
Sub SWCCM()::*PMCUR+=ISWCCM::PMCUR+=1:End Sub ' CONDITIONALLY SET USEWZ


' - - - - - - - - - ALL CONSTRUCTED ACCORDING TO VISUAL Z80 REMIX TRACELOGS, NMOS Z80 VERSION - - - - - - - - - - - - - - - -

Sub MICROCODEANDLUT () STATIC
Static As Const ULong URB=7-0,URC=7-1,URD=7-2,URE=7-3,URH=7-4,URL=7-5,URA=7-7,USH=5,USL=4,UXH=3,UXL=2,UYH=1,UYL=0
Static As ULong TT1,MT1,MT2,MT3,MT4,REGL,REGR,REG,LALU,HALU,BCNT,ALUL,ALUR,DAAC,DAAH,DAAN,LDAA,HDAA,DAAHI,HDAAC,LDAAO,CORRH,PEW,RESF
Static As Unsigned Byte PE

PMOS=GETPTR(UOPMAX*4,4095)			' U32PTR MICRO-OPS SEQUENCES 
PROOT=GETPTR(256*PAGEMAX*8,31) 	' U64PTR ROOT INDEX, CONTAIN PTRS TO PMOS DIRECTLY
PADD=GETPTR(65536*2,31)				' BYTEPTR ADD/ADC FLAGs LUT, LEFT OPERAND IS LOW BYTE, RIGHT OPERAND IS HIGH BYTE AND EXTRA SHL NEEDED 
PSUB=GETPTR(65536*2,31)				' BYTEPTR SUB/SBC FLAGs LUT, LEFT OPERAND IS LOW BYTE, RIGHT OPERAND IS HIGH BYTE AND EXTRA SHL NEEDED
PAND=GETPTR(65536,31)				' BYTEPTR AND FLAGs LUT, L-LOW, R-HIGH, NO EXTRA SHL
PXOR=GETPTR(65536,31)				' BYTEPTR XOR
PPOR=GETPTR(65536,31)				' BYTEPTR OR 
PPCP=GETPTR(65536,31)				' BYTEPTR CP 
PRLC=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PRRC=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PRL=GETPTR(256*4,31)					' BYTEPTR NC/VAL-C/VAL AND NC/F-C/F QUAD BYTE
PRR=GETPTR(256*4,31)					' BYTEPTR NC/VAL-C/VAL AND NC/F-C/F QUAD BYTE
PSLA=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PSRA=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PSLL=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PSRL=GETPTR(256*2,31)				' BYTEPTR TWO VALUE RESULT-FLAGS
PDAA=GETPTR(65536*2,31)				' BYTEPTR VAL-FLG TO VAL-FLG 
IORD=GETPTR(65536,31)				' BYTEPTR IORQ READS
IOWR=GETPTR(65536,31)				' BYTEPTR IORQ WRITES
PFLAG=GETPTR(256,31)					' BYTEPTR PARITY LUT
PMEM=GETPTR(MEMMAX,1023) ' BYTEPTR MAIN Z80 MEMORY AFTER ROOT AND LUTS 

' SETUP ALTERNATE POINTERS
LUT=PADD:RLC=PRLC:RRC=PRRC:RL=PRL:RR=PRR:SLA=PSLA:SRA=PSRA:SLL=PSLL:SRL=PSRL:DAA=PDAA
LEXT=@EXTL(0)' STATE SWITCH AND TAK COUNT REFERENCE LUT
' EVEN STATES OF MAIN, EXT: WITH MAIN INTERLEAVE AND FIRST PAR:  DO COUNT TAK
'TAKL(0)=1:TAKL(4)=1:TAKL(10)=1

EXTL(0)=0+32 ' SO 4 SKIP ONE CYCLE NO ACTION


' EXT 2 MEAN TO ENABLE EXT FIRST, ALL AND=1 ACT, MUST SKIP ONE CYCLE
EXTL(2)=4+32 ' SO 4 SKIP ONE CYCLE NO ACTION
EXTL(4)=1 ' SO 1 DOES SINGLE ACTION
EXTL(1)=4+32 ' CYCLE 1/4 DO OVERLAP
' EXT: HERE  3 MEAN ACT TWICE
EXTL(3)=5 ' ENABLE SECOND ACT
EXTL(5)=7 ' GOTO USUAL
EXTL(7)=4+32 ' GOTO USUAL
' PAR: HERE SO ZEROBIT MAKE ACT MAIN NEED TO DO PAR RUN MAIN TWICE
EXTL(6)=8 ' ACT TWICE
EXTL(8)=10+32  
EXTL(10)=0+32  
EXTL(11)=0+32 ' lets done be xtra state  
EXTL(12)=0+32 ' TAK SKIPPERS MUST HERE  
EXTL(14)=6 ' TRI: EXTRA STAGE FOR MAIN  
EXTL(15)=3 ' TRI: EXTRA STAGE FOR EXT  

INTL=71680:INTC=INT1:XMEM=PMEM:PMCUR=PMOS ' PENTAGON CONFIG
For F1=0 To (256*PAGEMAX)-1:*(PROOT+F1)=PMOS:Next' SETUP ALL ROOTS WITH NOP OPCODE
For F1=0 To 65535:*(IORD+F1)=255:Next ' SET ALL PORTS READ TO &HFF

' - - - - - ALL ALU LUTS DONE HERE - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

' R REGISTER INCREASE LUT
For T1=0 To 127:LREF(T1)=(T1+1) And 127:LREF(T1+128)=128+((T1+1) And 127):NEXT

'- - - - PARITY FLAG PFLAG(0..255)=0/4, 4 IS BIT WEIGHT OF P/V IN F FLAG
For T1 = 0 To 255: T2=T1:T3=0:
T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):T2 Shr =1
T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):T2 Shr =1:T3+=(T2 And 1):
T3 And= 1:T3 Xor= 1:*(PFLAG+T1)=T3 Shl 2:Next ' PARITY IS SET WHEN BIT COUNT EVEN, WRITE "4"

For ALUL=0 To 255:For ALUR=0 To 255 ' CYCLE ALL 65536 VARIATIONS
' - - DAA - - SZ5*3P-*, | 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
DAAC=ALUR And XFC:DAAN=(ALUR And XFN) Shr 1:DAAH=(ALUR And XFH) Shr 4:LDAA=ALUL And 15:LDAAO=LDAA:HDAA=(ALUL Shr 4) And 15:RESF=0
' LOW NIBBLE
If DAAN=0 And LDAA>9 Then LDAA+=&H06:HDAA+=1:RESF OR= XFH 
If DAAN=0 And LDAA<10 And DAAH=1 Then LDAA+=&H06:
If DAAN=1 And (LDAA>9 Or DAAH=1) Then LDAA-=&H06:DAAHI=1 Else DAAHI=0':RESF+=XFH SET ALTERNATE H
If DAAN=1 And LDAA>9  Then HDAA-=1:RESF+=XFH ' SET H HERE OR NOT
LDAA And= 15:HDAAC=HDAA-&H06:CORRH=0
' HIGH NIBBLE
If DAAN=0 And (HDAA>9 Or DAAC=1) Then HDAA+=&H06:RESF OR=XFC 
If DAAN=1 And DAAC=1 Then CORRH=1
If DAAN=1 And DAAC=0 And DAAHI=1 And LDAA>9 And HDAA>8 And HDAA<15 Then CORRH=1
If DAAN=1 And DAAC=0 And DAAHI=1 And LDAA<10 And HDAA>9 Then CORRH=1 
If DAAN=1 And DAAC=0 And DAAHI=1 And LDAA<10 And HDAA=9 And HDAAC<>3 Then CORRH=1 
If DAAN=1 And DAAC=0 And DAAHI=1 And LDAA<10 And HDAA=9 And HDAAC=3 And DAAH=0 Then CORRH=1 
If DAAN=1 And DAAC=0 And DAAHI=1 And LDAA<10 And HDAA=9 And HDAAC=3 And DAAH=1 And LDAAO>9 Then CORRH=1 
If DAAN=1 And DAAC=0 And DAAHI=0 And LDAA<10 And HDAA>9 Then CORRH=1
If DAAN=1 And DAAC=0 And DAAHI=0 And LDAA<10 And HDAA=9 And HDAAC<>3 Then CORRH=1
If CORRH Then HDAA-=&H06:RESF Or=XFC
PE=LDAA+((HDAA And 15) Shl 4):If PE=0 Then RESF+=XFZ ' SET Z
RESF+=(ALUR And XFN)+(PE And(XFS+XF5+XF3))+*(PFLAG+PE) ' GET OLD N,S,5,3 LUT PARITY
*(PDAA+(ALUR Shl 9)+(ALUL Shl 1))=PE:*(PDAA+(ALUR Shl 9)+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - ADD - - ,| 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
PEW=ALUL+ALUR:PE=PEW:RESF=PE And (XFS+XF5+XF3):If PE=0 Then RESF+=XFZ ' COPY BIT 7(S),5 AND 3, SET Z, For ADD instructions, N is cleared to 0
If PEW>255 Then RESF+=XFC ' SET CARRY
PE=((ALUL And 15)+(ALUR And 15)):If PE>15 Then RESF+=XFH 'HAVE LOW NIBBLE ALU CARRY SO SET H
S1=ALUL And XFS:S2=ALUR And XFS:S3=PEW And XFS 'GET ALL SIGNS, The Parity/Overflow (P/V) Flag for addition, operands with different signs never cause overflow.
If (S1=0) And (S2=0) And (S3=XFS) Then RESF+=XFP 'SAME ++SIGNS AND RESULT - SO SET, When operands HAVE SAME signs and ADD results IN a different sign, the Overflow Flag is set
If (S1=XFS) And (S2=XFS) And (S3=0) Then RESF+=XFP 'SAME --SIGNS AND RESULT + SO SET
*(PADD+(ALUR Shl 9)+(ALUL Shl 1))=RESF ' LUT DONE
' - - ADC - - CARRY SET VERSION, IS LEFT+RIGHT+1
PEW=ALUL+ALUR+1:PE=PEW:RESF=PE And (XFS+XF5+XF3):If PE=0 Then RESF+=XFZ
If PEW>255 Then RESF+=XFC
PE=((ALUL And 15)+(ALUR And 15))+1:If PE>15 Then RESF+=XFH
S1=ALUL And XFS:S2=ALUR And XFS:S3=PEW And XFS
If (S1=0) And (S2=0) And (S3=XFS) Then RESF+=XFP
If (S1=XFS) And (S2=XFS) And (S3=0) Then RESF+=XFP
*(PADD+(ALUR Shl 9)+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - SUB - - , | 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
PEW=ALUL-ALUR:PE=PEW:RESF=(PE And (XFS+XF5+XF3))+XFN:If PE=0 Then RESF+=XFZ ' COPY BIT 7(S),5 AND 3, SET Z, For SUB instructions, N is set to 1.
If PEW>255 Then RESF+=XFC ' SET CARRY
PE=((ALUL And 15)-(ALUR And 15)): If PE>15 Then RESF+=XFH 'HAVE LOW NIBBLE ALU CARRY SET,SO SET H, SAME AS ADD
S1=ALUL And XFS:S2=ALUR And XFS:S3=PEW And XFS 'GET ALL SIGNS, The P/V Flag for subtraction, overflow can occur for operands of unalike signs. Operands of alike signs never cause overflow
If (S1=0) And (S2=XFS) And (S3=XFS) Then RESF+=XFP 'SIGNS ARE +- AND RESULT - SET OVF, IF THE RESULT sign has changed from a positive to a negative VS ALU-LEFT , resulting in an incorrect difference; the Overflow Flag is set. 
If (S1=XFS) And (S2=0) And (S3=0) Then RESF+=XFP 'SIGNS ARE -+ AND RESULT + SET OVF
*(PSUB+(ALUR Shl 9)+(ALUL Shl 1))=RESF ' LUT DONE
' - - SBC - - CARRY SET VERSION, IS LEFT-RIGHT-1
PEW=ALUL-ALUR-1:PE=PEW:RESF=(PE And (XFS+XF5+XF3))+XFN:If PE=0 Then RESF+=XFZ
If PEW>255 Then RESF+=XFC
PE=((ALUL And 15)-(ALUR And 15))-1: If PE>15 Then RESF+=XFH
S1=ALUL And XFS:S2=ALUR And XFS:S3=PEW And XFS
If (S1=0) And (S2=XFS) And (S3=XFS) Then RESF+=XFP
If (S1=XFS) And (S2=0) And (S3=0) Then RESF+=XFP
*(PSUB+(ALUR Shl 9)+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - CP ALUOP - - AS SUB WITH EXTRA QUIRKS  
PEW=ALUL-ALUR:PE=PEW:RESF=(PE And XFS)+(ALUR And (XF5+XF3))+XFN:If PE=0 Then RESF+=XFZ ' COPY BIT 7, SET Z, !!! 5,3 ARE FROM RIGHT OPERAND, AND SET N
If PEW>255 Then RESF+=XFC
PE=((ALUL And 15)-(ALUR And 15)):If PE>15 Then RESF+=XFH
S1=ALUL And XFS:S2=ALUR And XFS:S3=PEW And XFS
If (S1=0) And (S2=XFS) And (S3=XFS) Then RESF+=XFP
If (S1=XFS) And (S2=0) And (S3=0) Then RESF+=XFP
*(PPCP+(ALUR Shl 8)+ALUL)=RESF ' LUT DONE
' - - AND - - AND r SZ513P00, | 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
PE=ALUL And ALUR:RESF=(PE And (XFS+XF5+XF3))+XFH+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,N=0,C=0,H=1, SET Z, LUT FOR PARITY ADD 4 
*(PAND+(ALUR Shl 8)+ALUL)=RESF ' LUT DONE
' - - XOR - -  OR/XOR r SZ503P00, | 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
PE=ALUL Xor ALUR:RESF=(PE And(XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,HNC=0, SET Z, LUT PARITY
*(PXOR+(ALUR Shl 8)+ALUL)=RESF ' LUT DONE
' - - OR  - -  OR/XOR r SZ503P00, | 7 6 5 4 3 2 1 0 || S Z Y H X P N C | S=128, Z=64, F5=32, H=16, F3=8, PV=4, N=2, C=1
PE=ALUL Or ALUR:RESF=(PE And(XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5, HNC=0, SET Z, LUT PARITY
*(PPOR+(ALUR Shl 8)+ALUL)=RESF ' LUT DONE
Next ' HERE WERE CYCLED 256 ALU-RIGHTs
' - - RLC - - CARRY INDEPENDENT ,MAIN SHIFTS RLC/RL/RRC/RR SZ503P0C, SEPARATE VALUE AND FLAG LUTS DUAL VALUE NC FIRST C SECOND
PEW=ALUL Shl 1:If PEW>255 Then RESF=XFC:PEW Or= 1 Else RESF=0 ' SET CARRY AND ROTATE MSB
PE=PEW:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z, LUT PARITY
*(PRLC+(ALUL Shl 1))=PE:*(PRLC+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - RRC - - CARRY INDEPENDENT
PEW=ALUL:If (PEW And 1) Then RESF=XFC:PEW Or= 256 Else RESF=0 ' SET CARRY AND ROTATE MSB
PE=PEW Shr 1:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z, LUT PARITY
*(PRRC+(ALUL Shl 1))=PE:*(PRRC+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - RL - - NC VERSION
PEW=ALUL Shl 1:If PEW>255 Then RESF=XFC Else RESF=0 ' SET CARRY LSB IS ZERO
PE=PEW:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z,LUT PARITY
*(PRL+(ALUL Shl 2))=PE:*(PRL+(ALUL Shl 2)+2)=RESF ' LUT DONE
' - - RL - - C VERSION
PEW=(ALUL Shl 1)+1:If PEW>255 Then RESF=XFC Else RESF=0 ' SET CARRY LSB IS ZERO
PE=PEW:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z,LUT PARITY
*(PRL+(ALUL Shl 2)+1)=PE:*(PRL+(ALUL Shl 2)+3)=RESF ' LUT DONE
' - - RR - - NC VERSION
PEW=ALUL:If (PEW And 1) Then RESF=XFC Else RESF=0 ' SET CARRY MSB IS ZERO
PE=PEW Shr 1:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z, LUT PARITY
 *(PRR+(ALUL Shl 2))=PE:*(PRR+(ALUL Shl 2)+2)=RESF ' LUT DONE
' - - RR - - C VERSION
PEW=ALUL Or 256:If (PEW And 1) Then RESF=XFC Else RESF=0 ' SET CARRY MSB IS SET
PE=PEW Shr 1:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z,LUT PARITY
 *(PRR+(ALUL Shl 2)+1)=PE:*(PRR+(ALUL Shl 2)+3)=RESF ' LUT DONE
' - - SLA - - , SLA IS RLZ 'SZ503P0C
PEW=ALUL Shl 1:If PEW>255 Then RESF=XFC Else RESF=0 ' SET CARRY AND LSB IS ZERO SO SLA/RLZ 
PE=PEW:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 7,5,3,H=0,N=0, SET Z, LUT PARITY
 *(PSLA+(ALUL Shl 1))=PE:*(PSLA+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - SRA - - , SRA IS RRSREP 'SZ503P0C
PEW=ALUL: RESF=PEW And 1:If PEW>127 Then RESF+=XFS:PEW+=256  ' SET CARRY AND S AND REPEAT FUTURE MSB SO SRA/RRSREP 
PE=PEW Shr 1:RESF+=(PE And (XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 5,3,H=0,N=0, SET Z, LUT PARITY
*(PSRA+(ALUL Shl 1))=PE:*(PSRA+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - SLL - - , SLL IS RLT 'SZ503P0C
PEW=(ALUL Shl 1) Or 1:If PEW>255 Then RESF=XFC Else RESF=0 ' SET CARRY AND LSB IS 1 SO SLL/RLT 
PE=PEW:RESF+=(PE And (XFS+XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' SET Z, COPY BIT 7,5,3,H=0,N=0, LUT PARITY
 *(PSLL+(ALUL Shl 1))=PE:*(PSLL+(ALUL Shl 1)+1)=RESF ' LUT DONE
' - - SRL - - SRL IS RRZ 'SZ503P0C
PEW=ALUL:RESF=PEW And 1:PE=PEW Shr 1: ' GET CARRY AND MSB IS ZERO SO SRL/RRZ
RESF+=(PE And (XF5+XF3))+*(PFLAG+PE):If PE=0 Then RESF+=XFZ ' COPY BIT 5,3,S=0,H=0,N=0, SET Z, LUT PARITY
*(PSRL+(ALUL Shl 1))=PE:*(PSRL+(ALUL Shl 1)+1)=RESF ' LUT DONE
Next

' - - - - - - - - MAIN PAGE OPCODES IN ORDER OF APPEARANCE - - - - - - - - - - - - - -  

' NOP
DEFMAIN(&H00):UAPCI:UFET:UAIRIUF:PAR:URALF:DONE
' LD RR,** 
DEFMAIN(&B00000001):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULRCT:::UAPCI:UTRD:::TRI:URCW:ULRBT:DONE ' LD BC,**
DEFMAIN(&B00010001):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULRET:::UAPCI:UTRD:::TRI:URCW:ULRDT:DONE ' LD DE,**
DEFMAIN(&B00100001):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULRLT:::UAPCI:UTRD:::TRI:URCW:ULRHT:DONE ' LD HL,**
DEFMAIN(&B00110001):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULSLT:::UAPCI:UTRD:::TRI:URCW:ULSHT:DONE ' LD SP,**
' LD A,(BC/DE) AND REVERSE
DEFMAIN(&H02):UAPCI:UFET:UAIRIUF:URALF:::PAR:UADBC:UAWR:::PAR:UWCW:UADIWZ:::TRI:UDOW:ULWA:DONE' LD (BC),A
DEFMAIN(&H12):UAPCI:UFET:UAIRIUF:URALF:::PAR:UADDE:UAWR:::PAR:UWCW:UADIWZ:::TRI:UDOW:ULWA:DONE' LD (DE),A
DEFMAIN(&H0A):UAPCI:UFET:UAIRIUF:URALF:UADBC:::PAR:UTRD:UADIWZ:::TRI:URCW:ULRAT:DONE' LD A,(BC)
DEFMAIN(&H1A):UAPCI:UFET:UAIRIUF:URALF:UADDE:::PAR:UTRD:UADIWZ:::TRI:URCW:ULRAT:DONE' LD A,(DE)
' INC/DEC RR 
DEFMAIN(&H03):UAPCI:UFET:UAIRIUF:URALF:UBCI:PAR:UNOP:DONE ' INC BC
DEFMAIN(&H13):UAPCI:UFET:UAIRIUF:URALF:UDEI:PAR:UNOP:DONE ' INC DE
DEFMAIN(&H23):UAPCI:UFET:UAIRIUF:URALF:UHLI:PAR:UNOP:DONE ' INC HL
DEFMAIN(&H33):UAPCI:UFET:UAIRIUF:URALF:USPI:PAR:UNOP:DONE ' INC SP
DEFMAIN(&H0B):UAPCI:UFET:UAIRIUF:URALF:UBCD:PAR:UNOP:DONE ' DEC BC
DEFMAIN(&H1B):UAPCI:UFET:UAIRIUF:URALF:UDED:PAR:UNOP:DONE ' DEC DE
DEFMAIN(&H2B):UAPCI:UFET:UAIRIUF:URALF:UHLD:PAR:UNOP:DONE ' DEC HL
DEFMAIN(&H3B):UAPCI:UFET:UAIRIUF:URALF:USPD:PAR:UNOP:DONE ' DEC SP
' INC/DEC R8
For REGL=0 To 7:If REGL=6 Then ' INC/DEC (HL) 
DEFMAIN(&H34):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOINC:::PAR:UAHL:UOWR:::UWCW:::PAR:UDOW:DONE
DEFMAIN(&H35):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UODEC:::PAR:UAHL:UOWR:::UWCW:::PAR:UDOW:DONE 
Else ' INC/DEC R, INC R _00XXX100 ' DEC R _00XXX101
DEFMAIN(&B00000100+(REGL Shl 3)):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REGL):::EXT:PAR:UOINC:UFQID:::PAR:ULRL(7-REGL):DONE
DEFMAIN(&B00000101+(REGL Shl 3)):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REGL):::EXT:PAR:UODEC:UFQID:::PAR:ULRL(7-REGL):DONE
EndIf:Next 
' LOAD R8
For REG=0 To 7: If REG=6 Then ' LD (HL),*
DEFMAIN(&H36):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:URCW:::PAR:UAHL:UTWR:::UWCW:::PAR:UDOW:DONE
Else ' LD R,* _00XXX110 
DEFMAIN(&B00000110+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:URCW:EXT:UNOP:PAR:ULRT(7-REG):DONE
EndIf:Next
' MAIN SHIFTS
DEFMAIN(&H07):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:UORLC:UFQSH:::PAR:ULRAL:DONE 'RLCA
DEFMAIN(&H0f):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:UORRC:UFQSH:::PAR:ULRAL:DONE 'RRCA
DEFMAIN(&H17):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:UORL:UFQSH:::PAR:ULRAL:DONE 'RLA
DEFMAIN(&H1f):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:UORR:UFQSH:::PAR:ULRAL:DONE 'RRA
' MAIN EXCHANGES
DEFMAIN(&H08):UAPCI:UFET:UAIRIUF:URALF:EXT:UEXA:PAR:UALF:DONE ' EX AF,AF 1T LATE
DEFMAIN(&HD9):UAPCI:UFET:UAIRIUF:URALF:EXT:UNOP:PAR:UEXX:DONE ' EXX 2T LATE
DEFMAIN(&HEB):UAPCI:UFET:UAIRIUF:URALF:EXT:UNOP:PAR:UXHD:DONE ' EX DE,HL LATE 2T
' ADD HL,BC/DE/HL/SP
DEFMAIN(&H09):UAPCI:UFET:UAIRIUF:URALF:::PAR:ULLRL:ULDHL:::PAR:ULRADD(URC):UADIWZ:::ULRLL:UNOP:ULLRH:::PAR:ULRADC(URB):UFQADD:::PAR:ULRHL:DONE ' ADD HL,BC
DEFMAIN(&H19):UAPCI:UFET:UAIRIUF:URALF:::PAR:ULLRL:ULDHL:::PAR:ULRADD(URE):UADIWZ:::ULRLL:UNOP:ULLRH:::PAR:ULRADC(URD):UFQADD:::PAR:ULRHL:DONE ' ADD HL,DE
DEFMAIN(&H29):UAPCI:UFET:UAIRIUF:URALF:::PAR:ULLRL:ULDHL:::PAR:ULRADD(URL):UADIWZ:::ULRLL:UNOP:ULLRH:::PAR:ULRADC(URH):UFQADD:::PAR:ULRHL:DONE ' ADD HL,HL
DEFMAIN(&H39):UAPCI:UFET:UAIRIUF:URALF:::PAR:ULLRL:ULDHL:::PAR:ULXADD(USL):UADIWZ:::ULRLL:UNOP:ULLRH:::PAR:ULXADC(USH):UFQADD:::PAR:ULRHL:DONE ' ADD HL,SP
' ALL JR/DJNZ
DEFMAIN(&H10):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:::UODEC:::PAR:UAPCI:ULRBL:::UTRD:::PAR:URCW:ULLPL:SKIP6Z:::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE ' DJNZ
DEFMAIN(&H18):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLPL:::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE ' JR$
DEFMAIN(&H20):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLPL:ECCZ::::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE 'JR NZ 
DEFMAIN(&H28):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLPL:ECCNZ:::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE 'JR Z
DEFMAIN(&H30):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLPL:ECCC::::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE 'JR NC
DEFMAIN(&H38):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLPL:ECCNC:::ULTSADD:ULRZL:ULLPH:UOSADDC:ULRWL:USEWZ:EXT:PAR:UALF:DONE 'JR C
' LD (**),HL AND REV
DEFMAIN(&H22):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:ULWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UHWR:::UWCW:::PAR:UDOW:DONE ' LD (**),HL
DEFMAIN(&H2A):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULRLT:::UAWZ:UTRD:::TRI:URCW:ULRHT:DONE ' LD HL,(**)
' UNARY ALUOPS
DEFMAIN(&H27):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:UODAA:PAR:ULRAL:DONE ' DAA
DEFMAIN(&H2f):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:UOCPL:PAR:ULRAL:DONE ' CPL
DEFMAIN(&H37):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UOSCF:DONE ' SCF
DEFMAIN(&H3f):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UOCCF:DONE ' CCF
' LD (**),A AND REVERSE 
DEFMAIN(&H32):UAPCI:UFET:UAIRIUF:URALF:::PAR:UAPCI:ULWE:::UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:UAWR:::PAR:UWCW:UWZI:::TRI:UDOW:ULWA:DONE ' LD (**),A
DEFMAIN(&H3A):UAPCI:UFET:UAIRIUF:URALF:::PAR:UAPCI:ULWE:::UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::TRI:URCW:ULRAT:DONE ' LD A,(**)
' LD R,R _01XXXZZZ XXX/ZZZ ARE BCDEHL(HL)A  
For REGL=0 To 7:If REGL=6 Then REGL+=1 Else EndIf:For REGR=0 To 7:If REGR=6 Then REGR+=1
DEFMAIN(&B01000000+(REGL Shl 3)+REGR):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(7-REGR):PAR:ULRT(7-REGL):DONE:Next:Next 
' LD (HL),R _01110ZZZ,  LD R,(HL) _01XXX110 
For REG=0 To 7:If REG=6 Then REG+=1
DEFMAIN(&B01110000+REG):::::::::UAPCI:UFET:UAIRIUF:URALF:PAR:UAHL:URWR(7-REG):UWCW:PAR:UDOW:DONE ' LD (HL),R NOW 
DEFMAIN(&B01000110+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:URCW:EXT:UNOP:PAR:ULRT(7-REG):DONE:Next ' LD R,(HL) NOW
' HALT, SET PIN AN MT4-ST1
DEFMAIN(&H76):UAPCI:UFET:UAIRIUF:::TRI:URALF:UHALT:DONE
' MAIN ALUOP WITH R8
For REGR = 0 To 7:If REGR=6 Then ' ALL ALUOP WITH A,(HL)
DEFMAIN(&H80+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTADD:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&H88+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTADC:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&H90+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTSUB:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&H98+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTSBC:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HA0+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTAND:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HA8+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTXOR:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HB0+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:ULTOR:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HB8+&B110):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAHL:UTRD:::PAR:URCW:PAR:ULTCP:DONE
Else  ' ALL ALUOP WITH A,R
DEFMAIN(&H80+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRADD(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&H88+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRADC(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&H90+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRSUB(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&H98+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRSBC(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&HA0+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRAND(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&HA8+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULRXOR(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&HB0+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULROR(7-REGR):PAR:ULRAL:DONE
DEFMAIN(&HB8+REGR):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:ULRCP(7-REGR):DONE:EndIf:Next
' ALL ALUOP WITH A,*
DEFMAIN(&HC6):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTADD:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HCE):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTADC:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HD6):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTSUB:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HDE):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTSBC:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HE6):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTAND:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HEE):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTXOR:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HF6):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:ULTOR:::EXT:UNOP:PAR:ULRAL:DONE
DEFMAIN(&HFE):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::UAPCI:UTRD:::PAR:URCW:PAR:ULTCP:DONE '
' RETs ALL NZ-Z-NC-C-PO-PE-P-M
DEFMAIN(&HC0):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCZ::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET NZ
DEFMAIN(&HC8):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCNZ:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET Z
DEFMAIN(&HD0):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCC::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET NC
DEFMAIN(&HD8):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCNC:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET C
DEFMAIN(&HE0):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCPE:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET PO
DEFMAIN(&HE8):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCPO:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET PE
DEFMAIN(&HF0):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCM::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET P
DEFMAIN(&HF8):UAPCI:UFET:UAIRIUF:URALF:UNOP:ECCP::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET M
DEFMAIN(&HC9):UAPCI:UFET:UAIRIUF:URALF::::::::::::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:DONE ' RET
' ALL PUSH, PUSH _11XX0101, BC-DE-HL-AF, ALL POP, POP _ 11XX0001, XX BC-DE-HL-AF, AF NEED UALF
DEFMAIN(&HC5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UBWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UCWR:::UWCW:PAR:UDOW:DONE ' PUSH BC
DEFMAIN(&HD5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UDWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UEWR:::UWCW:PAR:UDOW:DONE ' PUSH DE
DEFMAIN(&HE5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:ULWR:::UWCW:PAR:UDOW:DONE ' PUSH HL
DEFMAIN(&HF5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UAWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UFWR:::UWCW:PAR:UDOW:DONE ' PUSH AF
DEFMAIN(&HC1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULRCT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:PAR:ULRBT:DONE ' POP BC
DEFMAIN(&HD1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULRET:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:PAR:ULRDT:DONE ' POP DE
DEFMAIN(&HE1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULRLT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:PAR:ULRHT:DONE ' POP HL
DEFMAIN(&HF1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULRFT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULRAT:::EXT:PAR:UALF:DONE ' POP AF
' JPs ALL
DEFMAIN(&HC2):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCNZ:DONE 'jp nz,$
DEFMAIN(&HCA):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCZ:DONE 'jp z,$
DEFMAIN(&HD2):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCNC:DONE 'jp nc,$
DEFMAIN(&HDA):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCC:DONE 'jp c,$
DEFMAIN(&HE2):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCPO:DONE 'jp po,$
DEFMAIN(&HEA):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCPE:DONE 'jp pe,$
DEFMAIN(&HF2):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCP:DONE 'jp p,$
DEFMAIN(&HFA):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::SWCCM:DONE 'jp m,$
DEFMAIN(&HC3):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::USEWZ:DONE 'jp $
DEFMAIN(&HE9):UAPCI:UFET:UAIRIUF:URALF:USEHL:DONE 'jp (hl)
' ALL CALLS
DEFMAIN(&HC4):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCZ::::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'NZ
DEFMAIN(&HCC):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCNZ:::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'Z
DEFMAIN(&HD4):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCC::::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'NC
DEFMAIN(&HDC):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCNC:::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'C
DEFMAIN(&HE4):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCPE:::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'PO
DEFMAIN(&HEC):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCPO:::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'PE
DEFMAIN(&HF4):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCM::::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'P
DEFMAIN(&HFC):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:ECCP::::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'M
DEFMAIN(&HCD):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::::::::USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::UWCW:UDOW:USEWZ:DONE 'NO CC
' ALL RST NN 00-08-10-18-20-28-30-38H
For REG=0 To 7:DEFMAIN(&HC7+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::PAR:UDOW:ULZN(REG):::PAR:UADSP:UPLWR:::UWCW:::PAR:UDOW:ULW0:USEWZ:DONE:Next
' PREFIXES ALL
DEFMAIN(&HCB):UAPCI:UFET:::PAR:UAIRIUF:UPFCB:::PAR:URALF:DONE ' MAIN PFX
DEFMAIN(&HED):UAPCI:UFET:::PAR:UAIRIUF:UPFED:::PAR:URALF:DONE ' MAIN PFX
DEFMAIN(&HDD):UAPCI:UFET:::PAR:UAIRIUF:UPFDD:::PAR:URALF:DONE ' MAIN PFX
DEFMAIN(&HFD):UAPCI:UFET:::PAR:UAIRIUF:UPFFD:::PAR:URALF:DONE ' MAIN PFX
' EX (SP),HL
DEFMAIN(&HE3):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:UADIWZ:::PAR:URCW:ULZT:::UAAD:UTRD:::PAR:URCW:ULWT:::USPI:::PAR:UADSP:UHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:ULWR:::UWCW:::PAR:UDOW:ULDWZ:::ULHLD:PAR:UNOP:DONE
' OTHER MAIN SINGLETS
DEFMAIN(&HF3):UAPCI:UFET:::PAR:UAIRIUF:UDFF:::PAR:URALF:DONE ' DI AT MT3 DONE
DEFMAIN(&HFB):UAPCI:UFET:UAIRIUF:URALF:EXT:UNOP:PAR:USFF:DONE ' EI 2T LATE IFTT1 SET
DEFMAIN(&HF9):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::ULSPD:PAR:UNOP:DONE ' LD SP,HL
DEFMAIN(&HDB):UAPCI:UFET:UAIRIUF:URALF:::PAR:UAPCI:ULWA:::UTRD:::PAR:URCW:ULZT:::UAWZ:::PAR:URCW:UWZI:::UTIO:::PAR:URCW:PAR:ULRAT:::DONE ' IN A,(*)
DEFMAIN(&HD3):UAPCI:UFET:UAIRIUF:URALF:::PAR:UAPCI:ULWA:::UTRD:::PAR:URCW:ULZT:::PAR:UAWZ:UAWR:::PAR:UWCW:UWZI:::UPOW:PAR:UWCW:DONE ' OUT (*),A

' - - - - - - - - DD AND FD IX/IY EXTENSION OPCODES - - - - - - - - - - - - - -  

For TT1=0 To 255:*(PROOT+XDD+TT1)=*(PROOT+TT1):*(PROOT+XFD+TT1)=*(PROOT+TT1):Next' COPY MAIN ROOT TO DD AND FD

' SETUP DDCB AND FDCB -
DEFDD(&HCB):::UAPCI:UFET:::PAR:UAIRIUF:UPFDC:::PAR:URALF:DONE
DEFFD(&HCB):::UAPCI:UFET:::PAR:UAIRIUF:UPFFC:::PAR:URALF:DONE
' ADD IX,BC/DE/IX/SP, ADD IY,BC/DE/IX/SP
DEFDD(&H09):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIX:::PAR:ULLXL:UADI:::PAR:ULRADD(URC):ULWZD:::ULXLL:UNOP:ULLXH:::PAR:ULRADC(URB):UFQADD:::PAR:ULXHL:DONE ' ADD IX,BC
DEFDD(&H19):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIX:::PAR:ULLXL:UADI:::PAR:ULRADD(URE):ULWZD:::ULXLL:UNOP:ULLXH:::PAR:ULRADC(URD):UFQADD:::PAR:ULXHL:DONE ' ADD IX,DE
DEFDD(&H29):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIX:::PAR:ULLXL:UADI:::PAR:ULXADD(UXL):ULWZD:::ULXLL:UNOP:ULLXH:::PAR:ULXADC(UXH):UFQADD:::PAR:ULXHL:DONE ' ADD IX,IX
DEFDD(&H39):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIX:::PAR:ULLXL:UADI:::PAR:ULXADD(USL):ULWZD:::ULXLL:UNOP:ULLXH:::PAR:ULXADC(USH):UFQADD:::PAR:ULXHL:DONE ' ADD IX,SP
DEFFD(&H09):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIY:::PAR:ULLYL:UADI:::PAR:ULRADD(URC):ULWZD:::ULYLL:UNOP:ULLYH:::PAR:ULRADC(URB):UFQADD:::PAR:ULYHL:DONE ' ADD IY,BC
DEFFD(&H19):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIY:::PAR:ULLYL:UADI:::PAR:ULRADD(URE):ULWZD:::ULYLL:UNOP:ULLYH:::PAR:ULRADC(URD):UFQADD:::PAR:ULYHL:DONE ' ADD IY,DE
DEFFD(&H29):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIY:::PAR:ULLYL:UADI:::PAR:ULXADD(UYL):ULWZD:::ULYLL:UNOP:ULLYH:::PAR:ULXADC(UYH):UFQADD:::PAR:ULYHL:DONE ' ADD IY,IY
DEFFD(&H39):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIY:::PAR:ULLYL:UADI:::PAR:ULXADD(USL):ULWZD:::ULYLL:UNOP:ULLYH:::PAR:ULXADC(USH):UFQADD:::PAR:ULYHL:DONE ' ADD IY,SP
' JP(IXY) 
DEFDD(&HE9):UAPCI:UFET:UAIRIUF:::PAR:URALF:USEIX:DONE 'JP (IX)
DEFFD(&HE9):UAPCI:UFET:UAIRIUF:::PAR:URALF:USEIY:DONE 'JP (IY)
' LD IXY,**
DEFDD(&H21):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:::PAR:URCW:ULXLT:::UAPCI:UTRD:::PAR:URCW:PAR:ULXHT:DONE ' LD IX,**
DEFFD(&H21):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:::PAR:URCW:ULYLT:::UAPCI:UTRD:::PAR:URCW:PAR:ULYHT:DONE ' LD IY,**
' LD SP,IXY
DEFDD(&HF9):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIX:::ULSPD:PAR:UNOP:DONE ' LD SP,IX
DEFFD(&HF9):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDIY:::ULSPD:PAR:UNOP:DONE ' LD SP,IY
' PUSH IX/IY, PUSH _11XX0101, POP IX/IY , POP _ 11XX0001
DEFDD(&HE5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UXHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UXLWR:::UWCW:PAR:UDOW:DONE ' PUSH IX
DEFFD(&HE5):UAPCI:UFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UYHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UYLWR:::UWCW:PAR:UDOW:DONE ' PUSH IY
DEFDD(&HE1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULXLT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:PAR:ULXHT:DONE ' POP IX
DEFFD(&HE1):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULYLT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:PAR:ULYHT:DONE ' POP IX
' EX (SP),IX, EX (SP),IY
DEFDD(&HE3):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:UADIWZ:::PAR:URCW:ULZT:::UAAD:UTRD:::PAR:URCW:ULWT:::USPI:::PAR:UADSP:UXHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UXLWR:::UWCW:::PAR:UDOW:ULDWZ:::ULIXD:PAR:UNOP:DONE
DEFFD(&HE3):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:UADIWZ:::PAR:URCW:ULZT:::UAAD:UTRD:::PAR:URCW:ULWT:::USPI:::PAR:UADSP:UYHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UYLWR:::UWCW:::PAR:UDOW:ULDWZ:::ULIYD:PAR:UNOP:DONE
' INC/DEC IXY 
DEFDD(&H23):UAPCI:UFET:UAIRIUF:URALF:UIXI:PAR:UNOP:DONE ' INC IX
DEFDD(&H2B):UAPCI:UFET:UAIRIUF:URALF:UIXD:PAR:UNOP:DONE ' DEC IX
DEFFD(&H23):UAPCI:UFET:UAIRIUF:URALF:UIYI:PAR:UNOP:DONE ' INC IY
DEFFD(&H2B):UAPCI:UFET:UAIRIUF:URALF:UIYD:PAR:UNOP:DONE ' DEC IY
' LD (**),IXY, LD IXY,(**)
DEFDD(&H22):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:UXLWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UXHWR:::UWCW:PAR:UDOW:DONE ' LD (**),IX
DEFFD(&H22):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:UYLWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UYHWR:::UWCW:PAR:UDOW:DONE ' LD (**),IY
DEFDD(&H2A):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULXLT:::UAWZ:UTRD:::PAR:URCW:PAR:ULXHT:DONE ' LD IX,(**)
DEFFD(&H2A):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULYLT:::UAWZ:UTRD:::PAR:URCW:PAR:ULYHT:DONE ' LD IY,(**)
' LD (IX+$),*, LD (IY+$),* 
DEFDD(&H36):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UTRD:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UTWR:::PAR:UWCW:UALF:::PAR:UDOW:DONE 
DEFFD(&H36):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UTRD:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UTWR:::PAR:UWCW:UALF:::PAR:UDOW:DONE 
' INC/DEC XLH, INC/DEC YLH
DEFDD(&H24):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLXH:::EXT:UOINC:PAR:ULXHL:DONE ' INC XH
DEFDD(&H2C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLXL:::EXT:UOINC:PAR:ULXLL:DONE ' INC XL
DEFDD(&H25):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLXH:::EXT:UODEC:PAR:ULXHL:DONE ' DEC XH
DEFDD(&H2D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLXL:::EXT:UODEC:PAR:ULXLL:DONE ' DEC XL
DEFFD(&H24):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLYH:::EXT:UOINC:PAR:ULYHL:DONE ' INC YH
DEFFD(&H2C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLYL:::EXT:UOINC:PAR:ULYLL:DONE ' INC YL
DEFFD(&H25):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLYH:::EXT:UODEC:PAR:ULYHL:DONE ' DEC YH
DEFFD(&H2D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLYL:::EXT:UODEC:PAR:ULYLL:DONE ' DEC YL 
' LD XHL,*, LD YHL,*
DEFDD(&H26):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:URCW:EXT:UNOP:PAR:ULXHT:DONE ' LD IXH,*
DEFDD(&H2E):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:URCW:EXT:UNOP:PAR:ULXLT:DONE ' LD IXL,*
DEFFD(&H26):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:URCW:EXT:UNOP:PAR:ULYHT:DONE ' LD IYH,*
DEFFD(&H2E):UAPCI:UFET:::UAIRIUF:::URALF:::UAPCI:UTRD:URCW:EXT:UNOP:PAR:ULYLT:DONE ' LD IYL,*
' LD IXH,R _01XXXZZZ XXX/ZZZ ARE BCDE(XH)(XL)(IX+$)A  
DEFDD(&H60):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URB):PAR:ULXHT:DONE ' LD XH,B
DEFDD(&H61):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URC):PAR:ULXHT:DONE ' LD XH,C
DEFDD(&H62):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URD):PAR:ULXHT:DONE ' LD XH,D
DEFDD(&H63):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URE):PAR:ULXHT:DONE ' LD XH,E
DEFDD(&H64):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULXHT:DONE ' LD XH,XH
DEFDD(&H65):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULXHT:DONE ' LD XH,XL
DEFDD(&H67):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URA):PAR:ULXHT:DONE ' LD XH,A
' LD IXL,R _01XXXZZZ XXX/ZZZ ARE BCDE(XH)(XL)(IX+$)A  
DEFDD(&H68):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URB):PAR:ULXLT:DONE ' LD XL,B
DEFDD(&H69):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URC):PAR:ULXLT:DONE ' LD XL,C
DEFDD(&H6A):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URD):PAR:ULXLT:DONE ' LD XL,D
DEFDD(&H6B):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URE):PAR:ULXLT:DONE ' LD XL,E
DEFDD(&H6C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULXLT:DONE ' LD XL,XH
DEFDD(&H6D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULXLT:DONE ' LD XL,XL
DEFDD(&H6F):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URA):PAR:ULXLT:DONE ' LD XL,A
' LD IYH,R _01XXXZZZ XXX/ZZZ ARE BCDE(YH)(YL)(IX+$)A  
DEFFD(&H60):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URB):PAR:ULYHT:DONE ' LD YH,B
DEFFD(&H61):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URC):PAR:ULYHT:DONE ' LD YH,C
DEFFD(&H62):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URD):PAR:ULYHT:DONE ' LD YH,D
DEFFD(&H63):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URE):PAR:ULYHT:DONE ' LD YH,E
DEFFD(&H64):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULYHT:DONE ' LD YH,YH
DEFFD(&H65):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULYHT:DONE ' LD YH,YL
DEFFD(&H67):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URA):PAR:ULYHT:DONE ' LD YH,A
' LD IYL,R _01XXXZZZ XXX/ZZZ ARE BCDE(YH)(YL)(IX+$)A  
DEFFD(&H68):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URB):PAR:ULYLT:DONE ' LD YL,B
DEFFD(&H69):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URC):PAR:ULYLT:DONE ' LD YL,C
DEFFD(&H6A):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URD):PAR:ULYLT:DONE ' LD YL,D
DEFFD(&H6B):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URE):PAR:ULYLT:DONE ' LD YL,E
DEFFD(&H6C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULYLT:DONE ' LD YL,YH
DEFFD(&H6D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULYLT:DONE ' LD YL,YL
DEFFD(&H6F):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTR(URA):PAR:ULYLT:DONE ' LD YL,A
' INC (IX+$), DEC (IX+$), INC (IY+$), DEC (IY+$)
DEFDD(&H34):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOINC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
DEFDD(&H35):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UODEC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
DEFFD(&H34):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOINC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
DEFFD(&H35):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UODEC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
' LD (IX+$),R, LD (IY+$),R
DEFDD(&H70):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UBWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),B
DEFDD(&H71):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UCWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),C
DEFDD(&H72):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UDWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),D
DEFDD(&H73):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UEWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),E
DEFDD(&H74):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UHWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),H
DEFDD(&H75):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:ULWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),L
DEFDD(&H77):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UAWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IX+$),A
DEFFD(&H70):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UBWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),B
DEFFD(&H71):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UCWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),C
DEFFD(&H72):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UDWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),D
DEFFD(&H73):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UEWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),E
DEFFD(&H74):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UHWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),H
DEFFD(&H75):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:ULWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),L
DEFFD(&H77):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UAWR:::PAR:UWCW:UALF:PAR:UDOW:DONE ' LD (IY+$),A
' LD R,(IX+$), LD R,(IY+$)
DEFDD(&H46):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URB):DONE ' LD B,(IX+$)
DEFDD(&H4E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URC):DONE ' LD C,(IX+$)
DEFDD(&H56):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URD):DONE ' LD D,(IX+$)
DEFDD(&H5E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URE):DONE ' LD E,(IX+$)
DEFDD(&H66):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URH):DONE ' LD H,(IX+$)
DEFDD(&H6E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URL):DONE ' LD L,(IX+$)
DEFDD(&H7E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URA):DONE ' LD A,(IX+$)
DEFFD(&H46):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URB):DONE ' LD B,(IY+$)
DEFFD(&H4E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URC):DONE ' LD C,(IY+$)
DEFFD(&H56):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URD):DONE ' LD D,(IY+$)
DEFFD(&H5E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URE):DONE ' LD E,(IY+$)
DEFFD(&H66):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URH):DONE ' LD H,(IY+$)
DEFFD(&H6E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URL):DONE ' LD L,(IY+$)
DEFFD(&H7E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:URCW:EXT:UNOP:PAR:ULRT(URA):DONE ' LD A,(IY+$)
' LD R,XH, LD R,XL  
DEFDD(&H44):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULRT(URB):DONE ' LD B,XH 
DEFDD(&H4C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULRT(URC):DONE ' LD C,XH 
DEFDD(&H54):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULRT(URD):DONE ' LD D,XH 
DEFDD(&H5C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULRT(URE):DONE ' LD E,XH 
DEFDD(&H7C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXH:PAR:ULRT(URA):DONE ' LD A,XH 
DEFDD(&H45):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULRT(URB):DONE ' LD B,XL 
DEFDD(&H4D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULRT(URC):DONE ' LD C,XL 
DEFDD(&H55):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULRT(URD):DONE ' LD D,XL 
DEFDD(&H5D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULRT(URE):DONE ' LD E,XL 
DEFDD(&H7D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTXL:PAR:ULRT(URA):DONE ' LD A,XL 
' LD R,YH, LD R,YL  
DEFFD(&H44):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULRT(URB):DONE ' LD B,YH 
DEFFD(&H4C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULRT(URC):DONE ' LD C,YH 
DEFFD(&H54):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULRT(URD):DONE ' LD D,YH 
DEFFD(&H5C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULRT(URE):DONE ' LD E,YH 
DEFFD(&H7C):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYH:PAR:ULRT(URA):DONE ' LD A,YH 
DEFFD(&H45):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULRT(URB):DONE ' LD B,YL 
DEFFD(&H4D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULRT(URC):DONE ' LD C,YL 
DEFFD(&H55):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULRT(URD):DONE ' LD D,YL 
DEFFD(&H5D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULRT(URE):DONE ' LD E,YL 
DEFFD(&H7D):UAPCI:UFET:UAIRIUF:URALF:EXT:ULTYL:PAR:ULRT(URA):DONE ' LD A,YL 
' ALUOP A,XH
DEFDD(&H84):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADD(UXH):PAR:ULRAL:DONE
DEFDD(&H8C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADC(UXH):PAR:ULRAL:DONE
DEFDD(&H94):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSUB(UXH):PAR:ULRAL:DONE
DEFDD(&H9C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSBC(UXH):PAR:ULRAL:DONE
DEFDD(&HA4):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXAND(UXH):PAR:ULRAL:DONE
DEFDD(&HAC):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXXOR(UXH):PAR:ULRAL:DONE
DEFDD(&HB4):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXOR(UXH)::PAR:ULRAL:DONE
DEFDD(&HBC):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:ULXCP(UXH):DONE
' ALUOP A,XL
DEFDD(&H85):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADD(UXL):PAR:ULRAL:DONE
DEFDD(&H8D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADC(UXL):PAR:ULRAL:DONE
DEFDD(&H95):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSUB(UXL):PAR:ULRAL:DONE
DEFDD(&H9D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSBC(UXL):PAR:ULRAL:DONE
DEFDD(&HA5):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXAND(UXL):PAR:ULRAL:DONE
DEFDD(&HAD):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXXOR(UXL):PAR:ULRAL:DONE
DEFDD(&HB5):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXOR(UXL)::PAR:ULRAL:DONE
DEFDD(&HBD):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:ULXCP(UXL):DONE
' ALUOP A,YH
DEFFD(&H84):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADD(UYH):PAR:ULRAL:DONE
DEFFD(&H8C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADC(UYH):PAR:ULRAL:DONE
DEFFD(&H94):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSUB(UYH):PAR:ULRAL:DONE
DEFFD(&H9C):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSBC(UYH):PAR:ULRAL:DONE
DEFFD(&HA4):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXAND(UYH):PAR:ULRAL:DONE
DEFFD(&HAC):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXXOR(UYH):PAR:ULRAL:DONE
DEFFD(&HB4):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXOR(UYH)::PAR:ULRAL:DONE
DEFFD(&HBC):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:ULXCP(UYH):DONE
' ALUOP A,YL
DEFFD(&H85):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADD(UYL):PAR:ULRAL:DONE
DEFFD(&H8D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXADC(UYL):PAR:ULRAL:DONE
DEFFD(&H95):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSUB(UYL):PAR:ULRAL:DONE
DEFFD(&H9D):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXSBC(UYL):PAR:ULRAL:DONE
DEFFD(&HA5):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXAND(UYL):PAR:ULRAL:DONE
DEFFD(&HAD):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXXOR(UYL):PAR:ULRAL:DONE
DEFFD(&HB5):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:ULXOR(UYL)::PAR:ULRAL:DONE
DEFFD(&HBD):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:PAR:ULXCP(UYL)::DONE
' ALUOP WITH A,(IX+$) ADD,ADC,SUB,SBC,AND,XOR,OR,CP
DEFDD(&H86):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTADD:::PAR:ULRAL:DONE
DEFDD(&H8E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTADC:::PAR:ULRAL:DONE
DEFDD(&H96):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTSUB:::PAR:ULRAL:DONE
DEFDD(&H9E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTSBC:::PAR:ULRAL:DONE
DEFDD(&HA6):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTAND:::PAR:ULRAL:DONE
DEFDD(&HAE):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTXOR:::PAR:ULRAL:DONE
DEFDD(&HB6):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTOR:::PAR:ULRAL:DONE
DEFDD(&HBE):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLXL:::ULTSADD:ULRZL:ULLXH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTCP:::PAR:ULRAL:DONE
' ALUOP WITH A,(IY+$) ADD,ADC,SUB,SBC,AND,XOR,OR,CP
DEFFD(&H86):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTADD:::PAR:ULRAL:DONE
DEFFD(&H8E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTADC:::PAR:ULRAL:DONE
DEFFD(&H96):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTSUB:::PAR:ULRAL:DONE
DEFFD(&H9E):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTSBC:::PAR:ULRAL:DONE
DEFFD(&HA6):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTAND:::PAR:ULRAL:DONE
DEFFD(&HAE):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTXOR:::PAR:ULRAL:DONE
DEFFD(&HB6):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTOR:::PAR:ULRAL:DONE
DEFFD(&HBE):UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULLYL:::ULTSADD:ULRZL:ULLYH:UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRA:::EXT:ULTCP:::PAR:ULRAL:DONE

' - - - - - - - - - - - - - - - ED PAGE OPCODES IN ORDER OF APPEARANCE - - - - - - - - - - - - - -  

' ALL IN OUT (C)
For REG=0 To 7: If REG<>6 Then 
DEFED(&H40+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:UADBC:URCW:::PAR:UTIO:UADIWZ:::PAR:URCW:ULLRT:::EXT:UOQIO:PAR:ULRT(7-REG):DONE ' IN R,(C) HAS F AFF
DEFED(&H41+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:::PAR:UADBC:URWR(7-REG):::PAR:UWCW:UADIWZ:::UPOW:PAR:UWCW:DONE ' OUT (C),R NO F AFF
Else
DEFED(&H40+(&B110 Shl 3)):UAPCI:UFET:UAIRIUF:URALF:UADBC:URCW:::PAR:UTIO:UADIWZ::::PAR:URCW:ULLRT:::EXT:PAR:UOQIO:DONE ' IN NONE,(C) HAS F AFF
DEFED(&H41+(&B110 Shl 3)):UAPCI:UFET:UAIRIUF:URALF:::PAR:UADBC:UNWR:::PAR:UWCW:UADIWZ:::UPOW:PAR:UWCW:DONE:EndIf:Next ' OUT (C),0 NO F AFF
' ALL ADC/SBC HL,RR
DEFED(&H4A):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRADC(URC):ULWZD:::ULRLL:UNOP:ULLRH:ULRADC(URB):::PAR:ULRHL:UFHLZ:DONE ' ADC HL,BC
DEFED(&H5A):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRADC(URE):ULWZD:::ULRLL:UNOP:ULLRH:ULRADC(URD):::PAR:ULRHL:UFHLZ:DONE ' ADC HL,DE
DEFED(&H6A):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRADC(URL):ULWZD:::ULRLL:UNOP:ULLRH:ULRADC(URH):::PAR:ULRHL:UFHLZ:DONE ' ADC HL,HL
DEFED(&H7A):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULXADC(USL):ULWZD:::ULRLL:UNOP:ULLRH:ULXADC(USH):::PAR:ULRHL:UFHLZ:DONE ' ADC HL,SP
DEFED(&H42):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRSBC(URC):ULWZD:::ULRLL:UNOP:ULLRH:ULRSBC(URB):::PAR:ULRHL:UFHLZ:DONE ' SBC HL,BC
DEFED(&H52):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRSBC(URE):ULWZD:::ULRLL:UNOP:ULLRH:ULRSBC(URD):::PAR:ULRHL:UFHLZ:DONE ' SBC HL,DE
DEFED(&H62):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULRSBC(URL):ULWZD:::ULRLL:UNOP:ULLRH:ULRSBC(URH):::PAR:ULRHL:UFHLZ:DONE ' SBC HL,HL
DEFED(&H72):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULDHL:::PAR:ULLRL:UADI:::PAR:ULXSBC(USL):ULWZD:::ULRLL:UNOP:ULLRH:ULXSBC(USH):::PAR:ULRHL:UFHLZ:DONE ' SBC HL,SP
' ALL LD (**),RR  LD RR,(**)
DEFED(&H43):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:UCWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UBWR:::UWCW:PAR:UDOW:DONE ' LD (**),BC
DEFED(&H53):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:UEWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UDWR:::UWCW:PAR:UDOW:DONE ' LD (**),DE
DEFED(&H63):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:ULWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:UHWR:::UWCW:PAR:UDOW:DONE ' LD (**),HL
DEFED(&H73):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::PAR:UAWZ:USLWR:::PAR:UWCW:UWZI:::UDOW:::PAR:UAWZ:USHWR:::UWCW:PAR:UDOW:DONE ' LD (**),SP
DEFED(&H4B):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULRCT:::UAWZ:UTRD:::PAR:URCW:PAR:ULRBT:DONE ' LD BC,(**)
DEFED(&H5B):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULRET:::UAWZ:UTRD:::PAR:URCW:PAR:ULRDT:DONE ' LD DE,(**)
DEFED(&H6B):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULRLT:::UAWZ:UTRD:::PAR:URCW:PAR:ULRHT:DONE ' LD HL,(**)
DEFED(&H7B):::UAPCI:UFET:UAIRIUF:URALF:UAPCI:UTRD:::PAR:URCW:ULZT:::UAPCI:UTRD:::PAR:URCW:ULWT:::UAWZ:::PAR:UTRD:UWZI:::PAR:URCW:ULSLT:::UAWZ:UTRD:::PAR:URCW:PAR:ULSHT:DONE ' LD SP,(**)
' ALL NEGs _01XXX100, RETNs, RETI SAME AS RETN, IDENTIFIED ONLY BY EXTERNAL HARDWARE, 2T LATE IFF2 TO IFTT1
For REG=0 To 7:
DEFED(&H44+(REG Shl 3)):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRA:::EXT:UONEG:PAR:ULRAL:DONE ' NEG
DEFED(&H45+(REG Shl 3)):UAPCI:UFET:UAIRIUF:URALF:UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULZT:::UADSP:::PAR:UTRD:USPI:::PAR:URCW:ULWT:USEWZ:EXT:UNOP:PAR:UCFF:DONE:Next ' RETN/RETI
' ALL IMs 1T LATE SETUP IM MODE
DEFED(&H46):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM0:DONE 'im 0
DEFED(&H66):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM0:DONE 'im 0
DEFED(&H4E):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM0:DONE 'im 0
DEFED(&H6E):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM1:DONE 'im 1
DEFED(&H56):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM1:DONE 'im 1
DEFED(&H76):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM1:DONE 'im 1
DEFED(&H5E):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM2:DONE 'im 2
DEFED(&H7E):UAPCI:UFET:UAIRIUF:URALF:EXT:PAR:UIM2:DONE 'im 2
' LD OF I AND R 
DEFED(&H57):UAPCI:UFET:UAIRIUF:URALF:ULLRI:EXT:UFQIR:PAR:ULRAL:DONE 'ld a,i USE ALU AND DUMMY OP TO SET FLG
DEFED(&H5F):UAPCI:UFET:UAIRIUF:URALF:ULLRR:EXT:UFQIR:PAR:ULRAL:DONE 'ld a,r USE ALU AND DUMMY OP TO SET FLG
DEFED(&H47):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULRIA:::PAR:UNOP:DONE ' ld i,a
DEFED(&H4F):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULRRA:::PAR:UNOP:DONE ' ld r,a
' BOTH RRD AND RLD
DEFED(&H67):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:URCW:ULLRT:UORVN:ULRTL:ULANLH:::PAR:UAHL:UOWR:::UWCW:::PAR:UDOW:ULLRA:::EXT:PAR:ULTNHL:UOFRXD:::PAR:ULRAL:DONE ' RRD
DEFED(&H6F):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:URCW:ULLRT:UORVN:ULRTL:ULANLL:::PAR:UAHL:UOWR:::UWCW:::PAR:UDOW:ULLRA:::EXT:PAR:ULTNLL:UOFRXD:::PAR:ULRAL:DONE ' RLD
' LDI LDD, LDIR LDDR 
DEFED(&HA0):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLI:::URCW:::PAR:UADDE:UTWR:::PAR:UWCW:UDEI:::UDOW:UBCDPV:ULLRT:EXT:PAR:ULAQLD:DONE ' LDI
DEFED(&HA8):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLD:::URCW:::PAR:UADDE:UTWR:::PAR:UWCW:UDED:::UDOW:UBCDPV:ULLRT:EXT:PAR:ULAQLD:DONE ' LDD
DEFED(&HB0):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLI:::URCW:::PAR:UADDE:UTWR:::PAR:UWCW:UDEI:::UDOW:UBCDPV:SKIP6PE:::ULDPC:UADD:ULWZD:UADD:ULPCD:ULWQLD:DONE:ULLRT:EXT:PAR:ULAQLD:DONE ' LDIR
DEFED(&HB8):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLD:::URCW:::PAR:UADDE:UTWR:::PAR:UWCW:UDED:::UDOW:UBCDPV:SKIP6PE:::ULDPC:UADD:ULWZD:UADD:ULPCD:ULWQLD:DONE:ULLRT:EXT:PAR:ULAQLD:DONE ' LDDR 
' CPI CPD CPIR CPDR 
DEFED(&HA1):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLI:::URCW:ULLRA:UWZI:ULTCPX:UBCDPV:ULLRA:EXT:PAR:ULTCPQ:DONE ' CPI
DEFED(&HA9):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLD:::URCW:ULLRA:UWZD:ULTCPX:UBCDPV:ULLRA:EXT:PAR:ULTCPQ:DONE ' CPD
DEFED(&HB1):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLI:::URCW:ULLRA:UWZI:ULTCPX:UBCDPV:SKIP6PEZ:ULDPC:UADD:ULWZD:UADD:ULPCD:ULWQLD:DONE:ULLRA:EXT:PAR:ULTCPQ:DONE ' CPIR
DEFED(&HB9):UAPCI:UFET:UAIRIUF:URALF:UAHL:::PAR:UTRD:UHLD:::URCW:ULLRA:UWZD:ULTCPX:UBCDPV:SKIP6PEZ:ULDPC:UADD:ULWZD:UADD:ULPCD:ULWQLD:DONE:ULLRA:EXT:PAR:ULTCPQ:DONE ' CPDR
' INI IND INIR INDR
DEFED(&HA2):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:::UODEC:::PAR:UADBC:ULRBL:::PAR:URCW:UADIWZ:::PAR:UTIO:ULLRZ:::PAR:URCW:UTADDQ:::PAR:UAHL:UTWR:::PAR:UWCW:UHLI:::PAR:UDOW:UBXORQ:DONE ' INI
DEFED(&HAA):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:::UODEC:::PAR:UADBC:ULRBL:::PAR:URCW:UADDWZ:::PAR:UTIO:ULLRZ:::PAR:URCW:UTADDQ:::PAR:UAHL:UTWR:::PAR:UWCW:UHLD:::PAR:UDOW:UBXORQ:DONE ' IND
DEFED(&HB2):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:::UODEC:::PAR:UADBC:ULRBL:::PAR:URCW:UADIWZ:::PAR:UTIO:ULLRZ:::PAR:URCW:UTADDQ:::PAR:UAHL:UTWR:::PAR:UWCW:UHLI:::PAR:UDOW:UBXORQ:ECCZ:ULDPC:UADDWZ:UADD:ULPCD:PAR:UNOP:DONE ' INIR
DEFED(&HBA):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:::UODEC:::PAR:UADBC:ULRBL:::PAR:URCW:UADDWZ:::PAR:UTIO:ULLRZ:::PAR:URCW:UTADDQ:::PAR:UAHL:UTWR:::PAR:UWCW:UHLD:::PAR:UDOW:UBXORQ:ECCZ:ULDPC:UADDWZ:UADD:ULPCD:PAR:UNOP:DONE ' INDR
' OUTI OUTD OTIR OTDR MUST BE ULLRZ FOR UTADDQ/D BUT FITS ULLRL
DEFED(&HA3):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:UODEC:::PAR:UAHL:ULRBL:::PAR:UTRD:UHLI:::PAR:URCW:ULLRL:::PAR:UADBC:UTWR:::PAR:UWCW:UADIWZ:::PAR:UPOW:UTADDQ:::PAR:UWCW:UBXORQ:DONE ' OUTI
DEFED(&HAB):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:UODEC:::PAR:UAHL:ULRBL:::PAR:UTRD:UHLD:::PAR:URCW:ULLRL:::PAR:UADBC:UTWR:::PAR:UWCW:UADDWZ:::PAR:UPOW:UTADDQ:::PAR:UWCW:UBXORQ:DONE ' OUTD
DEFED(&HB3):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:UODEC:::PAR:UAHL:ULRBL:::PAR:UTRD:UHLI:::PAR:URCW:ULLRL:::PAR:UADBC:UTWR:::PAR:UWCW:UADIWZ:::PAR:UPOW:UTADDQ:::PAR:UWCW:UBXORQ:ECCZ:::ULDPC:UADDWZ:UADD:ULPCD:PAR:UNOP:DONE ' OTIR
DEFED(&HBB):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLRB:UODEC:::PAR:UAHL:ULRBL:::PAR:UTRD:UHLD:::PAR:URCW:ULLRL:::PAR:UADBC:UTWR:::PAR:UWCW:UADDWZ:::PAR:UPOW:UTADDQ:::PAR:UWCW:UBXORQ:ECCZ:::ULDPC:UADDWZ:UADD:ULPCD:PAR:UNOP:DONE ' OTDR

' - - - - - - - - - - - - - - - CB/DDCB/FDCB PAGE OPCODES - - - - - - - - - - - - - -  

' CB SHIFTS R8 ONLY, _00XXXZZZ, XXX IS ALUO, ' DD/FB-CBs ARE (IXY$),R8, ORDER rlc/rrc/rl/rr/sla/sra/sll/srl
For REG = 0 To 7: If REG<>6 Then
' GEN NON (HL) SHIFT PAIRS FOR CB
DEFCB(&H00+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UORLC:PAR:ULRL(7-REG):DONE
DEFCB(&H08+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UORRC:PAR:ULRL(7-REG):DONE
DEFCB(&H10+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UORL:PAR:ULRL(7-REG):DONE
DEFCB(&H18+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UORR:PAR:ULRL(7-REG):DONE
DEFCB(&H20+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UOSLA:PAR:ULRL(7-REG):DONE
DEFCB(&H28+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UOSRA:PAR:ULRL(7-REG):DONE
DEFCB(&H30+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UOSLL:PAR:ULRL(7-REG):DONE
DEFCB(&H38+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UOSRL:PAR:ULRL(7-REG):DONE
' GEN 64 DDCB (IX+$),R ORDER rlc/rrc/rl/rr/sla/sra/sll/srl
DEFDDCB(&H00+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORLC:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R	
DEFDDCB(&H08+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORRC:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H10+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORL::::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H18+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORR::::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H20+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLA:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H28+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRA:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H30+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLL:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
DEFDDCB(&H38+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRL:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IX$),R
' GEN 64 FDCB (IY+$),R ORDER rlc/rrc/rl/rr/sla/sra/sll/srl
DEFFDCB(&H00+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORLC:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H08+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORRC:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H10+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORL::::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H18+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORR::::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H20+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLA:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H28+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRA:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H30+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLL:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
DEFFDCB(&H38+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRL:::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE ' DDCB (IY$),R
' GEN 0-7 SINGLE BIT OPS
For REGL=0 To 7
' GEN NON(HL)CB 64 BIT-RES-SET
DEFCB(&H40+(REGL Shl 3)+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:PAR:UOBIT(REGL):DONE
DEFCB(&H80+(REGL Shl 3)+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UORES(REGL):PAR:ULRL(7-REG):DONE
DEFCB(&HC0+(REGL Shl 3)+REG):UAPCI:UFET:UAIRIUF:::PAR:URALF:ULLR(7-REG):::EXT:UOSET(REGL):PAR:ULRL(7-REG):DONE
' GEN 64 DDCB BIT(NO ,R)-RES-SET,R UPDATE
DEFDDCB(&H40+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOBIT(REGL):EXT:PAR:UWBITQ:DONE
DEFDDCB(&H80+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORES(REGL):::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE	
DEFDDCB(&HC0+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSET(REGL):::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE
' GEN 64 FDCB BIT(NO ,R)-RES-SET,R UPDATE
DEFFDCB(&H40+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOBIT(REGL):EXT:PAR:UWBITQ:DONE
DEFFDCB(&H80+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORES(REGL):::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE	
DEFFDCB(&HC0+(REGL Shl 3)+REG):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSET(REGL):::PAR:UAWZ:UOWR:::UWCW:UDOW:EXT:UNOP:PAR:ULRL(7-REG):DONE
Next
Else ' GEN HERE SKIPPED BY<>6 OPCODES
' GEN (HL) PAIRS FOR CB
DEFCB(&H00+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UORLC:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H08+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UORRC:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H10+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UORL:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H18+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UORR:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H20+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOSLA:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H28+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOSRA:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H30+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOSLL:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&H38+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOSRL:::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
' GEN 64 DDCB (IX+$),R ORDER rlc/rrc/rl/rr/sla/sra/sll/srl
DEFDDCB(&H00+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORLC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)	
DEFDDCB(&H08+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORRC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H10+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORL::::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H18+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORR::::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H20+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLA:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H28+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRA:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H30+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLL:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
DEFDDCB(&H38+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRL:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IX$)
' GEN 64 FDCB (IY+$),R ORDER rlc/rrc/rl/rr/sla/sra/sll/srl
DEFFDCB(&H00+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORLC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H08+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORRC:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H10+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORL::::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H18+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORR::::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H20+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLA:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H28+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRA:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H30+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSLL:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
DEFFDCB(&H38+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSRL:::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE ' DDCB (IY$)
' GEN 0-7 SINGLE BIT OPS
For REGL=0 To 7 ' GEN (HL)CB 64 BIT-RES-SET
DEFCB(&H40+(REGL Shl 3)+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOBIT(REG):EXT:PAR:UWBITQ:DONE
DEFCB(&H80+(REGL Shl 3)+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UORES(REG):::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
DEFCB(&HC0+(REGL Shl 3)+&B110):UAPCI:UFET:UAIRIUF:URALF:UAHL:UTRD:::PAR:URCW:ULLRT:::UOSET(REG):::PAR:UAHL:UOWR:::UWCW:PAR:UDOW:DONE
' GEN 64 DDCB BIT(NO ,R)-RES-SET NO ,R UPDATE
DEFDDCB(&H40+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOBIT(REGL):EXT:PAR:UWBITQ:DONE
DEFDDCB(&H80+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORES(REGL):::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE	
DEFDDCB(&HC0+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLXL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLXH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSET(REGL):::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
' GEN 64 FDCB BIT(NO ,R)-RES-SET NO ,R UPDATE
DEFFDCB(&H40+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOBIT(REGL):EXT:PAR:UWBITQ:DONE
DEFFDCB(&H80+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UORES(REGL):::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE	
DEFFDCB(&HC0+(REGL Shl 3)+&B110):UAPCI:UTRD:::PAR:URCW:ULLYL:::PAR:UAPCI:ULTSADD:::PAR:UFET:ULRZL:::PAR:URCW:ULLYH:::UOSADDC:ULRWL:::PAR:UAWZ:UALF:::UTRD:::PAR:URCW:ULLRT:::UOSET(REGL):::PAR:UAWZ:UOWR:::UWCW:PAR:UDOW:DONE
Next:EndIf:Next

' - - - - - - - - INTERRUPT SEQUENCES  - - - - - - - - - - - - - -  

' - IM0/1 HERE
DEFINT0:DEFINT1:UIFF:UNOP:UIMRQ:UIMFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::PAR:UDOW:ULZN(&B111):::PAR:UADSP:UPLWR:::UWCW:::PAR:UDOW:ULW0:USEWZ:DONE ' ALIKE RST38H AND IM2 VECTOR REQ
' - IM2 HERE
DEFINT2:UIFF:UNOP:UIMRQ:UIMFET:UAIRIUF:URALF:USPD:::PAR:UADSP:UPHWR:::PAR:UWCW:USPD:::UDOW:::PAR:UADSP:UPLWR:::PAR:UWCW:ULZT:::PAR:UDOW:ULWI:::UAWZ:::PAR:UTRD:UWZI:::PAR:ULDWZ:ULZT:::UAAD:UTRD:::PAR:URCW:ULWT:USEWZ:DONE ' IS IM2 VECTOR CALL

' - - - - - - - - - - - - - - - UOP REWRITES TO DIRECT VERSIONS - - - - - - - - - - - - - -  

For TT1=0 To UOPMAX-1:MT1=*(PMOS+TT1):MT2=MT1 And &H1FF:MT3=(MT1 Shr 9) And &H7F ' GET UOP AND ITS PARAMETER
If MT2=IULLR	Then *(PMOS+TT1)=IULLRB+(7-MT3)  
If MT2=IULRL	Then *(PMOS+TT1)=IULRBL+(7-MT3)  
If MT2=IULTR	Then *(PMOS+TT1)=IULTB+(7-MT3)  
If MT2=IULRT	Then *(PMOS+TT1)=IULBT+(7-MT3)  
If MT2=IURWR	Then *(PMOS+TT1)=IUBWR+(7-MT3)
If MT2=IULRADD	Then *(PMOS+TT1)=IULBADD+(7-MT3)
If MT2=IULRADC	Then *(PMOS+TT1)=IULBADC+(7-MT3)
If MT2=IULRSUB	Then *(PMOS+TT1)=IULBSUB+(7-MT3)
If MT2=IULRSBC	Then *(PMOS+TT1)=IULBSBC+(7-MT3)
If MT2=IULRAND	Then *(PMOS+TT1)=IULBAND+(7-MT3)
If MT2=IULRXOR	Then *(PMOS+TT1)=IULBXOR+(7-MT3)
If MT2=IULROR	Then *(PMOS+TT1)=IULBOR+(7-MT3)
If MT2=IULRCP	Then *(PMOS+TT1)=IULBCP+(7-MT3)
If MT2=IULXADD	Then *(PMOS+TT1)=IULXSADD+(5-MT3)
If MT2=IULXADC	Then *(PMOS+TT1)=IULXSADC+(5-MT3)
If MT2=IULXSUB	Then *(PMOS+TT1)=IULXSSUB+(5-MT3)
If MT2=IULXSBC	Then *(PMOS+TT1)=IULXSSBC+(5-MT3)
If MT2=IULXAND	Then *(PMOS+TT1)=IULXSAND+(5-MT3)
If MT2=IULXXOR	Then *(PMOS+TT1)=IULXSXOR+(5-MT3)
If MT2=IULXOR	Then *(PMOS+TT1)=IULXSOR+(5-MT3)
If MT2=IULXCP	Then *(PMOS+TT1)=IULXSCP+(5-MT3)
If MT2=IULZN	Then *(PMOS+TT1)=IULZ00+(MT3)
*(PMOS+TT1) And= 511:Next
End Sub


' - - - - - - - - - - - - - - - THATS ALL FOR NMOS Z80 - - - - - - - - - - - - - -  
